%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: shader-rrt_pp.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: tanglei
%%CreationDate: 2015-03-27, 16:31:10
%%BoundingBox: 0 0 329 273
%%HiResBoundingBox: 0 0 328.5300 272.9850
%%CropBox: 0 0 328.5300 272.9850
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1191 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-03-27T16:29:57+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2010 Trial"
   xmp:ModifyDate="2015-03-27T16:31:01+08:00"
   xmp:MetadataDate="2015-03-27T16:31:01+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2010 Trial"
   xmpMM:DocumentID="uuid:c9eafefb-0026-4d0d-bf89-c11f056cf245"
   xmpMM:InstanceID="uuid:9ce685ed-ce4c-44dd-83b0-448b0318d2c1">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>tanglei</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -272.985 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 272.985 li
328.53 272.985 li
328.53 0 li
cp
clp
[1 0 0 1 -115.095 0 ]ct
442.5 169.5 mo
360 169.5 li
360 169.375 li
360 168.875 li
360 168.624 li
360 168.125 li
360.125 168 li
360.625 168 li
360.75 168.125 li
360.875 168 li
361.375 168 li
361.5 168.125 li
361.625 168 li
362.125 168 li
362.25 168.125 li
362.375 168 li
362.875 168 li
363 168.125 li
363.125 168 li
363.625 168 li
363.75 168.125 li
363.875 168 li
364.375 168 li
364.5 168.125 li
364.625 168 li
365.125 168 li
365.25 168.125 li
365.375 168 li
365.875 168 li
366 168.125 li
366.125 168 li
366.625 168 li
366.75 168.125 li
366.875 168 li
367.375 168 li
367.5 168.125 li
367.625 168 li
368.125 168 li
368.25 168.125 li
368.375 168 li
368.875 168 li
369 168.125 li
369.125 168 li
369.625 168 li
369.75 168.125 li
369.875 168 li
370.375 168 li
370.5 168.125 li
370.625 168 li
371.125 168 li
371.25 168.125 li
371.375 168 li
371.875 168 li
372 168.125 li
372.125 168 li
372.625 168 li
372.75 168.125 li
372.875 168 li
373.375 168 li
373.5 168.125 li
373.625 168 li
374.125 168 li
374.25 168.125 li
374.375 168 li
374.875 168 li
375 168.125 li
375.125 168 li
375.625 168 li
375.75 168.125 li
375.875 168 li
376.375 168 li
376.5 168.125 li
376.625 168 li
377.125 168 li
377.25 168.125 li
377.375 168 li
377.875 168 li
378 168.125 li
378.125 168 li
378.625 168 li
378.75 168.125 li
378.875 168 li
379.375 168 li
379.5 168.125 li
379.625 168 li
380.125 168 li
380.25 168.125 li
380.375 168 li
380.875 168 li
381 168.125 li
381.125 168 li
381.625 168 li
381.75 168.125 li
381.875 168 li
382.375 168 li
382.5 168.125 li
382.625 168 li
383.125 168 li
383.25 168.125 li
383.375 168 li
383.875 168 li
384 168.125 li
384.125 168 li
384.625 168 li
384.75 168.125 li
384.875 168 li
385.375 168 li
385.5 168.125 li
385.625 168 li
386.125 168 li
386.25 168.125 li
386.375 168 li
386.875 168 li
387 168.125 li
387.125 168 li
387.625 168 li
387.75 168.125 li
387.875 168 li
388.375 168 li
388.5 168.125 li
388.625 168 li
389.125 168 li
389.25 168.125 li
389.375 168 li
389.875 168 li
390 168.125 li
390.125 168 li
390.625 168 li
390.75 168.125 li
390.875 168 li
391.375 168 li
391.5 168.125 li
391.625 168 li
392.125 168 li
392.25 168.125 li
392.375 168 li
392.875 168 li
393 168.125 li
393.125 168 li
393.625 168 li
393.75 168.125 li
393.875 168 li
394.375 168 li
394.5 168.125 li
394.625 168 li
395.125 168 li
395.25 168.125 li
395.375 168 li
395.875 168 li
396 168.125 li
396.125 168 li
396.625 168 li
396.75 168.125 li
396.875 168 li
397.375 168 li
397.5 168.125 li
397.625 168 li
398.125 168 li
398.25 168.125 li
398.375 168 li
398.875 168 li
399 168.125 li
399.125 168 li
399.625 168 li
399.75 168.125 li
399.875 168 li
400.375 168 li
400.5 168.125 li
400.625 168 li
401.125 168 li
401.25 168.125 li
401.375 168 li
401.875 168 li
402 168.125 li
402.125 168 li
402.625 168 li
402.75 168.125 li
402.875 168 li
403.375 168 li
403.5 168.125 li
403.625 168 li
404.125 168 li
404.25 168.125 li
404.375 168 li
404.875 168 li
405 168.125 li
405.125 168 li
405.625 168 li
405.75 168.125 li
405.875 168 li
406.375 168 li
406.5 168.125 li
406.625 168 li
407.125 168 li
407.25 168.125 li
407.375 168 li
407.875 168 li
408 168.125 li
408.125 168 li
408.625 168 li
408.75 168.125 li
408.875 168 li
409.375 168 li
409.5 168.125 li
409.625 168 li
410.125 168 li
410.25 168.125 li
410.375 168 li
410.875 168 li
411 168.125 li
411.125 168 li
411.625 168 li
411.75 168.125 li
411.875 168 li
412.375 168 li
412.5 168.125 li
412.625 168 li
413.125 168 li
413.25 168.125 li
413.375 168 li
413.875 168 li
414 168.125 li
414.125 168 li
414.625 168 li
414.75 168.125 li
414.875 168 li
415.375 168 li
415.5 168.125 li
415.625 168 li
416.125 168 li
416.25 168.125 li
416.375 168 li
416.875 168 li
417 168.125 li
417.125 168 li
417.625 168 li
417.75 168.125 li
417.875 168 li
418.375 168 li
418.5 168.125 li
418.625 168 li
419.125 168 li
419.25 168.125 li
419.375 168 li
419.875 168 li
420 168.125 li
420.125 168 li
420.625 168 li
420.75 168.125 li
420.875 168 li
421.375 168 li
421.5 168.125 li
421.625 168 li
422.125 168 li
422.25 168.125 li
422.375 168 li
422.875 168 li
423 168.125 li
423.125 168 li
423.625 168 li
423.75 168.125 li
423.875 168 li
424.375 168 li
424.5 168.125 li
424.625 168 li
425.125 168 li
425.25 168.125 li
425.375 168 li
425.875 168 li
426 168.125 li
426.125 168 li
426.625 168 li
426.75 168.125 li
426.875 168 li
427.375 168 li
427.5 168.125 li
427.625 168 li
428.125 168 li
428.25 168.125 li
428.375 168 li
428.875 168 li
429 168.125 li
429.125 168 li
429.625 168 li
429.75 168.125 li
429.875 168 li
430.375 168 li
430.5 168.125 li
430.625 168 li
431.125 168 li
431.25 168.125 li
431.375 168 li
431.875 168 li
432 168.125 li
432.125 168 li
432.625 168 li
432.75 168.125 li
432.875 168 li
433.375 168 li
433.5 168.125 li
433.625 168 li
434.125 168 li
434.25 168.125 li
434.375 168 li
434.875 168 li
435 168.125 li
435.125 168 li
435.625 168 li
435.75 168.125 li
435.875 168 li
436.375 168 li
436.5 168.125 li
436.625 168 li
437.125 168 li
437.25 168.125 li
437.375 168 li
437.875 168 li
438 168.125 li
438.125 168 li
438.625 168 li
438.75 168.125 li
438.875 168 li
439.375 168 li
439.5 168.125 li
439.625 168 li
440.125 168 li
440.25 168.125 li
440.375 168 li
440.875 168 li
441 168.125 li
441.125 168 li
441 167.875 li
441 167.375 li
441.125 167.25 li
441 167.125 li
441 166.625 li
441.125 166.5 li
441 166.375 li
441 165.875 li
441.125 165.75 li
441 165.625 li
441 165.125 li
441.125 165 li
441 164.875 li
441 164.375 li
441.125 164.25 li
441 164.125 li
441 163.625 li
441.125 163.5 li
441 163.375 li
441 162.875 li
441.125 162.75 li
441 162.625 li
441 162.125 li
441.125 162 li
441 161.875 li
441 161.375 li
441.125 161.25 li
441 161.125 li
441 160.625 li
441.125 160.5 li
441 160.375 li
441 159.875 li
441.125 159.75 li
441 159.625 li
441 159.125 li
441.125 159 li
441 158.875 li
441 158.375 li
441.125 158.25 li
441 158.125 li
441 157.625 li
441.125 157.5 li
441 157.375 li
441 156.875 li
441.125 156.75 li
441 156.625 li
441 156.125 li
441.125 156 li
441 155.875 li
441 155.375 li
441.125 155.25 li
441 155.125 li
441 154.625 li
441.125 154.5 li
441 154.375 li
441 153.875 li
441.125 153.75 li
441 153.625 li
441 153.125 li
441.125 153 li
441 152.875 li
441 152.375 li
441.125 152.25 li
441 152.125 li
441 151.625 li
441.125 151.5 li
441 151.375 li
441 150.875 li
441.125 150.75 li
441 150.625 li
441 150.125 li
441.125 150 li
441 149.875 li
441 149.375 li
441.125 149.25 li
441 149.125 li
441 148.625 li
441.125 148.5 li
441 148.375 li
441 147.875 li
441.125 147.75 li
441 147.625 li
441 147.125 li
441.125 147 li
441 146.875 li
441 146.375 li
441.125 146.25 li
441 146.125 li
441 145.625 li
441.125 145.5 li
441 145.375 li
441 144.875 li
441.125 144.75 li
441 144.625 li
441 144.125 li
441.125 144 li
441 143.875 li
441 143.375 li
441.125 143.25 li
441 143.125 li
441 142.625 li
441.125 142.5 li
441 142.375 li
441 141.875 li
441.125 141.75 li
441 141.625 li
441 141.125 li
441.125 141 li
441 140.875 li
441 140.375 li
441.125 140.25 li
441 140.125 li
441 139.625 li
441.125 139.5 li
441 139.375 li
441 138.875 li
441.125 138.75 li
441 138.625 li
441 138.125 li
441.125 138 li
441 137.875 li
441 137.375 li
441.125 137.25 li
441 137.125 li
441 136.625 li
441.125 136.5 li
441 136.375 li
441 135.875 li
441.125 135.75 li
441 135.625 li
441 135.125 li
441.125 135 li
441 134.875 li
441 134.375 li
441.125 134.25 li
441 134.125 li
441 133.625 li
441.125 133.5 li
441 133.375 li
441 132.875 li
441.125 132.75 li
441 132.625 li
441 132.125 li
441.125 132 li
441 131.875 li
441 131.375 li
441.125 131.25 li
441 131.125 li
441 130.625 li
441.125 130.5 li
441 130.375 li
441 129.875 li
441.125 129.75 li
441 129.625 li
441 129.125 li
441.125 129 li
441 128.875 li
441 128.375 li
441.125 128.25 li
441 128.125 li
441 127.625 li
441.125 127.5 li
441 127.375 li
441 126.875 li
441.125 126.75 li
441 126.625 li
441 126.125 li
441.125 126 li
441 125.875 li
441 125.375 li
441.125 125.25 li
441 125.125 li
441 124.625 li
441.125 124.5 li
441 124.375 li
441 123.875 li
441.125 123.75 li
441 123.625 li
441 123.125 li
441.125 123 li
441 122.875 li
441 122.375 li
441.125 122.25 li
441 122.125 li
441 121.625 li
441.125 121.5 li
441 121.375 li
441 120.875 li
441.125 120.75 li
441 120.625 li
441 120.125 li
441.125 120 li
441 119.875 li
441 119.375 li
441.125 119.25 li
441 119.125 li
441 118.625 li
441.125 118.5 li
441 118.375 li
441 117.875 li
441.125 117.75 li
441 117.625 li
441 117.125 li
441.125 117 li
441 116.875 li
441 116.375 li
441.125 116.25 li
441 116.125 li
441 115.625 li
441.125 115.5 li
441 115.375 li
441 114.875 li
441.125 114.75 li
441 114.625 li
441 114.125 li
441.125 114 li
441 113.875 li
441 113.375 li
441.125 113.25 li
441 113.125 li
441 112.625 li
441.125 112.5 li
441 112.375 li
441 111.875 li
441.125 111.75 li
441 111.625 li
441 111.125 li
441.125 111 li
441 110.875 li
441 110.375 li
441.125 110.25 li
441 110.125 li
441 109.625 li
441.125 109.5 li
441 109.375 li
441 108.875 li
441.125 108.75 li
441 108.625 li
441 108.125 li
441.125 108 li
441 107.875 li
441 107.375 li
441.125 107.25 li
441 107.125 li
441 106.625 li
441.125 106.5 li
441 106.375 li
441 105.875 li
441.125 105.75 li
441 105.625 li
441 105.125 li
441.125 105 li
441 104.875 li
441 104.375 li
441.125 104.25 li
441 104.125 li
441 103.625 li
441.125 103.5 li
441 103.375 li
441 102.875 li
441.125 102.75 li
441 102.625 li
441 102.125 li
441.125 102 li
441 101.875 li
441 101.375 li
441.125 101.25 li
441 101.125 li
441 100.625 li
441.125 100.5 li
441 100.375 li
441 99.8752 li
441.125 99.7503 li
441 99.6251 li
441 99.1252 li
441.125 99.0003 li
441 98.8753 li
441 98.3752 li
441.125 98.2502 li
441 98.1253 li
441 97.6252 li
441.125 97.5002 li
441.125 97.5 li
441.125 97.5 li
441.625 97.5 li
441.875 97.5 li
442.375 97.5 li
442.5 97.5 li
442.5 169.5 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
360 97.5 mo
360 169.5 li
442.5 169.5 li
442.5 97.5 li
360 97.5 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
442.5 169.625 mo
442.375 169.5 li
442.5 169.5 li
442.5 169.375 li
442.625 169.5 li
442.5 169.625 li
441.75 169.625 mo
441.625 169.5 li
441.875 169.5 li
441.75 169.625 li
441 169.625 mo
440.875 169.5 li
441.125 169.5 li
441 169.625 li
440.25 169.625 mo
440.125 169.5 li
440.375 169.5 li
440.25 169.625 li
439.5 169.625 mo
439.375 169.5 li
439.625 169.5 li
439.5 169.625 li
438.75 169.625 mo
438.625 169.5 li
438.875 169.5 li
438.75 169.625 li
438 169.625 mo
437.875 169.5 li
438.125 169.5 li
438 169.625 li
437.25 169.625 mo
437.125 169.5 li
437.375 169.5 li
437.25 169.625 li
436.5 169.625 mo
436.375 169.5 li
436.625 169.5 li
436.5 169.625 li
435.75 169.625 mo
435.625 169.5 li
435.875 169.5 li
435.75 169.625 li
435 169.625 mo
434.875 169.5 li
435.125 169.5 li
435 169.625 li
434.25 169.625 mo
434.125 169.5 li
434.375 169.5 li
434.25 169.625 li
433.5 169.625 mo
433.375 169.5 li
433.625 169.5 li
433.5 169.625 li
432.75 169.625 mo
432.625 169.5 li
432.875 169.5 li
432.75 169.625 li
432 169.625 mo
431.875 169.5 li
432.125 169.5 li
432 169.625 li
431.25 169.625 mo
431.125 169.5 li
431.375 169.5 li
431.25 169.625 li
430.5 169.625 mo
430.375 169.5 li
430.625 169.5 li
430.5 169.625 li
429.75 169.625 mo
429.625 169.5 li
429.875 169.5 li
429.75 169.625 li
429 169.625 mo
428.875 169.5 li
429.125 169.5 li
429 169.625 li
428.25 169.625 mo
428.125 169.5 li
428.375 169.5 li
428.25 169.625 li
427.5 169.625 mo
427.375 169.5 li
427.625 169.5 li
427.5 169.625 li
426.75 169.625 mo
426.625 169.5 li
426.875 169.5 li
426.75 169.625 li
426 169.625 mo
425.875 169.5 li
426.125 169.5 li
426 169.625 li
425.25 169.625 mo
425.125 169.5 li
425.375 169.5 li
425.25 169.625 li
424.5 169.625 mo
424.375 169.5 li
424.625 169.5 li
424.5 169.625 li
423.75 169.625 mo
423.625 169.5 li
423.875 169.5 li
423.75 169.625 li
423 169.625 mo
422.875 169.5 li
423.125 169.5 li
423 169.625 li
422.25 169.625 mo
422.125 169.5 li
422.375 169.5 li
422.25 169.625 li
421.5 169.625 mo
421.375 169.5 li
421.625 169.5 li
421.5 169.625 li
420.75 169.625 mo
420.625 169.5 li
420.875 169.5 li
420.75 169.625 li
420 169.625 mo
419.875 169.5 li
420.125 169.5 li
420 169.625 li
419.25 169.625 mo
419.125 169.5 li
419.375 169.5 li
419.25 169.625 li
418.5 169.625 mo
418.375 169.5 li
418.625 169.5 li
418.5 169.625 li
417.75 169.625 mo
417.625 169.5 li
417.875 169.5 li
417.75 169.625 li
417 169.625 mo
416.875 169.5 li
417.125 169.5 li
417 169.625 li
416.25 169.625 mo
416.125 169.5 li
416.375 169.5 li
416.25 169.625 li
415.5 169.625 mo
415.375 169.5 li
415.625 169.5 li
415.5 169.625 li
414.75 169.625 mo
414.625 169.5 li
414.875 169.5 li
414.75 169.625 li
414 169.625 mo
413.875 169.5 li
414.125 169.5 li
414 169.625 li
413.25 169.625 mo
413.125 169.5 li
413.375 169.5 li
413.25 169.625 li
412.5 169.625 mo
412.375 169.5 li
412.625 169.5 li
412.5 169.625 li
411.75 169.625 mo
411.625 169.5 li
411.875 169.5 li
411.75 169.625 li
411 169.625 mo
410.875 169.5 li
411.125 169.5 li
411 169.625 li
410.25 169.625 mo
410.125 169.5 li
410.375 169.5 li
410.25 169.625 li
409.5 169.625 mo
409.375 169.5 li
409.625 169.5 li
409.5 169.625 li
408.75 169.625 mo
408.625 169.5 li
408.875 169.5 li
408.75 169.625 li
408 169.625 mo
407.875 169.5 li
408.125 169.5 li
408 169.625 li
407.25 169.625 mo
407.125 169.5 li
407.375 169.5 li
407.25 169.625 li
406.5 169.625 mo
406.375 169.5 li
406.625 169.5 li
406.5 169.625 li
405.75 169.625 mo
405.625 169.5 li
405.875 169.5 li
405.75 169.625 li
405 169.625 mo
404.875 169.5 li
405.125 169.5 li
405 169.625 li
404.25 169.625 mo
404.125 169.5 li
404.375 169.5 li
404.25 169.625 li
403.5 169.625 mo
403.375 169.5 li
403.625 169.5 li
403.5 169.625 li
402.75 169.625 mo
402.625 169.5 li
402.875 169.5 li
402.75 169.625 li
402 169.625 mo
401.875 169.5 li
402.125 169.5 li
402 169.625 li
401.25 169.625 mo
401.125 169.5 li
401.375 169.5 li
401.25 169.625 li
400.5 169.625 mo
400.375 169.5 li
400.625 169.5 li
400.5 169.625 li
399.75 169.625 mo
399.625 169.5 li
399.875 169.5 li
399.75 169.625 li
399 169.625 mo
398.875 169.5 li
399.125 169.5 li
399 169.625 li
398.25 169.625 mo
398.125 169.5 li
398.375 169.5 li
398.25 169.625 li
397.5 169.625 mo
397.375 169.5 li
397.625 169.5 li
397.5 169.625 li
396.75 169.625 mo
396.625 169.5 li
396.875 169.5 li
396.75 169.625 li
396 169.625 mo
395.875 169.5 li
396.125 169.5 li
396 169.625 li
395.25 169.625 mo
395.125 169.5 li
395.375 169.5 li
395.25 169.625 li
394.5 169.625 mo
394.375 169.5 li
394.625 169.5 li
394.5 169.625 li
393.75 169.625 mo
393.625 169.5 li
393.875 169.5 li
393.75 169.625 li
393 169.625 mo
392.875 169.5 li
393.125 169.5 li
393 169.625 li
392.25 169.625 mo
392.125 169.5 li
392.375 169.5 li
392.25 169.625 li
391.5 169.625 mo
391.375 169.5 li
391.625 169.5 li
391.5 169.625 li
390.75 169.625 mo
390.625 169.5 li
390.875 169.5 li
390.75 169.625 li
390 169.625 mo
389.875 169.5 li
390.125 169.5 li
390 169.625 li
389.25 169.625 mo
389.125 169.5 li
389.375 169.5 li
389.25 169.625 li
388.5 169.625 mo
388.375 169.5 li
388.625 169.5 li
388.5 169.625 li
387.75 169.625 mo
387.625 169.5 li
387.875 169.5 li
387.75 169.625 li
387 169.625 mo
386.875 169.5 li
387.125 169.5 li
387 169.625 li
386.25 169.625 mo
386.125 169.5 li
386.375 169.5 li
386.25 169.625 li
385.5 169.625 mo
385.375 169.5 li
385.625 169.5 li
385.5 169.625 li
384.75 169.625 mo
384.625 169.5 li
384.875 169.5 li
384.75 169.625 li
384 169.625 mo
383.875 169.5 li
384.125 169.5 li
384 169.625 li
383.25 169.625 mo
383.125 169.5 li
383.375 169.5 li
383.25 169.625 li
382.5 169.625 mo
382.375 169.5 li
382.625 169.5 li
382.5 169.625 li
381.75 169.625 mo
381.625 169.5 li
381.875 169.5 li
381.75 169.625 li
381 169.625 mo
380.875 169.5 li
381.125 169.5 li
381 169.625 li
380.25 169.625 mo
380.125 169.5 li
380.375 169.5 li
380.25 169.625 li
379.5 169.625 mo
379.375 169.5 li
379.625 169.5 li
379.5 169.625 li
378.75 169.625 mo
378.625 169.5 li
378.875 169.5 li
378.75 169.625 li
378 169.625 mo
377.875 169.5 li
378.125 169.5 li
378 169.625 li
377.25 169.625 mo
377.125 169.5 li
377.375 169.5 li
377.25 169.625 li
376.5 169.625 mo
376.375 169.5 li
376.625 169.5 li
376.5 169.625 li
375.75 169.625 mo
375.625 169.5 li
375.875 169.5 li
375.75 169.625 li
375 169.625 mo
374.875 169.5 li
375.125 169.5 li
375 169.625 li
374.25 169.625 mo
374.125 169.5 li
374.375 169.5 li
374.25 169.625 li
373.5 169.625 mo
373.375 169.5 li
373.625 169.5 li
373.5 169.625 li
372.75 169.625 mo
372.625 169.5 li
372.875 169.5 li
372.75 169.625 li
372 169.625 mo
371.875 169.5 li
372.125 169.5 li
372 169.625 li
371.25 169.625 mo
371.125 169.5 li
371.375 169.5 li
371.25 169.625 li
370.5 169.625 mo
370.375 169.5 li
370.625 169.5 li
370.5 169.625 li
369.75 169.625 mo
369.625 169.5 li
369.875 169.5 li
369.75 169.625 li
369 169.625 mo
368.875 169.5 li
369.125 169.5 li
369 169.625 li
368.25 169.625 mo
368.125 169.5 li
368.375 169.5 li
368.25 169.625 li
367.5 169.625 mo
367.375 169.5 li
367.625 169.5 li
367.5 169.625 li
366.75 169.625 mo
366.625 169.5 li
366.875 169.5 li
366.75 169.625 li
366 169.625 mo
365.875 169.5 li
366.125 169.5 li
366 169.625 li
365.25 169.625 mo
365.125 169.5 li
365.375 169.5 li
365.25 169.625 li
364.5 169.625 mo
364.375 169.5 li
364.625 169.5 li
364.5 169.625 li
363.75 169.625 mo
363.625 169.5 li
363.875 169.5 li
363.75 169.625 li
363 169.625 mo
362.875 169.5 li
363.125 169.5 li
363 169.625 li
362.25 169.625 mo
362.125 169.5 li
362.375 169.5 li
362.25 169.625 li
361.5 169.625 mo
361.375 169.5 li
361.625 169.5 li
361.5 169.625 li
360.75 169.625 mo
360.625 169.5 li
360.875 169.5 li
360.75 169.625 li
360 169.625 mo
359.875 169.5 li
359.875 169.5 li
359.875 169.499 li
360 169.375 li
360 169.5 li
360.125 169.5 li
360 169.625 li
f
442.5 168.875 mo
442.5 168.875 li
442.5 168.625 li
442.625 168.75 li
442.5 168.875 li
360 168.875 mo
359.875 168.749 li
360 168.624 li
360 168.875 li
f
442.5 168.125 mo
442.5 168.125 li
442.5 167.875 li
442.625 168 li
442.5 168.125 li
442.5 167.375 mo
442.5 167.375 li
442.5 167.125 li
442.625 167.25 li
442.5 167.375 li
442.5 166.625 mo
442.5 166.625 li
442.5 166.375 li
442.625 166.5 li
442.5 166.625 li
442.5 165.875 mo
442.5 165.875 li
442.5 165.625 li
442.625 165.75 li
442.5 165.875 li
442.5 165.125 mo
442.5 165.125 li
442.5 164.875 li
442.625 165 li
442.5 165.125 li
442.5 164.375 mo
442.5 164.375 li
442.5 164.125 li
442.625 164.25 li
442.5 164.375 li
442.5 163.625 mo
442.5 163.625 li
442.5 163.375 li
442.625 163.5 li
442.5 163.625 li
442.5 162.875 mo
442.5 162.875 li
442.5 162.625 li
442.625 162.75 li
442.5 162.875 li
442.5 162.125 mo
442.5 162.125 li
442.5 161.875 li
442.625 162 li
442.5 162.125 li
442.5 161.375 mo
442.5 161.375 li
442.5 161.125 li
442.625 161.25 li
442.5 161.375 li
442.5 160.625 mo
442.5 160.625 li
442.5 160.375 li
442.625 160.5 li
442.5 160.625 li
442.5 159.875 mo
442.5 159.875 li
442.5 159.625 li
442.625 159.75 li
442.5 159.875 li
442.5 159.125 mo
442.5 159.125 li
442.5 158.875 li
442.625 159 li
442.5 159.125 li
442.5 158.375 mo
442.5 158.375 li
442.5 158.125 li
442.625 158.25 li
442.5 158.375 li
442.5 157.625 mo
442.5 157.625 li
442.5 157.375 li
442.625 157.5 li
442.5 157.625 li
442.5 156.875 mo
442.5 156.875 li
442.5 156.625 li
442.625 156.75 li
442.5 156.875 li
442.5 156.125 mo
442.5 156.125 li
442.5 155.875 li
442.625 156 li
442.5 156.125 li
442.5 155.375 mo
442.5 155.375 li
442.5 155.125 li
442.625 155.25 li
442.5 155.375 li
442.5 154.625 mo
442.5 154.625 li
442.5 154.375 li
442.625 154.5 li
442.5 154.625 li
442.5 153.875 mo
442.5 153.875 li
442.5 153.625 li
442.625 153.75 li
442.5 153.875 li
442.5 153.125 mo
442.5 153.125 li
442.5 152.875 li
442.625 153 li
442.5 153.125 li
442.5 152.375 mo
442.5 152.375 li
442.5 152.125 li
442.625 152.25 li
442.5 152.375 li
442.5 151.625 mo
442.5 151.625 li
442.5 151.375 li
442.625 151.5 li
442.5 151.625 li
442.5 150.875 mo
442.5 150.875 li
442.5 150.625 li
442.625 150.75 li
442.5 150.875 li
442.5 150.125 mo
442.5 150.125 li
442.5 149.875 li
442.625 150 li
442.5 150.125 li
442.5 149.375 mo
442.5 149.375 li
442.5 149.125 li
442.625 149.25 li
442.5 149.375 li
442.5 148.625 mo
442.5 148.625 li
442.5 148.375 li
442.625 148.5 li
442.5 148.625 li
442.5 147.875 mo
442.5 147.875 li
442.5 147.625 li
442.625 147.75 li
442.5 147.875 li
442.5 147.125 mo
442.5 147.125 li
442.5 146.875 li
442.625 147 li
442.5 147.125 li
442.5 146.375 mo
442.5 146.375 li
442.5 146.125 li
442.625 146.25 li
442.5 146.375 li
442.5 145.625 mo
442.5 145.625 li
442.5 145.375 li
442.625 145.5 li
442.5 145.625 li
442.5 144.875 mo
442.5 144.875 li
442.5 144.625 li
442.625 144.75 li
442.5 144.875 li
442.5 144.125 mo
442.5 144.125 li
442.5 143.875 li
442.625 144 li
442.5 144.125 li
442.5 143.375 mo
442.5 143.375 li
442.5 143.125 li
442.625 143.25 li
442.5 143.375 li
442.5 142.625 mo
442.5 142.625 li
442.5 142.375 li
442.625 142.5 li
442.5 142.625 li
442.5 141.875 mo
442.5 141.875 li
442.5 141.625 li
442.625 141.75 li
442.5 141.875 li
442.5 141.125 mo
442.5 141.125 li
442.5 140.875 li
442.625 141 li
442.5 141.125 li
442.5 140.375 mo
442.5 140.375 li
442.5 140.125 li
442.625 140.25 li
442.5 140.375 li
442.5 139.625 mo
442.5 139.625 li
442.5 139.375 li
442.625 139.5 li
442.5 139.625 li
442.5 138.875 mo
442.5 138.875 li
442.5 138.625 li
442.625 138.75 li
442.5 138.875 li
442.5 138.125 mo
442.5 138.125 li
442.5 137.875 li
442.625 138 li
442.5 138.125 li
442.5 137.375 mo
442.5 137.375 li
442.5 137.125 li
442.625 137.25 li
442.5 137.375 li
442.5 136.625 mo
442.5 136.625 li
442.5 136.375 li
442.625 136.5 li
442.5 136.625 li
442.5 135.875 mo
442.5 135.875 li
442.5 135.625 li
442.625 135.75 li
442.5 135.875 li
442.5 135.125 mo
442.5 135.125 li
442.5 134.875 li
442.625 135 li
442.5 135.125 li
442.5 134.375 mo
442.5 134.375 li
442.5 134.125 li
442.625 134.25 li
442.5 134.375 li
442.5 133.625 mo
442.5 133.625 li
442.5 133.375 li
442.625 133.5 li
442.5 133.625 li
442.5 132.875 mo
442.5 132.875 li
442.5 132.625 li
442.625 132.75 li
442.5 132.875 li
442.5 132.125 mo
442.5 132.125 li
442.5 131.875 li
442.625 132 li
442.5 132.125 li
442.5 131.375 mo
442.5 131.375 li
442.5 131.125 li
442.625 131.25 li
442.5 131.375 li
442.5 130.625 mo
442.5 130.625 li
442.5 130.375 li
442.625 130.5 li
442.5 130.625 li
442.5 129.875 mo
442.5 129.875 li
442.5 129.625 li
442.625 129.75 li
442.5 129.875 li
442.5 129.125 mo
442.5 129.125 li
442.5 128.875 li
442.625 129 li
442.5 129.125 li
442.5 128.375 mo
442.5 128.375 li
442.5 128.125 li
442.625 128.25 li
442.5 128.375 li
442.5 127.625 mo
442.5 127.625 li
442.5 127.375 li
442.625 127.5 li
442.5 127.625 li
442.5 126.875 mo
442.5 126.875 li
442.5 126.625 li
442.625 126.75 li
442.5 126.875 li
442.5 126.125 mo
442.5 126.125 li
442.5 125.875 li
442.625 126 li
442.5 126.125 li
442.5 125.375 mo
442.5 125.375 li
442.5 125.125 li
442.625 125.25 li
442.5 125.375 li
442.5 124.625 mo
442.5 124.625 li
442.5 124.375 li
442.625 124.5 li
442.5 124.625 li
442.5 123.875 mo
442.5 123.875 li
442.5 123.625 li
442.625 123.75 li
442.5 123.875 li
442.5 123.125 mo
442.5 123.125 li
442.5 122.875 li
442.625 123 li
442.5 123.125 li
442.5 122.375 mo
442.5 122.375 li
442.5 122.125 li
442.625 122.25 li
442.5 122.375 li
442.5 121.625 mo
442.5 121.625 li
442.5 121.375 li
442.625 121.5 li
442.5 121.625 li
442.5 120.875 mo
442.5 120.875 li
442.5 120.625 li
442.625 120.75 li
442.5 120.875 li
442.5 120.125 mo
442.5 120.125 li
442.5 119.875 li
442.625 120 li
442.5 120.125 li
442.5 119.375 mo
442.5 119.375 li
442.5 119.125 li
442.625 119.25 li
442.5 119.375 li
442.5 118.625 mo
442.5 118.625 li
442.5 118.375 li
442.625 118.5 li
442.5 118.625 li
442.5 117.875 mo
442.5 117.875 li
442.5 117.625 li
442.625 117.75 li
442.5 117.875 li
442.5 117.125 mo
442.5 117.125 li
442.5 116.875 li
442.625 117 li
442.5 117.125 li
442.5 116.375 mo
442.5 116.375 li
442.5 116.125 li
442.625 116.25 li
442.5 116.375 li
442.5 115.625 mo
442.5 115.625 li
442.5 115.375 li
442.625 115.5 li
442.5 115.625 li
442.5 114.875 mo
442.5 114.875 li
442.5 114.625 li
442.625 114.75 li
442.5 114.875 li
442.5 114.125 mo
442.5 114.125 li
442.5 113.875 li
442.625 114 li
442.5 114.125 li
442.5 113.375 mo
442.5 113.375 li
442.5 113.125 li
442.625 113.25 li
442.5 113.375 li
442.5 112.625 mo
442.5 112.625 li
442.5 112.375 li
442.625 112.5 li
442.5 112.625 li
442.5 111.875 mo
442.5 111.875 li
442.5 111.625 li
442.625 111.75 li
442.5 111.875 li
442.5 111.125 mo
442.5 111.125 li
442.5 110.875 li
442.625 111 li
442.5 111.125 li
442.5 110.375 mo
442.5 110.375 li
442.5 110.125 li
442.625 110.25 li
442.5 110.375 li
442.5 109.625 mo
442.5 109.625 li
442.5 109.375 li
442.625 109.5 li
442.5 109.625 li
442.5 108.875 mo
442.5 108.875 li
442.5 108.625 li
442.625 108.75 li
442.5 108.875 li
442.5 108.125 mo
442.5 108.125 li
442.5 107.875 li
442.625 108 li
442.5 108.125 li
442.5 107.375 mo
442.5 107.375 li
442.5 107.125 li
442.625 107.25 li
442.5 107.375 li
442.5 106.625 mo
442.5 106.625 li
442.5 106.375 li
442.625 106.5 li
442.5 106.625 li
442.5 105.875 mo
442.5 105.875 li
442.5 105.625 li
442.625 105.75 li
442.5 105.875 li
442.5 105.125 mo
442.5 105.125 li
442.5 104.875 li
442.625 105 li
442.5 105.125 li
442.5 104.375 mo
442.5 104.375 li
442.5 104.125 li
442.625 104.25 li
442.5 104.375 li
442.5 103.625 mo
442.5 103.625 li
442.5 103.375 li
442.625 103.5 li
442.5 103.625 li
442.5 102.875 mo
442.5 102.875 li
442.5 102.625 li
442.625 102.75 li
442.5 102.875 li
442.5 102.125 mo
442.5 102.125 li
442.5 101.875 li
442.625 102 li
442.5 102.125 li
442.5 101.375 mo
442.5 101.375 li
442.5 101.125 li
442.625 101.25 li
442.5 101.375 li
442.5 100.625 mo
442.5 100.625 li
442.5 100.375 li
442.625 100.5 li
442.5 100.625 li
442.5 99.8752 mo
442.5 99.8752 li
442.5 99.6251 li
442.625 99.7503 li
442.5 99.8752 li
442.5 99.1252 mo
442.5 99.1252 li
442.5 98.8753 li
442.625 99.0003 li
442.5 99.1252 li
442.5 98.3752 mo
442.5 98.3752 li
442.5 98.1253 li
442.625 98.2502 li
442.5 98.3752 li
442.5 97.6252 mo
442.5 97.6252 li
442.5 97.5 li
442.375 97.5 li
442.5 97.3753 li
442.625 97.5002 li
442.5 97.6252 li
f
441.875 97.5 mo
441.625 97.5 li
441.75 97.3751 li
441.875 97.5 li
f
441.125 97.5 mo
441.125 97.5 li
441 97.3753 li
441 97.3751 li
441.125 97.5 li
f
grestore
gsave
358.5 168 mo
441 168 li
441 96 li
358.5 96 li
358.5 168 li
eclp
440.875 168 mo
440.375 168 li
440.25 167.875 li
440.125 168 li
439.625 168 li
439.5 167.875 li
439.375 168 li
438.875 168 li
438.75 167.875 li
438.625 168 li
438.125 168 li
438 167.875 li
437.875 168 li
437.375 168 li
437.25 167.875 li
437.125 168 li
436.625 168 li
436.5 167.875 li
436.375 168 li
435.875 168 li
435.75 167.875 li
435.625 168 li
435.125 168 li
435 167.875 li
434.875 168 li
434.375 168 li
434.25 167.875 li
434.125 168 li
433.625 168 li
433.5 167.875 li
433.375 168 li
432.875 168 li
432.75 167.875 li
432.625 168 li
432.125 168 li
432 167.875 li
431.875 168 li
431.375 168 li
431.25 167.875 li
431.125 168 li
430.625 168 li
430.5 167.875 li
430.375 168 li
429.875 168 li
429.75 167.875 li
429.625 168 li
429.125 168 li
429 167.875 li
428.875 168 li
428.375 168 li
428.25 167.875 li
428.125 168 li
427.625 168 li
427.5 167.875 li
427.375 168 li
426.875 168 li
426.75 167.875 li
426.625 168 li
426.125 168 li
426 167.875 li
425.875 168 li
425.375 168 li
425.25 167.875 li
425.125 168 li
424.625 168 li
424.5 167.875 li
424.375 168 li
423.875 168 li
423.75 167.875 li
423.625 168 li
423.125 168 li
423 167.875 li
422.875 168 li
422.375 168 li
422.25 167.875 li
422.125 168 li
421.625 168 li
421.5 167.875 li
421.375 168 li
420.875 168 li
420.75 167.875 li
420.625 168 li
420.125 168 li
420 167.875 li
419.875 168 li
419.375 168 li
419.25 167.875 li
419.125 168 li
418.625 168 li
418.5 167.875 li
418.375 168 li
417.875 168 li
417.75 167.875 li
417.625 168 li
417.125 168 li
417 167.875 li
416.875 168 li
416.375 168 li
416.25 167.875 li
416.125 168 li
415.625 168 li
415.5 167.875 li
415.375 168 li
414.875 168 li
414.75 167.875 li
414.625 168 li
414.125 168 li
414 167.875 li
413.875 168 li
413.375 168 li
413.25 167.875 li
413.125 168 li
412.625 168 li
412.5 167.875 li
412.375 168 li
411.875 168 li
411.75 167.875 li
411.625 168 li
411.125 168 li
411 167.875 li
410.875 168 li
410.375 168 li
410.25 167.875 li
410.125 168 li
409.625 168 li
409.5 167.875 li
409.375 168 li
408.875 168 li
408.75 167.875 li
408.625 168 li
408.125 168 li
408 167.875 li
407.875 168 li
407.375 168 li
407.25 167.875 li
407.125 168 li
406.625 168 li
406.5 167.875 li
406.375 168 li
405.875 168 li
405.75 167.875 li
405.625 168 li
405.125 168 li
405 167.875 li
404.875 168 li
404.375 168 li
404.25 167.875 li
404.125 168 li
403.625 168 li
403.5 167.875 li
403.375 168 li
402.875 168 li
402.75 167.875 li
402.625 168 li
402.125 168 li
402 167.875 li
401.875 168 li
401.375 168 li
401.25 167.875 li
401.125 168 li
400.625 168 li
400.5 167.875 li
400.375 168 li
399.875 168 li
399.75 167.875 li
399.625 168 li
399.125 168 li
399 167.875 li
398.875 168 li
398.375 168 li
398.25 167.875 li
398.125 168 li
397.625 168 li
397.5 167.875 li
397.375 168 li
396.875 168 li
396.75 167.875 li
396.625 168 li
396.125 168 li
396 167.875 li
395.875 168 li
395.375 168 li
395.25 167.875 li
395.125 168 li
394.625 168 li
394.5 167.875 li
394.375 168 li
393.875 168 li
393.75 167.875 li
393.625 168 li
393.125 168 li
393 167.875 li
392.875 168 li
392.375 168 li
392.25 167.875 li
392.125 168 li
391.625 168 li
391.5 167.875 li
391.375 168 li
390.875 168 li
390.75 167.875 li
390.625 168 li
390.125 168 li
390 167.875 li
389.875 168 li
389.375 168 li
389.25 167.875 li
389.125 168 li
388.625 168 li
388.5 167.875 li
388.375 168 li
387.875 168 li
387.75 167.875 li
387.625 168 li
387.125 168 li
387 167.875 li
386.875 168 li
386.375 168 li
386.25 167.875 li
386.125 168 li
385.625 168 li
385.5 167.875 li
385.375 168 li
384.875 168 li
384.75 167.875 li
384.625 168 li
384.125 168 li
384 167.875 li
383.875 168 li
383.375 168 li
383.25 167.875 li
383.125 168 li
382.625 168 li
382.5 167.875 li
382.375 168 li
381.875 168 li
381.75 167.875 li
381.625 168 li
381.125 168 li
381 167.875 li
380.875 168 li
380.375 168 li
380.25 167.875 li
380.125 168 li
379.625 168 li
379.5 167.875 li
379.375 168 li
378.875 168 li
378.75 167.875 li
378.625 168 li
378.125 168 li
378 167.875 li
377.875 168 li
377.375 168 li
377.25 167.875 li
377.125 168 li
376.625 168 li
376.5 167.875 li
376.375 168 li
375.875 168 li
375.75 167.875 li
375.625 168 li
375.125 168 li
375 167.875 li
374.875 168 li
374.375 168 li
374.25 167.875 li
374.125 168 li
373.625 168 li
373.5 167.875 li
373.375 168 li
372.875 168 li
372.75 167.875 li
372.625 168 li
372.125 168 li
372 167.875 li
371.875 168 li
371.375 168 li
371.25 167.875 li
371.125 168 li
370.625 168 li
370.5 167.875 li
370.375 168 li
369.875 168 li
369.75 167.875 li
369.625 168 li
369.125 168 li
369 167.875 li
368.875 168 li
368.375 168 li
368.25 167.875 li
368.125 168 li
367.625 168 li
367.5 167.875 li
367.375 168 li
366.875 168 li
366.75 167.875 li
366.625 168 li
366.125 168 li
366 167.875 li
365.875 168 li
365.375 168 li
365.25 167.875 li
365.125 168 li
364.625 168 li
364.5 167.875 li
364.375 168 li
363.875 168 li
363.75 167.875 li
363.625 168 li
363.125 168 li
363 167.875 li
362.875 168 li
362.375 168 li
362.25 167.875 li
362.125 168 li
361.625 168 li
361.5 167.875 li
361.375 168 li
360.875 168 li
360.75 167.875 li
360.625 168 li
360.125 168 li
360 167.875 li
359.875 168 li
359.375 168 li
359.25 167.875 li
359.125 168 li
358.625 168 li
358.625 168 li
358.625 168 li
358.5 167.874 li
358.5 167.375 li
358.625 167.25 li
358.5 167.124 li
358.5 166.625 li
358.625 166.5 li
358.5 166.375 li
358.5 165.874 li
358.625 165.75 li
358.5 165.625 li
358.5 165.124 li
358.625 165 li
358.5 164.875 li
358.5 164.374 li
358.625 164.249 li
358.5 164.125 li
358.5 163.625 li
358.625 163.499 li
358.5 163.375 li
358.5 162.875 li
358.625 162.75 li
358.5 162.625 li
358.5 162.125 li
358.625 162 li
358.5 161.874 li
358.5 161.375 li
358.625 161.25 li
358.5 161.124 li
358.5 160.625 li
358.625 160.5 li
358.5 160.375 li
358.5 159.875 li
358.625 159.75 li
358.5 159.625 li
358.5 159.124 li
358.625 159 li
358.5 158.875 li
358.5 158.374 li
358.625 158.25 li
358.5 158.125 li
358.5 157.625 li
358.625 157.5 li
358.5 157.375 li
358.5 156.875 li
358.625 156.749 li
358.5 156.625 li
358.5 156.125 li
358.625 156 li
358.5 155.875 li
358.5 155.375 li
358.625 155.25 li
358.5 155.125 li
358.5 154.625 li
358.625 154.5 li
358.5 154.375 li
358.5 153.875 li
358.625 153.75 li
358.5 153.625 li
358.5 153.125 li
358.625 153 li
358.5 152.875 li
358.5 152.374 li
358.625 152.25 li
358.5 152.125 li
358.5 151.625 li
358.625 151.5 li
358.5 151.375 li
358.5 150.875 li
358.625 150.75 li
358.5 150.625 li
358.5 150.125 li
358.625 149.999 li
358.5 149.875 li
358.5 149.375 li
358.625 149.25 li
358.5 149.125 li
358.5 148.625 li
358.625 148.5 li
358.5 148.375 li
358.5 147.875 li
358.625 147.75 li
358.5 147.625 li
358.5 147.125 li
358.625 147 li
358.5 146.875 li
358.5 146.375 li
358.625 146.25 li
358.5 146.125 li
358.5 145.625 li
358.625 145.5 li
358.5 145.375 li
358.5 144.875 li
358.625 144.75 li
358.5 144.625 li
358.5 144.125 li
358.625 144 li
358.5 143.875 li
358.5 143.375 li
358.625 143.25 li
358.5 143.125 li
358.5 142.625 li
358.625 142.5 li
358.5 142.375 li
358.5 141.875 li
358.625 141.75 li
358.5 141.625 li
358.5 141.125 li
358.625 141 li
358.5 140.875 li
358.5 140.375 li
358.625 140.25 li
358.5 140.125 li
358.5 139.625 li
358.625 139.5 li
358.5 139.375 li
358.5 138.875 li
358.625 138.75 li
358.5 138.625 li
358.5 138.125 li
358.625 138 li
358.5 137.875 li
358.5 137.375 li
358.625 137.25 li
358.5 137.125 li
358.5 136.625 li
358.625 136.5 li
358.5 136.375 li
358.5 135.875 li
358.625 135.75 li
358.5 135.625 li
358.5 135.125 li
358.625 135 li
358.5 134.875 li
358.5 134.375 li
358.625 134.25 li
358.5 134.125 li
358.5 133.625 li
358.625 133.5 li
358.5 133.375 li
358.5 132.875 li
358.625 132.75 li
358.5 132.625 li
358.5 132.125 li
358.625 132 li
358.5 131.875 li
358.5 131.375 li
358.625 131.25 li
358.5 131.125 li
358.5 130.625 li
358.625 130.5 li
358.5 130.375 li
358.5 129.875 li
358.625 129.75 li
358.5 129.625 li
358.5 129.125 li
358.625 129 li
358.5 128.875 li
358.5 128.375 li
358.625 128.25 li
358.5 128.125 li
358.5 127.625 li
358.625 127.5 li
358.5 127.375 li
358.5 126.875 li
358.625 126.75 li
358.5 126.625 li
358.5 126.125 li
358.625 126 li
358.5 125.875 li
358.5 125.375 li
358.625 125.25 li
358.5 125.125 li
358.5 124.625 li
358.625 124.5 li
358.5 124.375 li
358.5 123.875 li
358.625 123.75 li
358.5 123.625 li
358.5 123.125 li
358.625 123 li
358.5 122.875 li
358.5 122.375 li
358.625 122.25 li
358.5 122.125 li
358.5 121.625 li
358.625 121.5 li
358.5 121.375 li
358.5 120.875 li
358.625 120.75 li
358.5 120.625 li
358.5 120.125 li
358.625 120 li
358.5 119.875 li
358.5 119.375 li
358.625 119.25 li
358.5 119.125 li
358.5 118.625 li
358.625 118.5 li
358.5 118.375 li
358.5 117.875 li
358.625 117.75 li
358.5 117.625 li
358.5 117.125 li
358.625 117 li
358.5 116.875 li
358.5 116.375 li
358.625 116.25 li
358.5 116.125 li
358.5 115.625 li
358.625 115.5 li
358.5 115.375 li
358.5 114.875 li
358.625 114.75 li
358.5 114.625 li
358.5 114.125 li
358.625 114 li
358.5 113.875 li
358.5 113.375 li
358.625 113.25 li
358.5 113.125 li
358.5 112.625 li
358.625 112.5 li
358.5 112.375 li
358.5 111.875 li
358.625 111.75 li
358.5 111.625 li
358.5 111.125 li
358.625 111 li
358.5 110.875 li
358.5 110.375 li
358.625 110.25 li
358.5 110.125 li
358.5 109.625 li
358.625 109.5 li
358.5 109.375 li
358.5 108.875 li
358.625 108.75 li
358.5 108.625 li
358.5 108.125 li
358.625 108 li
358.5 107.875 li
358.5 107.375 li
358.625 107.25 li
358.5 107.125 li
358.5 106.625 li
358.625 106.5 li
358.5 106.375 li
358.5 105.875 li
358.625 105.75 li
358.5 105.625 li
358.5 105.125 li
358.625 105 li
358.5 104.875 li
358.5 104.375 li
358.625 104.25 li
358.5 104.125 li
358.5 103.625 li
358.625 103.5 li
358.5 103.375 li
358.5 102.875 li
358.625 102.75 li
358.5 102.625 li
358.5 102.125 li
358.625 102 li
358.5 101.875 li
358.5 101.375 li
358.625 101.25 li
358.5 101.125 li
358.5 100.625 li
358.625 100.5 li
358.5 100.375 li
358.5 99.8746 li
358.625 99.7497 li
358.5 99.6247 li
358.5 99.1248 li
358.625 98.9996 li
358.5 98.8747 li
358.5 98.3748 li
358.625 98.2496 li
358.5 98.1247 li
358.5 97.6247 li
358.625 97.4996 li
358.5 97.3747 li
358.5 96.8747 li
358.625 96.7498 li
358.5 96.6246 li
358.5 96.1245 li
358.5 96.1249 li
358.625 96 li
359.125 96 li
359.25 96.1249 li
359.375 96 li
359.875 96 li
360 96.1249 li
360.125 96 li
360.625 96 li
360.75 96.1249 li
360.875 96 li
361.375 96 li
361.5 96.1249 li
361.625 96 li
362.125 96 li
362.25 96.1249 li
362.375 96 li
362.875 96 li
363 96.1249 li
363.125 96 li
363.625 96 li
363.75 96.1249 li
363.875 96 li
364.375 96 li
364.5 96.1249 li
364.625 96 li
365.125 96 li
365.25 96.1249 li
365.375 96 li
365.875 96 li
366 96.1249 li
366.125 96 li
366.625 96 li
366.75 96.1249 li
366.875 96 li
367.375 96 li
367.5 96.1249 li
367.625 96 li
368.125 96 li
368.25 96.1249 li
368.375 96 li
368.875 96 li
369 96.1249 li
369.125 96 li
369.625 96 li
369.75 96.1249 li
369.875 96 li
370.375 96 li
370.5 96.1249 li
370.625 96 li
371.125 96 li
371.25 96.1249 li
371.375 96 li
371.875 96 li
372 96.1249 li
372.125 96 li
372.625 96 li
372.75 96.1249 li
372.875 96 li
373.375 96 li
373.5 96.1249 li
373.625 96 li
374.125 96 li
374.25 96.1249 li
374.375 96 li
374.875 96 li
375 96.1249 li
375.125 96 li
375.625 96 li
375.75 96.1249 li
375.875 96 li
376.375 96 li
376.5 96.1249 li
376.625 96 li
377.125 96 li
377.25 96.1249 li
377.375 96 li
377.875 96 li
378 96.1249 li
378.125 96 li
378.625 96 li
378.75 96.1249 li
378.875 96 li
379.375 96 li
379.5 96.1249 li
379.625 96 li
380.125 96 li
380.25 96.1249 li
380.375 96 li
380.875 96 li
381 96.1249 li
381.125 96 li
381.625 96 li
381.75 96.1249 li
381.875 96 li
382.375 96 li
382.5 96.1249 li
382.625 96 li
383.125 96 li
383.25 96.1249 li
383.375 96 li
383.875 96 li
384 96.1249 li
384.125 96 li
384.625 96 li
384.75 96.1249 li
384.875 96 li
385.375 96 li
385.5 96.1249 li
385.625 96 li
386.125 96 li
386.25 96.1249 li
386.375 96 li
386.875 96 li
387 96.1249 li
387.125 96 li
387.625 96 li
387.75 96.1249 li
387.875 96 li
388.375 96 li
388.5 96.1249 li
388.625 96 li
389.125 96 li
389.25 96.1249 li
389.375 96 li
389.875 96 li
390 96.1249 li
390.125 96 li
390.625 96 li
390.75 96.1249 li
390.875 96 li
391.375 96 li
391.5 96.1249 li
391.625 96 li
392.125 96 li
392.25 96.1249 li
392.375 96 li
392.875 96 li
393 96.1249 li
393.125 96 li
393.625 96 li
393.75 96.1249 li
393.875 96 li
394.375 96 li
394.5 96.1249 li
394.625 96 li
395.125 96 li
395.25 96.1249 li
395.375 96 li
395.875 96 li
396 96.1249 li
396.125 96 li
396.625 96 li
396.75 96.1249 li
396.875 96 li
397.375 96 li
397.5 96.1249 li
397.625 96 li
398.125 96 li
398.25 96.1249 li
398.375 96 li
398.875 96 li
399 96.1249 li
399.125 96 li
399.625 96 li
399.75 96.1249 li
399.875 96 li
400.375 96 li
400.5 96.1249 li
400.625 96 li
401.125 96 li
401.25 96.1249 li
401.375 96 li
401.875 96 li
402 96.1249 li
402.125 96 li
402.625 96 li
402.75 96.1249 li
402.875 96 li
403.375 96 li
403.5 96.1249 li
403.625 96 li
404.125 96 li
404.25 96.1249 li
404.375 96 li
404.875 96 li
405 96.1249 li
405.125 96 li
405.625 96 li
405.75 96.1249 li
405.875 96 li
406.375 96 li
406.5 96.1249 li
406.625 96 li
407.125 96 li
407.25 96.1249 li
407.375 96 li
407.875 96 li
408 96.1249 li
408.125 96 li
408.625 96 li
408.75 96.1249 li
408.875 96 li
409.375 96 li
409.5 96.1249 li
409.625 96 li
410.125 96 li
410.25 96.1249 li
410.375 96 li
410.875 96 li
411 96.1249 li
411.125 96 li
411.625 96 li
411.75 96.1249 li
411.875 96 li
412.375 96 li
412.5 96.1249 li
412.625 96 li
413.125 96 li
413.25 96.1249 li
413.375 96 li
413.875 96 li
414 96.1249 li
414.125 96 li
414.625 96 li
414.75 96.1249 li
414.875 96 li
415.375 96 li
415.5 96.1249 li
415.625 96 li
416.125 96 li
416.25 96.1249 li
416.375 96 li
416.875 96 li
417 96.1249 li
417.125 96 li
417.625 96 li
417.75 96.1249 li
417.875 96 li
418.375 96 li
418.5 96.1249 li
418.625 96 li
419.125 96 li
419.25 96.1249 li
419.375 96 li
419.875 96 li
420 96.1249 li
420.125 96 li
420.625 96 li
420.75 96.1249 li
420.875 96 li
421.375 96 li
421.5 96.1249 li
421.625 96 li
422.125 96 li
422.25 96.1249 li
422.375 96 li
422.875 96 li
423 96.1249 li
423.125 96 li
423.625 96 li
423.75 96.1249 li
423.875 96 li
424.375 96 li
424.5 96.1249 li
424.625 96 li
425.125 96 li
425.25 96.1249 li
425.375 96 li
425.875 96 li
426 96.1249 li
426.125 96 li
426.625 96 li
426.75 96.1249 li
426.875 96 li
427.375 96 li
427.5 96.1249 li
427.625 96 li
428.125 96 li
428.25 96.1249 li
428.375 96 li
428.875 96 li
429 96.1249 li
429.125 96 li
429.625 96 li
429.75 96.1249 li
429.875 96 li
430.375 96 li
430.5 96.1249 li
430.625 96 li
431.125 96 li
431.25 96.1249 li
431.375 96 li
431.875 96 li
432 96.1249 li
432.125 96 li
432.625 96 li
432.75 96.1249 li
432.875 96 li
433.375 96 li
433.5 96.1249 li
433.625 96 li
434.125 96 li
434.25 96.1249 li
434.375 96 li
434.875 96 li
435 96.1249 li
435.125 96 li
435.625 96 li
435.75 96.1249 li
435.875 96 li
436.375 96 li
436.5 96.1249 li
436.625 96 li
437.125 96 li
437.25 96.1249 li
437.375 96 li
437.875 96 li
438 96.1249 li
438.125 96 li
438.625 96 li
438.75 96.1249 li
438.875 96 li
439.375 96 li
439.5 96.1249 li
439.625 96 li
440.125 96 li
440.25 96.1249 li
440.375 96 li
440.875 96 li
440.875 96.0002 li
441 96.1253 li
441 96.6253 li
440.875 96.7502 li
441 96.8753 li
441 97.3753 li
440.875 97.5002 li
441 97.6252 li
441 98.1253 li
440.875 98.2502 li
441 98.3752 li
441 98.8753 li
440.875 99.0003 li
441 99.1252 li
441 99.6251 li
440.875 99.7503 li
441 99.8752 li
441 100.375 li
440.875 100.5 li
441 100.625 li
441 101.125 li
440.875 101.25 li
441 101.375 li
441 101.875 li
440.875 102 li
441 102.125 li
441 102.625 li
440.875 102.75 li
441 102.875 li
441 103.375 li
440.875 103.5 li
441 103.625 li
441 104.125 li
440.875 104.25 li
441 104.375 li
441 104.875 li
440.875 105 li
441 105.125 li
441 105.625 li
440.875 105.75 li
441 105.875 li
441 106.375 li
440.875 106.5 li
441 106.625 li
441 107.125 li
440.875 107.25 li
441 107.375 li
441 107.875 li
440.875 108 li
441 108.125 li
441 108.625 li
440.875 108.75 li
441 108.875 li
441 109.375 li
440.875 109.5 li
441 109.625 li
441 110.125 li
440.875 110.25 li
441 110.375 li
441 110.875 li
440.875 111 li
441 111.125 li
441 111.625 li
440.875 111.75 li
441 111.875 li
441 112.375 li
440.875 112.5 li
441 112.625 li
441 113.125 li
440.875 113.25 li
441 113.375 li
441 113.875 li
440.875 114 li
441 114.125 li
441 114.625 li
440.875 114.75 li
441 114.875 li
441 115.375 li
440.875 115.5 li
441 115.625 li
441 116.125 li
440.875 116.25 li
441 116.375 li
441 116.875 li
440.875 117 li
441 117.125 li
441 117.625 li
440.875 117.75 li
441 117.875 li
441 118.375 li
440.875 118.5 li
441 118.625 li
441 119.125 li
440.875 119.25 li
441 119.375 li
441 119.875 li
440.875 120 li
441 120.125 li
441 120.625 li
440.875 120.75 li
441 120.875 li
441 121.375 li
440.875 121.5 li
441 121.625 li
441 122.125 li
440.875 122.25 li
441 122.375 li
441 122.875 li
440.875 123 li
441 123.125 li
441 123.625 li
440.875 123.75 li
441 123.875 li
441 124.375 li
440.875 124.5 li
441 124.625 li
441 125.125 li
440.875 125.25 li
441 125.375 li
441 125.875 li
440.875 126 li
441 126.125 li
441 126.625 li
440.875 126.75 li
441 126.875 li
441 127.375 li
440.875 127.5 li
441 127.625 li
441 128.125 li
440.875 128.25 li
441 128.375 li
441 128.875 li
440.875 129 li
441 129.125 li
441 129.625 li
440.875 129.75 li
441 129.875 li
441 130.375 li
440.875 130.5 li
441 130.625 li
441 131.125 li
440.875 131.25 li
441 131.375 li
441 131.875 li
440.875 132 li
441 132.125 li
441 132.625 li
440.875 132.75 li
441 132.875 li
441 133.375 li
440.875 133.5 li
441 133.625 li
441 134.125 li
440.875 134.25 li
441 134.375 li
441 134.875 li
440.875 135 li
441 135.125 li
441 135.625 li
440.875 135.75 li
441 135.875 li
441 136.375 li
440.875 136.5 li
441 136.625 li
441 137.125 li
440.875 137.25 li
441 137.375 li
441 137.875 li
440.875 138 li
441 138.125 li
441 138.625 li
440.875 138.75 li
441 138.875 li
441 139.375 li
440.875 139.5 li
441 139.625 li
441 140.125 li
440.875 140.25 li
441 140.375 li
441 140.875 li
440.875 141 li
441 141.125 li
441 141.625 li
440.875 141.75 li
441 141.875 li
441 142.375 li
440.875 142.5 li
441 142.625 li
441 143.125 li
440.875 143.25 li
441 143.375 li
441 143.875 li
440.875 144 li
441 144.125 li
441 144.625 li
440.875 144.75 li
441 144.875 li
441 145.375 li
440.875 145.5 li
441 145.625 li
441 146.125 li
440.875 146.25 li
441 146.375 li
441 146.875 li
440.875 147 li
441 147.125 li
441 147.625 li
440.875 147.75 li
441 147.875 li
441 148.375 li
440.875 148.5 li
441 148.625 li
441 149.125 li
440.875 149.25 li
441 149.375 li
441 149.875 li
440.875 150 li
441 150.125 li
441 150.625 li
440.875 150.75 li
441 150.875 li
441 151.375 li
440.875 151.5 li
441 151.625 li
441 152.125 li
440.875 152.25 li
441 152.375 li
441 152.875 li
440.875 153 li
441 153.125 li
441 153.625 li
440.875 153.75 li
441 153.875 li
441 154.375 li
440.875 154.5 li
441 154.625 li
441 155.125 li
440.875 155.25 li
441 155.375 li
441 155.875 li
440.875 156 li
441 156.125 li
441 156.625 li
440.875 156.75 li
441 156.875 li
441 157.375 li
440.875 157.5 li
441 157.625 li
441 158.125 li
440.875 158.25 li
441 158.375 li
441 158.875 li
440.875 159 li
441 159.125 li
441 159.625 li
440.875 159.75 li
441 159.875 li
441 160.375 li
440.875 160.5 li
441 160.625 li
441 161.125 li
440.875 161.25 li
441 161.375 li
441 161.875 li
440.875 162 li
441 162.125 li
441 162.625 li
440.875 162.75 li
441 162.875 li
441 163.375 li
440.875 163.5 li
441 163.625 li
441 164.125 li
440.875 164.25 li
441 164.375 li
441 164.875 li
440.875 165 li
441 165.125 li
441 165.625 li
440.875 165.75 li
441 165.875 li
441 166.375 li
440.875 166.5 li
441 166.625 li
441 167.125 li
440.875 167.25 li
441 167.375 li
441 167.875 li
440.875 168 li
365.875 161.25 mo
365.875 161.25 li
366 161.375 li
436.5 161.375 li
436.588 161.338 li
436.625 161.25 li
436.625 121.5 li
436.588 121.412 li
436.5 121.375 li
366 121.375 li
365.911 121.412 li
365.875 121.5 li
365.875 161.25 li
level3{
gsave
clp
[1 0 0 -1 0 501 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [399.69 331.88 399.69 405.66 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
399.69 331.88 399.69 405.66 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
359.25 167.875 mo
359.375 168 li
359.25 168.125 li
359.125 168 li
359.25 167.875 li
360 167.875 mo
360.125 168 li
360 168.125 li
359.875 168 li
360 167.875 li
360.75 167.875 mo
360.875 168 li
360.75 168.125 li
360.625 168 li
360.75 167.875 li
361.5 167.875 mo
361.625 168 li
361.5 168.125 li
361.375 168 li
361.5 167.875 li
362.25 167.875 mo
362.375 168 li
362.25 168.125 li
362.125 168 li
362.25 167.875 li
363 167.875 mo
363.125 168 li
363 168.125 li
362.875 168 li
363 167.875 li
363.75 167.875 mo
363.875 168 li
363.75 168.125 li
363.625 168 li
363.75 167.875 li
364.5 167.875 mo
364.625 168 li
364.5 168.125 li
364.375 168 li
364.5 167.875 li
365.25 167.875 mo
365.375 168 li
365.25 168.125 li
365.125 168 li
365.25 167.875 li
366 167.875 mo
366.125 168 li
366 168.125 li
365.875 168 li
366 167.875 li
366.75 167.875 mo
366.875 168 li
366.75 168.125 li
366.625 168 li
366.75 167.875 li
367.5 167.875 mo
367.625 168 li
367.5 168.125 li
367.375 168 li
367.5 167.875 li
368.25 167.875 mo
368.375 168 li
368.25 168.125 li
368.125 168 li
368.25 167.875 li
369 167.875 mo
369.125 168 li
369 168.125 li
368.875 168 li
369 167.875 li
369.75 167.875 mo
369.875 168 li
369.75 168.125 li
369.625 168 li
369.75 167.875 li
370.5 167.875 mo
370.625 168 li
370.5 168.125 li
370.375 168 li
370.5 167.875 li
371.25 167.875 mo
371.375 168 li
371.25 168.125 li
371.125 168 li
371.25 167.875 li
372 167.875 mo
372.125 168 li
372 168.125 li
371.875 168 li
372 167.875 li
372.75 167.875 mo
372.875 168 li
372.75 168.125 li
372.625 168 li
372.75 167.875 li
373.5 167.875 mo
373.625 168 li
373.5 168.125 li
373.375 168 li
373.5 167.875 li
374.25 167.875 mo
374.375 168 li
374.25 168.125 li
374.125 168 li
374.25 167.875 li
375 167.875 mo
375.125 168 li
375 168.125 li
374.875 168 li
375 167.875 li
375.75 167.875 mo
375.875 168 li
375.75 168.125 li
375.625 168 li
375.75 167.875 li
376.5 167.875 mo
376.625 168 li
376.5 168.125 li
376.375 168 li
376.5 167.875 li
377.25 167.875 mo
377.375 168 li
377.25 168.125 li
377.125 168 li
377.25 167.875 li
378 167.875 mo
378.125 168 li
378 168.125 li
377.875 168 li
378 167.875 li
378.75 167.875 mo
378.875 168 li
378.75 168.125 li
378.625 168 li
378.75 167.875 li
379.5 167.875 mo
379.625 168 li
379.5 168.125 li
379.375 168 li
379.5 167.875 li
380.25 167.875 mo
380.375 168 li
380.25 168.125 li
380.125 168 li
380.25 167.875 li
381 167.875 mo
381.125 168 li
381 168.125 li
380.875 168 li
381 167.875 li
381.75 167.875 mo
381.875 168 li
381.75 168.125 li
381.625 168 li
381.75 167.875 li
382.5 167.875 mo
382.625 168 li
382.5 168.125 li
382.375 168 li
382.5 167.875 li
383.25 167.875 mo
383.375 168 li
383.25 168.125 li
383.125 168 li
383.25 167.875 li
384 167.875 mo
384.125 168 li
384 168.125 li
383.875 168 li
384 167.875 li
384.75 167.875 mo
384.875 168 li
384.75 168.125 li
384.625 168 li
384.75 167.875 li
385.5 167.875 mo
385.625 168 li
385.5 168.125 li
385.375 168 li
385.5 167.875 li
386.25 167.875 mo
386.375 168 li
386.25 168.125 li
386.125 168 li
386.25 167.875 li
387 167.875 mo
387.125 168 li
387 168.125 li
386.875 168 li
387 167.875 li
387.75 167.875 mo
387.875 168 li
387.75 168.125 li
387.625 168 li
387.75 167.875 li
388.5 167.875 mo
388.625 168 li
388.5 168.125 li
388.375 168 li
388.5 167.875 li
389.25 167.875 mo
389.375 168 li
389.25 168.125 li
389.125 168 li
389.25 167.875 li
390 167.875 mo
390.125 168 li
390 168.125 li
389.875 168 li
390 167.875 li
390.75 167.875 mo
390.875 168 li
390.75 168.125 li
390.625 168 li
390.75 167.875 li
391.5 167.875 mo
391.625 168 li
391.5 168.125 li
391.375 168 li
391.5 167.875 li
392.25 167.875 mo
392.375 168 li
392.25 168.125 li
392.125 168 li
392.25 167.875 li
393 167.875 mo
393.125 168 li
393 168.125 li
392.875 168 li
393 167.875 li
393.75 167.875 mo
393.875 168 li
393.75 168.125 li
393.625 168 li
393.75 167.875 li
394.5 167.875 mo
394.625 168 li
394.5 168.125 li
394.375 168 li
394.5 167.875 li
395.25 167.875 mo
395.375 168 li
395.25 168.125 li
395.125 168 li
395.25 167.875 li
396 167.875 mo
396.125 168 li
396 168.125 li
395.875 168 li
396 167.875 li
396.75 167.875 mo
396.875 168 li
396.75 168.125 li
396.625 168 li
396.75 167.875 li
397.5 167.875 mo
397.625 168 li
397.5 168.125 li
397.375 168 li
397.5 167.875 li
398.25 167.875 mo
398.375 168 li
398.25 168.125 li
398.125 168 li
398.25 167.875 li
399 167.875 mo
399.125 168 li
399 168.125 li
398.875 168 li
399 167.875 li
399.75 167.875 mo
399.875 168 li
399.75 168.125 li
399.625 168 li
399.75 167.875 li
400.5 167.875 mo
400.625 168 li
400.5 168.125 li
400.375 168 li
400.5 167.875 li
401.25 167.875 mo
401.375 168 li
401.25 168.125 li
401.125 168 li
401.25 167.875 li
402 167.875 mo
402.125 168 li
402 168.125 li
401.875 168 li
402 167.875 li
402.75 167.875 mo
402.875 168 li
402.75 168.125 li
402.625 168 li
402.75 167.875 li
403.5 167.875 mo
403.625 168 li
403.5 168.125 li
403.375 168 li
403.5 167.875 li
404.25 167.875 mo
404.375 168 li
404.25 168.125 li
404.125 168 li
404.25 167.875 li
405 167.875 mo
405.125 168 li
405 168.125 li
404.875 168 li
405 167.875 li
405.75 167.875 mo
405.875 168 li
405.75 168.125 li
405.625 168 li
405.75 167.875 li
406.5 167.875 mo
406.625 168 li
406.5 168.125 li
406.375 168 li
406.5 167.875 li
407.25 167.875 mo
407.375 168 li
407.25 168.125 li
407.125 168 li
407.25 167.875 li
408 167.875 mo
408.125 168 li
408 168.125 li
407.875 168 li
408 167.875 li
408.75 167.875 mo
408.875 168 li
408.75 168.125 li
408.625 168 li
408.75 167.875 li
409.5 167.875 mo
409.625 168 li
409.5 168.125 li
409.375 168 li
409.5 167.875 li
410.25 167.875 mo
410.375 168 li
410.25 168.125 li
410.125 168 li
410.25 167.875 li
411 167.875 mo
411.125 168 li
411 168.125 li
410.875 168 li
411 167.875 li
411.75 167.875 mo
411.875 168 li
411.75 168.125 li
411.625 168 li
411.75 167.875 li
412.5 167.875 mo
412.625 168 li
412.5 168.125 li
412.375 168 li
412.5 167.875 li
413.25 167.875 mo
413.375 168 li
413.25 168.125 li
413.125 168 li
413.25 167.875 li
414 167.875 mo
414.125 168 li
414 168.125 li
413.875 168 li
414 167.875 li
414.75 167.875 mo
414.875 168 li
414.75 168.125 li
414.625 168 li
414.75 167.875 li
415.5 167.875 mo
415.625 168 li
415.5 168.125 li
415.375 168 li
415.5 167.875 li
416.25 167.875 mo
416.375 168 li
416.25 168.125 li
416.125 168 li
416.25 167.875 li
417 167.875 mo
417.125 168 li
417 168.125 li
416.875 168 li
417 167.875 li
417.75 167.875 mo
417.875 168 li
417.75 168.125 li
417.625 168 li
417.75 167.875 li
418.5 167.875 mo
418.625 168 li
418.5 168.125 li
418.375 168 li
418.5 167.875 li
419.25 167.875 mo
419.375 168 li
419.25 168.125 li
419.125 168 li
419.25 167.875 li
420 167.875 mo
420.125 168 li
420 168.125 li
419.875 168 li
420 167.875 li
420.75 167.875 mo
420.875 168 li
420.75 168.125 li
420.625 168 li
420.75 167.875 li
421.5 167.875 mo
421.625 168 li
421.5 168.125 li
421.375 168 li
421.5 167.875 li
422.25 167.875 mo
422.375 168 li
422.25 168.125 li
422.125 168 li
422.25 167.875 li
423 167.875 mo
423.125 168 li
423 168.125 li
422.875 168 li
423 167.875 li
423.75 167.875 mo
423.875 168 li
423.75 168.125 li
423.625 168 li
423.75 167.875 li
424.5 167.875 mo
424.625 168 li
424.5 168.125 li
424.375 168 li
424.5 167.875 li
425.25 167.875 mo
425.375 168 li
425.25 168.125 li
425.125 168 li
425.25 167.875 li
426 167.875 mo
426.125 168 li
426 168.125 li
425.875 168 li
426 167.875 li
426.75 167.875 mo
426.875 168 li
426.75 168.125 li
426.625 168 li
426.75 167.875 li
427.5 167.875 mo
427.625 168 li
427.5 168.125 li
427.375 168 li
427.5 167.875 li
428.25 167.875 mo
428.375 168 li
428.25 168.125 li
428.125 168 li
428.25 167.875 li
429 167.875 mo
429.125 168 li
429 168.125 li
428.875 168 li
429 167.875 li
429.75 167.875 mo
429.875 168 li
429.75 168.125 li
429.625 168 li
429.75 167.875 li
430.5 167.875 mo
430.625 168 li
430.5 168.125 li
430.375 168 li
430.5 167.875 li
431.25 167.875 mo
431.375 168 li
431.25 168.125 li
431.125 168 li
431.25 167.875 li
432 167.875 mo
432.125 168 li
432 168.125 li
431.875 168 li
432 167.875 li
432.75 167.875 mo
432.875 168 li
432.75 168.125 li
432.625 168 li
432.75 167.875 li
433.5 167.875 mo
433.625 168 li
433.5 168.125 li
433.375 168 li
433.5 167.875 li
434.25 167.875 mo
434.375 168 li
434.25 168.125 li
434.125 168 li
434.25 167.875 li
435 167.875 mo
435.125 168 li
435 168.125 li
434.875 168 li
435 167.875 li
435.75 167.875 mo
435.875 168 li
435.75 168.125 li
435.625 168 li
435.75 167.875 li
436.5 167.875 mo
436.625 168 li
436.5 168.125 li
436.375 168 li
436.5 167.875 li
437.25 167.875 mo
437.375 168 li
437.25 168.125 li
437.125 168 li
437.25 167.875 li
438 167.875 mo
438.125 168 li
438 168.125 li
437.875 168 li
438 167.875 li
438.75 167.875 mo
438.875 168 li
438.75 168.125 li
438.625 168 li
438.75 167.875 li
439.5 167.875 mo
439.625 168 li
439.5 168.125 li
439.375 168 li
439.5 167.875 li
440.25 167.875 mo
440.375 168 li
440.25 168.125 li
440.125 168 li
440.25 167.875 li
441 167.875 mo
441.125 168 li
441 168.125 li
440.875 168 li
441 167.875 li
440.875 167.25 mo
441 167.125 li
441.125 167.25 li
441 167.375 li
440.875 167.25 li
440.875 166.5 mo
441 166.375 li
441.125 166.5 li
441 166.625 li
440.875 166.5 li
440.875 165.75 mo
441 165.625 li
441.125 165.75 li
441 165.875 li
440.875 165.75 li
440.875 165 mo
441 164.875 li
441.125 165 li
441 165.125 li
440.875 165 li
440.875 164.25 mo
441 164.125 li
441.125 164.25 li
441 164.375 li
440.875 164.25 li
440.875 163.5 mo
441 163.375 li
441.125 163.5 li
441 163.625 li
440.875 163.5 li
440.875 162.75 mo
441 162.625 li
441.125 162.75 li
441 162.875 li
440.875 162.75 li
440.875 162 mo
441 161.875 li
441.125 162 li
441 162.125 li
440.875 162 li
440.875 161.25 mo
441 161.125 li
441.125 161.25 li
441 161.375 li
440.875 161.25 li
440.875 160.5 mo
441 160.375 li
441.125 160.5 li
441 160.625 li
440.875 160.5 li
440.875 159.75 mo
441 159.625 li
441.125 159.75 li
441 159.875 li
440.875 159.75 li
440.875 159 mo
441 158.875 li
441.125 159 li
441 159.125 li
440.875 159 li
440.875 158.25 mo
441 158.125 li
441.125 158.25 li
441 158.375 li
440.875 158.25 li
440.875 157.5 mo
441 157.375 li
441.125 157.5 li
441 157.625 li
440.875 157.5 li
440.875 156.75 mo
441 156.625 li
441.125 156.75 li
441 156.875 li
440.875 156.75 li
440.875 156 mo
441 155.875 li
441.125 156 li
441 156.125 li
440.875 156 li
440.875 155.25 mo
441 155.125 li
441.125 155.25 li
441 155.375 li
440.875 155.25 li
440.875 154.5 mo
441 154.375 li
441.125 154.5 li
441 154.625 li
440.875 154.5 li
440.875 153.75 mo
441 153.625 li
441.125 153.75 li
441 153.875 li
440.875 153.75 li
440.875 153 mo
441 152.875 li
441.125 153 li
441 153.125 li
440.875 153 li
440.875 152.25 mo
441 152.125 li
441.125 152.25 li
441 152.375 li
440.875 152.25 li
440.875 151.5 mo
441 151.375 li
441.125 151.5 li
441 151.625 li
440.875 151.5 li
440.875 150.75 mo
441 150.625 li
441.125 150.75 li
441 150.875 li
440.875 150.75 li
440.875 150 mo
441 149.875 li
441.125 150 li
441 150.125 li
440.875 150 li
440.875 149.25 mo
441 149.125 li
441.125 149.25 li
441 149.375 li
440.875 149.25 li
440.875 148.5 mo
441 148.375 li
441.125 148.5 li
441 148.625 li
440.875 148.5 li
440.875 147.75 mo
441 147.625 li
441.125 147.75 li
441 147.875 li
440.875 147.75 li
440.875 147 mo
441 146.875 li
441.125 147 li
441 147.125 li
440.875 147 li
440.875 146.25 mo
441 146.125 li
441.125 146.25 li
441 146.375 li
440.875 146.25 li
440.875 145.5 mo
441 145.375 li
441.125 145.5 li
441 145.625 li
440.875 145.5 li
440.875 144.75 mo
441 144.625 li
441.125 144.75 li
441 144.875 li
440.875 144.75 li
440.875 144 mo
441 143.875 li
441.125 144 li
441 144.125 li
440.875 144 li
440.875 143.25 mo
441 143.125 li
441.125 143.25 li
441 143.375 li
440.875 143.25 li
440.875 142.5 mo
441 142.375 li
441.125 142.5 li
441 142.625 li
440.875 142.5 li
440.875 141.75 mo
441 141.625 li
441.125 141.75 li
441 141.875 li
440.875 141.75 li
440.875 141 mo
441 140.875 li
441.125 141 li
441 141.125 li
440.875 141 li
440.875 140.25 mo
441 140.125 li
441.125 140.25 li
441 140.375 li
440.875 140.25 li
440.875 139.5 mo
441 139.375 li
441.125 139.5 li
441 139.625 li
440.875 139.5 li
440.875 138.75 mo
441 138.625 li
441.125 138.75 li
441 138.875 li
440.875 138.75 li
440.875 138 mo
441 137.875 li
441.125 138 li
441 138.125 li
440.875 138 li
440.875 137.25 mo
441 137.125 li
441.125 137.25 li
441 137.375 li
440.875 137.25 li
440.875 136.5 mo
441 136.375 li
441.125 136.5 li
441 136.625 li
440.875 136.5 li
440.875 135.75 mo
441 135.625 li
441.125 135.75 li
441 135.875 li
440.875 135.75 li
440.875 135 mo
441 134.875 li
441.125 135 li
441 135.125 li
440.875 135 li
440.875 134.25 mo
441 134.125 li
441.125 134.25 li
441 134.375 li
440.875 134.25 li
440.875 133.5 mo
441 133.375 li
441.125 133.5 li
441 133.625 li
440.875 133.5 li
440.875 132.75 mo
441 132.625 li
441.125 132.75 li
441 132.875 li
440.875 132.75 li
440.875 132 mo
441 131.875 li
441.125 132 li
441 132.125 li
440.875 132 li
440.875 131.25 mo
441 131.125 li
441.125 131.25 li
441 131.375 li
440.875 131.25 li
440.875 130.5 mo
441 130.375 li
441.125 130.5 li
441 130.625 li
440.875 130.5 li
440.875 129.75 mo
441 129.625 li
441.125 129.75 li
441 129.875 li
440.875 129.75 li
440.875 129 mo
441 128.875 li
441.125 129 li
441 129.125 li
440.875 129 li
440.875 128.25 mo
441 128.125 li
441.125 128.25 li
441 128.375 li
440.875 128.25 li
440.875 127.5 mo
441 127.375 li
441.125 127.5 li
441 127.625 li
440.875 127.5 li
440.875 126.75 mo
441 126.625 li
441.125 126.75 li
441 126.875 li
440.875 126.75 li
440.875 126 mo
441 125.875 li
441.125 126 li
441 126.125 li
440.875 126 li
440.875 125.25 mo
441 125.125 li
441.125 125.25 li
441 125.375 li
440.875 125.25 li
440.875 124.5 mo
441 124.375 li
441.125 124.5 li
441 124.625 li
440.875 124.5 li
440.875 123.75 mo
441 123.625 li
441.125 123.75 li
441 123.875 li
440.875 123.75 li
440.875 123 mo
441 122.875 li
441.125 123 li
441 123.125 li
440.875 123 li
440.875 122.25 mo
441 122.125 li
441.125 122.25 li
441 122.375 li
440.875 122.25 li
440.875 121.5 mo
441 121.375 li
441.125 121.5 li
441 121.625 li
440.875 121.5 li
440.875 120.75 mo
441 120.625 li
441.125 120.75 li
441 120.875 li
440.875 120.75 li
440.875 120 mo
441 119.875 li
441.125 120 li
441 120.125 li
440.875 120 li
440.875 119.25 mo
441 119.125 li
441.125 119.25 li
441 119.375 li
440.875 119.25 li
440.875 118.5 mo
441 118.375 li
441.125 118.5 li
441 118.625 li
440.875 118.5 li
440.875 117.75 mo
441 117.625 li
441.125 117.75 li
441 117.875 li
440.875 117.75 li
440.875 117 mo
441 116.875 li
441.125 117 li
441 117.125 li
440.875 117 li
440.875 116.25 mo
441 116.125 li
441.125 116.25 li
441 116.375 li
440.875 116.25 li
440.875 115.5 mo
441 115.375 li
441.125 115.5 li
441 115.625 li
440.875 115.5 li
440.875 114.75 mo
441 114.625 li
441.125 114.75 li
441 114.875 li
440.875 114.75 li
440.875 114 mo
441 113.875 li
441.125 114 li
441 114.125 li
440.875 114 li
440.875 113.25 mo
441 113.125 li
441.125 113.25 li
441 113.375 li
440.875 113.25 li
440.875 112.5 mo
441 112.375 li
441.125 112.5 li
441 112.625 li
440.875 112.5 li
440.875 111.75 mo
441 111.625 li
441.125 111.75 li
441 111.875 li
440.875 111.75 li
440.875 111 mo
441 110.875 li
441.125 111 li
441 111.125 li
440.875 111 li
440.875 110.25 mo
441 110.125 li
441.125 110.25 li
441 110.375 li
440.875 110.25 li
440.875 109.5 mo
441 109.375 li
441.125 109.5 li
441 109.625 li
440.875 109.5 li
440.875 108.75 mo
441 108.625 li
441.125 108.75 li
441 108.875 li
440.875 108.75 li
440.875 108 mo
441 107.875 li
441.125 108 li
441 108.125 li
440.875 108 li
440.875 107.25 mo
441 107.125 li
441.125 107.25 li
441 107.375 li
440.875 107.25 li
440.875 106.5 mo
441 106.375 li
441.125 106.5 li
441 106.625 li
440.875 106.5 li
440.875 105.75 mo
441 105.625 li
441.125 105.75 li
441 105.875 li
440.875 105.75 li
440.875 105 mo
441 104.875 li
441.125 105 li
441 105.125 li
440.875 105 li
440.875 104.25 mo
441 104.125 li
441.125 104.25 li
441 104.375 li
440.875 104.25 li
440.875 103.5 mo
441 103.375 li
441.125 103.5 li
441 103.625 li
440.875 103.5 li
440.875 102.75 mo
441 102.625 li
441.125 102.75 li
441 102.875 li
440.875 102.75 li
440.875 102 mo
441 101.875 li
441.125 102 li
441 102.125 li
440.875 102 li
440.875 101.25 mo
441 101.125 li
441.125 101.25 li
441 101.375 li
440.875 101.25 li
440.875 100.5 mo
441 100.375 li
441.125 100.5 li
441 100.625 li
440.875 100.5 li
440.875 99.7503 mo
441 99.6251 li
441.125 99.7503 li
441 99.8752 li
440.875 99.7503 li
440.875 99.0003 mo
441 98.8753 li
441.125 99.0003 li
441 99.1252 li
440.875 99.0003 li
440.875 98.2502 mo
441 98.1253 li
441.125 98.2502 li
441 98.3752 li
440.875 98.2502 li
440.875 97.5002 mo
441 97.3753 li
441.125 97.5002 li
441 97.6252 li
440.875 97.5002 li
440.875 96.7502 mo
441 96.6253 li
441.125 96.7502 li
441 96.8753 li
440.875 96.7502 li
440.875 96.0002 mo
441 95.8752 li
441.125 96.0002 li
441 96.1253 li
440.875 96.0002 li
440.25 96.1249 mo
440.125 96 li
440.25 95.875 li
440.375 96 li
440.25 96.1249 li
439.5 96.1249 mo
439.375 96 li
439.5 95.875 li
439.625 96 li
439.5 96.1249 li
438.75 96.1249 mo
438.625 96 li
438.75 95.875 li
438.875 96 li
438.75 96.1249 li
438 96.1249 mo
437.875 96 li
438 95.875 li
438.125 96 li
438 96.1249 li
437.25 96.1249 mo
437.125 96 li
437.25 95.875 li
437.375 96 li
437.25 96.1249 li
436.5 96.1249 mo
436.375 96 li
436.5 95.875 li
436.625 96 li
436.5 96.1249 li
435.75 96.1249 mo
435.625 96 li
435.75 95.875 li
435.875 96 li
435.75 96.1249 li
435 96.1249 mo
434.875 96 li
435 95.875 li
435.125 96 li
435 96.1249 li
434.25 96.1249 mo
434.125 96 li
434.25 95.875 li
434.375 96 li
434.25 96.1249 li
433.5 96.1249 mo
433.375 96 li
433.5 95.875 li
433.625 96 li
433.5 96.1249 li
432.75 96.1249 mo
432.625 96 li
432.75 95.875 li
432.875 96 li
432.75 96.1249 li
432 96.1249 mo
431.875 96 li
432 95.875 li
432.125 96 li
432 96.1249 li
431.25 96.1249 mo
431.125 96 li
431.25 95.875 li
431.375 96 li
431.25 96.1249 li
430.5 96.1249 mo
430.375 96 li
430.5 95.875 li
430.625 96 li
430.5 96.1249 li
429.75 96.1249 mo
429.625 96 li
429.75 95.875 li
429.875 96 li
429.75 96.1249 li
429 96.1249 mo
428.875 96 li
429 95.875 li
429.125 96 li
429 96.1249 li
428.25 96.1249 mo
428.125 96 li
428.25 95.875 li
428.375 96 li
428.25 96.1249 li
427.5 96.1249 mo
427.375 96 li
427.5 95.875 li
427.625 96 li
427.5 96.1249 li
426.75 96.1249 mo
426.625 96 li
426.75 95.875 li
426.875 96 li
426.75 96.1249 li
426 96.1249 mo
425.875 96 li
426 95.875 li
426.125 96 li
426 96.1249 li
425.25 96.1249 mo
425.125 96 li
425.25 95.875 li
425.375 96 li
425.25 96.1249 li
424.5 96.1249 mo
424.375 96 li
424.5 95.875 li
424.625 96 li
424.5 96.1249 li
423.75 96.1249 mo
423.625 96 li
423.75 95.875 li
423.875 96 li
423.75 96.1249 li
423 96.1249 mo
422.875 96 li
423 95.875 li
423.125 96 li
423 96.1249 li
422.25 96.1249 mo
422.125 96 li
422.25 95.875 li
422.375 96 li
422.25 96.1249 li
421.5 96.1249 mo
421.375 96 li
421.5 95.875 li
421.625 96 li
421.5 96.1249 li
420.75 96.1249 mo
420.625 96 li
420.75 95.875 li
420.875 96 li
420.75 96.1249 li
420 96.1249 mo
419.875 96 li
420 95.875 li
420.125 96 li
420 96.1249 li
419.25 96.1249 mo
419.125 96 li
419.25 95.875 li
419.375 96 li
419.25 96.1249 li
418.5 96.1249 mo
418.375 96 li
418.5 95.875 li
418.625 96 li
418.5 96.1249 li
417.75 96.1249 mo
417.625 96 li
417.75 95.875 li
417.875 96 li
417.75 96.1249 li
417 96.1249 mo
416.875 96 li
417 95.875 li
417.125 96 li
417 96.1249 li
416.25 96.1249 mo
416.125 96 li
416.25 95.875 li
416.375 96 li
416.25 96.1249 li
415.5 96.1249 mo
415.375 96 li
415.5 95.875 li
415.625 96 li
415.5 96.1249 li
414.75 96.1249 mo
414.625 96 li
414.75 95.875 li
414.875 96 li
414.75 96.1249 li
414 96.1249 mo
413.875 96 li
414 95.875 li
414.125 96 li
414 96.1249 li
413.25 96.1249 mo
413.125 96 li
413.25 95.875 li
413.375 96 li
413.25 96.1249 li
412.5 96.1249 mo
412.375 96 li
412.5 95.875 li
412.625 96 li
412.5 96.1249 li
411.75 96.1249 mo
411.625 96 li
411.75 95.875 li
411.875 96 li
411.75 96.1249 li
411 96.1249 mo
410.875 96 li
411 95.875 li
411.125 96 li
411 96.1249 li
410.25 96.1249 mo
410.125 96 li
410.25 95.875 li
410.375 96 li
410.25 96.1249 li
409.5 96.1249 mo
409.375 96 li
409.5 95.875 li
409.625 96 li
409.5 96.1249 li
408.75 96.1249 mo
408.625 96 li
408.75 95.875 li
408.875 96 li
408.75 96.1249 li
408 96.1249 mo
407.875 96 li
408 95.875 li
408.125 96 li
408 96.1249 li
407.25 96.1249 mo
407.125 96 li
407.25 95.875 li
407.375 96 li
407.25 96.1249 li
406.5 96.1249 mo
406.375 96 li
406.5 95.875 li
406.625 96 li
406.5 96.1249 li
405.75 96.1249 mo
405.625 96 li
405.75 95.875 li
405.875 96 li
405.75 96.1249 li
405 96.1249 mo
404.875 96 li
405 95.875 li
405.125 96 li
405 96.1249 li
404.25 96.1249 mo
404.125 96 li
404.25 95.875 li
404.375 96 li
404.25 96.1249 li
403.5 96.1249 mo
403.375 96 li
403.5 95.875 li
403.625 96 li
403.5 96.1249 li
402.75 96.1249 mo
402.625 96 li
402.75 95.875 li
402.875 96 li
402.75 96.1249 li
402 96.1249 mo
401.875 96 li
402 95.875 li
402.125 96 li
402 96.1249 li
401.25 96.1249 mo
401.125 96 li
401.25 95.875 li
401.375 96 li
401.25 96.1249 li
400.5 96.1249 mo
400.375 96 li
400.5 95.875 li
400.625 96 li
400.5 96.1249 li
399.75 96.1249 mo
399.625 96 li
399.75 95.875 li
399.875 96 li
399.75 96.1249 li
399 96.1249 mo
398.875 96 li
399 95.875 li
399.125 96 li
399 96.1249 li
398.25 96.1249 mo
398.125 96 li
398.25 95.875 li
398.375 96 li
398.25 96.1249 li
397.5 96.1249 mo
397.375 96 li
397.5 95.875 li
397.625 96 li
397.5 96.1249 li
396.75 96.1249 mo
396.625 96 li
396.75 95.875 li
396.875 96 li
396.75 96.1249 li
396 96.1249 mo
395.875 96 li
396 95.875 li
396.125 96 li
396 96.1249 li
395.25 96.1249 mo
395.125 96 li
395.25 95.875 li
395.375 96 li
395.25 96.1249 li
394.5 96.1249 mo
394.375 96 li
394.5 95.875 li
394.625 96 li
394.5 96.1249 li
393.75 96.1249 mo
393.625 96 li
393.75 95.875 li
393.875 96 li
393.75 96.1249 li
393 96.1249 mo
392.875 96 li
393 95.875 li
393.125 96 li
393 96.1249 li
392.25 96.1249 mo
392.125 96 li
392.25 95.875 li
392.375 96 li
392.25 96.1249 li
391.5 96.1249 mo
391.375 96 li
391.5 95.875 li
391.625 96 li
391.5 96.1249 li
390.75 96.1249 mo
390.625 96 li
390.75 95.875 li
390.875 96 li
390.75 96.1249 li
390 96.1249 mo
389.875 96 li
390 95.875 li
390.125 96 li
390 96.1249 li
389.25 96.1249 mo
389.125 96 li
389.25 95.875 li
389.375 96 li
389.25 96.1249 li
388.5 96.1249 mo
388.375 96 li
388.5 95.875 li
388.625 96 li
388.5 96.1249 li
387.75 96.1249 mo
387.625 96 li
387.75 95.875 li
387.875 96 li
387.75 96.1249 li
387 96.1249 mo
386.875 96 li
387 95.875 li
387.125 96 li
387 96.1249 li
386.25 96.1249 mo
386.125 96 li
386.25 95.875 li
386.375 96 li
386.25 96.1249 li
385.5 96.1249 mo
385.375 96 li
385.5 95.875 li
385.625 96 li
385.5 96.1249 li
384.75 96.1249 mo
384.625 96 li
384.75 95.875 li
384.875 96 li
384.75 96.1249 li
384 96.1249 mo
383.875 96 li
384 95.875 li
384.125 96 li
384 96.1249 li
383.25 96.1249 mo
383.125 96 li
383.25 95.875 li
383.375 96 li
383.25 96.1249 li
382.5 96.1249 mo
382.375 96 li
382.5 95.875 li
382.625 96 li
382.5 96.1249 li
381.75 96.1249 mo
381.625 96 li
381.75 95.875 li
381.875 96 li
381.75 96.1249 li
381 96.1249 mo
380.875 96 li
381 95.875 li
381.125 96 li
381 96.1249 li
380.25 96.1249 mo
380.125 96 li
380.25 95.875 li
380.375 96 li
380.25 96.1249 li
379.5 96.1249 mo
379.375 96 li
379.5 95.875 li
379.625 96 li
379.5 96.1249 li
378.75 96.1249 mo
378.625 96 li
378.75 95.875 li
378.875 96 li
378.75 96.1249 li
378 96.1249 mo
377.875 96 li
378 95.875 li
378.125 96 li
378 96.1249 li
377.25 96.1249 mo
377.125 96 li
377.25 95.875 li
377.375 96 li
377.25 96.1249 li
376.5 96.1249 mo
376.375 96 li
376.5 95.875 li
376.625 96 li
376.5 96.1249 li
375.75 96.1249 mo
375.625 96 li
375.75 95.875 li
375.875 96 li
375.75 96.1249 li
375 96.1249 mo
374.875 96 li
375 95.875 li
375.125 96 li
375 96.1249 li
374.25 96.1249 mo
374.125 96 li
374.25 95.875 li
374.375 96 li
374.25 96.1249 li
373.5 96.1249 mo
373.375 96 li
373.5 95.875 li
373.625 96 li
373.5 96.1249 li
372.75 96.1249 mo
372.625 96 li
372.75 95.875 li
372.875 96 li
372.75 96.1249 li
372 96.1249 mo
371.875 96 li
372 95.875 li
372.125 96 li
372 96.1249 li
371.25 96.1249 mo
371.125 96 li
371.25 95.875 li
371.375 96 li
371.25 96.1249 li
370.5 96.1249 mo
370.375 96 li
370.5 95.875 li
370.625 96 li
370.5 96.1249 li
369.75 96.1249 mo
369.625 96 li
369.75 95.875 li
369.875 96 li
369.75 96.1249 li
369 96.1249 mo
368.875 96 li
369 95.875 li
369.125 96 li
369 96.1249 li
368.25 96.1249 mo
368.125 96 li
368.25 95.875 li
368.375 96 li
368.25 96.1249 li
367.5 96.1249 mo
367.375 96 li
367.5 95.875 li
367.625 96 li
367.5 96.1249 li
366.75 96.1249 mo
366.625 96 li
366.75 95.875 li
366.875 96 li
366.75 96.1249 li
366 96.1249 mo
365.875 96 li
366 95.875 li
366.125 96 li
366 96.1249 li
365.25 96.1249 mo
365.125 96 li
365.25 95.875 li
365.375 96 li
365.25 96.1249 li
364.5 96.1249 mo
364.375 96 li
364.5 95.875 li
364.625 96 li
364.5 96.1249 li
363.75 96.1249 mo
363.625 96 li
363.75 95.875 li
363.875 96 li
363.75 96.1249 li
363 96.1249 mo
362.875 96 li
363 95.875 li
363.125 96 li
363 96.1249 li
362.25 96.1249 mo
362.125 96 li
362.25 95.875 li
362.375 96 li
362.25 96.1249 li
361.5 96.1249 mo
361.375 96 li
361.5 95.875 li
361.625 96 li
361.5 96.1249 li
360.75 96.1249 mo
360.625 96 li
360.75 95.875 li
360.875 96 li
360.75 96.1249 li
360 96.1249 mo
359.875 96 li
360 95.875 li
360.125 96 li
360 96.1249 li
359.25 96.1249 mo
359.125 96 li
359.25 95.875 li
359.375 96 li
359.25 96.1249 li
358.5 96.1249 mo
358.375 96 li
358.5 95.875 li
358.625 96 li
358.5 96.1249 li
358.625 96.7498 mo
358.5 96.8747 li
358.375 96.7498 li
358.5 96.6246 li
358.625 96.7498 li
358.625 97.4996 mo
358.5 97.6247 li
358.375 97.4996 li
358.5 97.3747 li
358.625 97.4996 li
358.625 98.2496 mo
358.5 98.3748 li
358.375 98.2496 li
358.5 98.1247 li
358.625 98.2496 li
358.625 98.9996 mo
358.5 99.1248 li
358.375 98.9996 li
358.5 98.8747 li
358.625 98.9996 li
358.625 99.7497 mo
358.5 99.8746 li
358.375 99.7497 li
358.5 99.6247 li
358.625 99.7497 li
358.625 100.5 mo
358.5 100.625 li
358.375 100.5 li
358.5 100.375 li
358.625 100.5 li
358.625 101.25 mo
358.5 101.375 li
358.375 101.25 li
358.5 101.125 li
358.625 101.25 li
358.625 102 mo
358.5 102.125 li
358.375 102 li
358.5 101.875 li
358.625 102 li
358.625 102.75 mo
358.5 102.875 li
358.375 102.75 li
358.5 102.625 li
358.625 102.75 li
358.625 103.5 mo
358.5 103.625 li
358.375 103.5 li
358.5 103.375 li
358.625 103.5 li
358.625 104.25 mo
358.5 104.375 li
358.375 104.25 li
358.5 104.125 li
358.625 104.25 li
358.625 105 mo
358.5 105.125 li
358.375 105 li
358.5 104.875 li
358.625 105 li
358.625 105.75 mo
358.5 105.875 li
358.375 105.75 li
358.5 105.625 li
358.625 105.75 li
358.625 106.5 mo
358.5 106.625 li
358.375 106.5 li
358.5 106.375 li
358.625 106.5 li
358.625 107.25 mo
358.5 107.375 li
358.375 107.25 li
358.5 107.125 li
358.625 107.25 li
358.625 108 mo
358.5 108.125 li
358.375 108 li
358.5 107.875 li
358.625 108 li
358.625 108.75 mo
358.5 108.875 li
358.375 108.75 li
358.5 108.625 li
358.625 108.75 li
358.625 109.5 mo
358.5 109.625 li
358.375 109.5 li
358.5 109.375 li
358.625 109.5 li
358.625 110.25 mo
358.5 110.375 li
358.375 110.25 li
358.5 110.125 li
358.625 110.25 li
358.625 111 mo
358.5 111.125 li
358.375 111 li
358.5 110.875 li
358.625 111 li
358.625 111.75 mo
358.5 111.875 li
358.375 111.75 li
358.5 111.625 li
358.625 111.75 li
358.625 112.5 mo
358.5 112.625 li
358.375 112.5 li
358.5 112.375 li
358.625 112.5 li
358.625 113.25 mo
358.5 113.375 li
358.375 113.25 li
358.5 113.125 li
358.625 113.25 li
358.625 114 mo
358.5 114.125 li
358.375 114 li
358.5 113.875 li
358.625 114 li
358.625 114.75 mo
358.5 114.875 li
358.375 114.75 li
358.5 114.625 li
358.625 114.75 li
358.625 115.5 mo
358.5 115.625 li
358.375 115.5 li
358.5 115.375 li
358.625 115.5 li
358.625 116.25 mo
358.5 116.375 li
358.375 116.25 li
358.5 116.125 li
358.625 116.25 li
358.625 117 mo
358.5 117.125 li
358.375 117 li
358.5 116.875 li
358.625 117 li
358.625 117.75 mo
358.5 117.875 li
358.375 117.75 li
358.5 117.625 li
358.625 117.75 li
358.625 118.5 mo
358.5 118.625 li
358.375 118.5 li
358.5 118.375 li
358.625 118.5 li
358.625 119.25 mo
358.5 119.375 li
358.375 119.25 li
358.5 119.125 li
358.625 119.25 li
358.625 120 mo
358.5 120.125 li
358.375 120 li
358.5 119.875 li
358.625 120 li
358.625 120.75 mo
358.5 120.875 li
358.375 120.75 li
358.5 120.625 li
358.625 120.75 li
358.625 121.5 mo
358.5 121.625 li
358.375 121.5 li
358.5 121.375 li
358.625 121.5 li
358.625 122.25 mo
358.5 122.375 li
358.375 122.25 li
358.5 122.125 li
358.625 122.25 li
358.625 123 mo
358.5 123.125 li
358.375 123 li
358.5 122.875 li
358.625 123 li
358.625 123.75 mo
358.5 123.875 li
358.375 123.75 li
358.5 123.625 li
358.625 123.75 li
358.625 124.5 mo
358.5 124.625 li
358.375 124.5 li
358.5 124.375 li
358.625 124.5 li
358.625 125.25 mo
358.5 125.375 li
358.375 125.25 li
358.5 125.125 li
358.625 125.25 li
358.625 126 mo
358.5 126.125 li
358.375 126 li
358.5 125.875 li
358.625 126 li
358.625 126.75 mo
358.5 126.875 li
358.375 126.75 li
358.5 126.625 li
358.625 126.75 li
358.625 127.5 mo
358.5 127.625 li
358.375 127.5 li
358.5 127.375 li
358.625 127.5 li
358.625 128.25 mo
358.5 128.375 li
358.375 128.25 li
358.5 128.125 li
358.625 128.25 li
358.625 129 mo
358.5 129.125 li
358.375 129 li
358.5 128.875 li
358.625 129 li
358.625 129.75 mo
358.5 129.875 li
358.375 129.75 li
358.5 129.625 li
358.625 129.75 li
358.625 130.5 mo
358.5 130.625 li
358.375 130.5 li
358.5 130.375 li
358.625 130.5 li
358.625 131.25 mo
358.5 131.375 li
358.375 131.25 li
358.5 131.125 li
358.625 131.25 li
358.625 132 mo
358.5 132.125 li
358.375 132 li
358.5 131.875 li
358.625 132 li
358.625 132.75 mo
358.5 132.875 li
358.375 132.75 li
358.5 132.625 li
358.625 132.75 li
358.625 133.5 mo
358.5 133.625 li
358.375 133.5 li
358.5 133.375 li
358.625 133.5 li
358.625 134.25 mo
358.5 134.375 li
358.375 134.25 li
358.5 134.125 li
358.625 134.25 li
358.625 135 mo
358.5 135.125 li
358.375 135 li
358.5 134.875 li
358.625 135 li
358.625 135.75 mo
358.5 135.875 li
358.375 135.75 li
358.5 135.625 li
358.625 135.75 li
358.625 136.5 mo
358.5 136.625 li
358.375 136.5 li
358.5 136.375 li
358.625 136.5 li
358.625 137.25 mo
358.5 137.375 li
358.375 137.25 li
358.5 137.125 li
358.625 137.25 li
358.625 138 mo
358.5 138.125 li
358.375 138 li
358.5 137.875 li
358.625 138 li
358.625 138.75 mo
358.5 138.875 li
358.375 138.75 li
358.5 138.625 li
358.625 138.75 li
358.625 139.5 mo
358.5 139.625 li
358.375 139.5 li
358.5 139.375 li
358.625 139.5 li
358.625 140.25 mo
358.5 140.375 li
358.375 140.25 li
358.5 140.125 li
358.625 140.25 li
358.625 141 mo
358.5 141.125 li
358.375 141 li
358.5 140.875 li
358.625 141 li
358.625 141.75 mo
358.5 141.875 li
358.375 141.75 li
358.5 141.625 li
358.625 141.75 li
358.625 142.5 mo
358.5 142.625 li
358.375 142.5 li
358.5 142.375 li
358.625 142.5 li
358.625 143.25 mo
358.5 143.375 li
358.375 143.25 li
358.5 143.125 li
358.625 143.25 li
358.625 144 mo
358.5 144.125 li
358.375 144 li
358.5 143.875 li
358.625 144 li
358.625 144.75 mo
358.5 144.875 li
358.375 144.75 li
358.5 144.625 li
358.625 144.75 li
358.625 145.5 mo
358.5 145.625 li
358.375 145.5 li
358.5 145.375 li
358.625 145.5 li
358.625 146.25 mo
358.5 146.375 li
358.375 146.25 li
358.5 146.125 li
358.625 146.25 li
358.625 147 mo
358.5 147.125 li
358.375 147 li
358.5 146.875 li
358.625 147 li
358.625 147.75 mo
358.5 147.875 li
358.375 147.75 li
358.5 147.625 li
358.625 147.75 li
358.625 148.5 mo
358.5 148.625 li
358.375 148.5 li
358.5 148.375 li
358.625 148.5 li
358.625 149.25 mo
358.5 149.375 li
358.375 149.25 li
358.5 149.125 li
358.625 149.25 li
358.625 149.999 mo
358.5 150.125 li
358.375 149.999 li
358.5 149.875 li
358.625 149.999 li
358.625 150.75 mo
358.5 150.875 li
358.375 150.75 li
358.5 150.625 li
358.625 150.75 li
358.625 151.5 mo
358.5 151.625 li
358.375 151.5 li
358.5 151.375 li
358.625 151.5 li
358.625 152.25 mo
358.5 152.374 li
358.375 152.25 li
358.5 152.125 li
358.625 152.25 li
358.625 153 mo
358.5 153.125 li
358.375 153 li
358.5 152.875 li
358.625 153 li
358.625 153.75 mo
358.5 153.875 li
358.375 153.75 li
358.5 153.625 li
358.625 153.75 li
358.625 154.5 mo
358.5 154.625 li
358.375 154.5 li
358.5 154.375 li
358.625 154.5 li
358.625 155.25 mo
358.5 155.375 li
358.375 155.25 li
358.5 155.125 li
358.625 155.25 li
358.625 156 mo
358.5 156.125 li
358.375 156 li
358.5 155.875 li
358.625 156 li
358.625 156.749 mo
358.5 156.875 li
358.375 156.749 li
358.5 156.625 li
358.625 156.749 li
358.625 157.5 mo
358.5 157.625 li
358.375 157.5 li
358.5 157.375 li
358.625 157.5 li
358.625 158.25 mo
358.5 158.374 li
358.375 158.25 li
358.5 158.125 li
358.625 158.25 li
358.625 159 mo
358.5 159.124 li
358.375 159 li
358.5 158.875 li
358.625 159 li
358.625 159.75 mo
358.5 159.875 li
358.375 159.75 li
358.5 159.625 li
358.625 159.75 li
358.625 160.5 mo
358.5 160.625 li
358.375 160.5 li
358.5 160.375 li
358.625 160.5 li
358.625 161.25 mo
358.5 161.375 li
358.375 161.25 li
358.5 161.124 li
358.625 161.25 li
358.625 162 mo
358.5 162.125 li
358.375 162 li
358.5 161.874 li
358.625 162 li
358.625 162.75 mo
358.5 162.875 li
358.375 162.75 li
358.5 162.625 li
358.625 162.75 li
358.625 163.499 mo
358.5 163.625 li
358.375 163.499 li
358.5 163.375 li
358.625 163.499 li
358.625 164.249 mo
358.5 164.374 li
358.375 164.249 li
358.5 164.125 li
358.625 164.249 li
358.625 165 mo
358.5 165.124 li
358.375 165 li
358.5 164.875 li
358.625 165 li
358.625 165.75 mo
358.5 165.874 li
358.375 165.75 li
358.5 165.625 li
358.625 165.75 li
358.625 166.5 mo
358.5 166.625 li
358.375 166.5 li
358.5 166.375 li
358.625 166.5 li
358.625 167.25 mo
358.5 167.375 li
358.375 167.25 li
358.5 167.124 li
358.625 167.25 li
358.625 168 mo
358.5 168.125 li
358.375 168 li
358.5 167.874 li
358.625 168 li
358.5 167.875 mo
358.625 168 li
358.5 168.125 li
358.375 168 li
358.5 167.875 li
/1 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
.749 sep
f
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H)
%%Title: (BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
10359 <001C60D8A8C9B5EE3100BADB82008FBBB57A6B51A478AB3A49402C307
86616DB33EB2931FEC05C3DD370B18B50DC8E7A8914B4BBC0097954A02B22C79
8ED9874266420FDB2D9A805B055D257CE1456425ED599A6DC584ACFCD0F466A9
FDBB4725FD88C55DE7DEC959DE7F4B9992A76BB8D1D63167201F235373F1018F
7CCF27B4A374DF2BF> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H /Identity-H 0 [/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
377.19 107.07 mo
(\(w)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
8677 <001C60D8A8C9B5EE310D50751872D2857DAB3D90807E7EE4756AA03B31
FD2077FD2E071E0439A5A41EE1ABF2DDCC96C0892527A737112DA5882697622E
33959FAB2738375CB2D2FCEC890893702F5DDA62D3B8BCCCCEB938BB021510E1
8D0691A4C11654215F647254FAD1DA1C7D02A8B87B312D6A1D86D965C0F244C2
F64725217C3F4E5DF4A831440BBCC491B92B7145C17A686943EC12695DDFE095
3B506A05A15E59B57F404107EBAFB7C7A8C5AD0990A5A917CB5C300C831EF676
638F9E4F36A244A60148646AC7EA533AD7D13A1F7642DA0A6FC7A3594D67A112
83FF55C799ED5E7BD5096E42E5D99C0B030B86E76C55124ACBF6B4FC74A87285
039C1BECB9A4CC659BADF894BA09D28D9E18B0C08ECA7CA53773D7D8DE42A7B1
2C10C9C1B5D5C2140F7FB1C4DDC305F14D572E98E8BE235E974F18357D861CF4
0869285EDF96649A80E8B2058566819B255FFEEFC8A89BF69A2F9F82598800A4
E761779D646491B4F58A73A663446A6E0C599C1A2747755AE5E99A73B857A423
DF3964C932A8C7C9FE0B03> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
386.19 107.07 mo
(!\345)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
11632 <001C60D8A8C9B5EE3100BEA407B8ACB47D7B9FEBF5046788B72FF5F77
02A3F8F0052FEDEE4CCA73499B5848D3AF43977C8886ABDE821C4286A47D1313
8116936673459FA51BFCCE05A047CDD5AA9D1ADD790221795D0BE4EFD0BC1C74
ABC2E5094F21C0B82906CDFFC2680104ECC9067136AEE0FBCB314A453F2069AA
13DD69E13CBCA4D26E2DCED183B0D3B1B388E8BE0223925CCC45ABD4B71CA6A2
46BDD5A9236B873180BE7B2B1A826D84CEA42FC4A5017FA2E0ED74BA12885AC0
4E19F7DE7AC9C42488A806A4E0A43E1D29B46DE2CD31F3850C0AD1867640FB66
0C4795E6F8BE79D585312F131BA2BEFFB7C1576B24C9A26319D2929514A8E261
C763102BEF07B771E3D29744BA0190830F0A52E6578ABA617FB643FD3CB40187
3C9DAB2D56F286D> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
395.19 107.07 mo
(-p)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
14498 <001C60D8A8C9B5EE31038988B0EE31CD7A0269DEDA632BAF0F5523479
2D955121898CB20C0C557BA453526E4CE1464DCE306E8596AA7EA12D081531DF
F85CA810024B198D44EE2E92812AA640B770D2A98A06E3AEDE7FBA61FC468B90
3B83AE28BBBEE2BE476AD03CEA7E52F8BA384783B77C2E99215242E38CD31EA1
6E7FFCEF6F7BB528622CE13EC92327CA8D67B9B2E990B86EE9B05A03636D356A
5F2454054B83CD54D5CA772CEF8ED1530F76D6EA73DD194E85D326A90D900F9C
424CE5F2486523D6A34553452C6C52D23E8212E561B1BB1AF73> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
404.19 107.07 mo
(8\242)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
3224 <001C60D8A8C9B5EE310226F8FE600279325FB95ED130EE2D8387BA9ACD
4AE76A7A49B671F0A4C1561FA078CFEDA8C43E03249E0671047629A10EF99ABE
DB90666D6F084C170260097D974ACB82E6B01B36BBF5BC6C66E6EC7F43FEC0A5
13ACF280C432A9FF51DE5F872EE7162ED05D65A7DE84C76BE497872909A42F96
5BFD31FD7F007C438801BBDA18B995620185314E6F74D66166CD5370DC698805
95A1AEF1AE72D25E184EFE8E09010C319FD2AEDB719E09E9F839D6078AEC3BED
66993BE37855CD27C9CA9D0BC3D4DADEDF4421EADBB749ADEE1887C1F4B1A377
2E16559D2B033824A2C52A28B19638B41FA0FEB8719C32929A44C9A71834306D
90597B41D25E9CA245A82F74134DEDA3010DEC71C552A3D8CDE5559EF2D0E6BF
3783880A4B552C6A40F60A9F3DECD17383760BA334A56DC09F08AC4BE50D099F
C12C334A6FD0A834CC3EB0CBD0DD3ACF513F5655B6887743C7AD8EBEB2B2F72A
8F92E7F943B6DFAFA6252204BF2AE876DE43495C70D47F0A976AED145C7C8BD2
C9A1651554316A67B65813B4A0D3F8F06F0AFC6C1F> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
413.19 107.07 mo
(\014\230)sh
174.35 55.01 mo
174 54.75 li
132 54.75 li
131.83 55.01 li
124.01 55.01 117.66 48.6601 117.66 40.8399 cv
117.66 33.0101 124.01 26.66 131.83 26.66 cv
132 27 li
174 27 li
174.35 26.66 li
182.18 26.66 188.53 33.0101 188.53 40.8399 cv
188.53 48.6601 182.18 55.01 174.35 55.01 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
131.83 26.66 mo
124.01 26.66 117.66 33.0101 117.66 40.8399 cv
117.66 48.6601 124.01 55.01 131.83 55.01 cv
132 54.75 li
174 54.75 li
174.35 55.01 li
182.18 55.01 188.53 48.6601 188.53 40.8399 cv
188.53 33.0101 182.18 26.66 174.35 26.66 cv
174 27 li
132 27 li
131.83 26.66 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
174.35 55.1351 mo
174.275 55.1104 li
173.959 54.8751 li
132 54.8749 li
131.951 54.8255 li
132 54.75 li
174 54.75 li
174.35 55.01 li
182.18 55.01 188.53 48.6601 188.53 40.8399 cv
188.53 40.8399 li
188.53 40.8399 li
188.53 33.0101 182.18 26.66 174.35 26.66 cv
174 27 li
132 27 li
131.83 26.66 li
124.01 26.66 117.66 33.0101 117.66 40.8399 cv
117.66 40.8399 li
117.66 40.8399 li
117.66 48.6601 124.01 55.01 131.83 55.01 cv
131.879 54.9344 li
131.955 55.01 li
131.83 55.1349 li
123.941 55.1349 117.535 48.7291 117.535 40.8399 cv
117.535 32.9409 123.941 26.5351 131.83 26.5351 cv
131.942 26.6041 li
132.077 26.875 li
173.949 26.875 li
174.263 26.5703 li
174.35 26.5351 li
182.249 26.5351 188.655 32.9409 188.655 40.8399 cv
188.655 48.7291 182.249 55.1349 174.35 55.1351 cv
f
grestore
gsave
130.5 53.2499 mo
173.25 53.2499 li
172.91 53.5701 li
180.74 53.5701 187.09 47.22 187.09 39.4 cv
187.09 31.57 180.74 25.2201 172.91 25.2201 cv
173.25 25.4999 li
130.5 25.4999 li
130.39 25.2201 li
122.57 25.2201 116.22 31.57 116.22 39.4 cv
116.22 47.22 122.57 53.5701 130.39 53.5701 cv
130.5 53.2499 li
eclp
115.47 54.32 mo
187.836 54.32 li
187.836 24.474 li
115.47 24.474 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [151.65 446.68 151.65 476.53 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
151.65 446.68 151.65 476.53 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.25 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
130.5 53.25 mo
173.25 53.25 li
172.91 53.57 li
180.74 53.57 187.09 47.22 187.09 39.4 cv
187.09 31.57 180.74 25.22 172.91 25.22 cv
173.25 25.5 li
130.5 25.5 li
130.39 25.22 li
122.57 25.22 116.22 31.57 116.22 39.4 cv
116.22 47.22 122.57 53.57 130.39 53.57 cv
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
2125 <001C60D8A8C9B5EE310240010903370EFDD89C4B911207D2D4CE1D2EE3
8AC73D6CF4F187CBC7F26A432FA1A444BB300AD225E9AC892A5536C9F61D45C6
E0A00F2805FBFE34FB5EEB1F8755B43C9C8F9D3D3DE93ECAE752BEDC5E9E105F
EEA10F05F8E374C1EFD00C708983472246876521C80ACC2A9BB71A5E1093614F
EACA6C8E5A9FACE75767D90267CAA50313699685DAC31BF64736D11C6E2D8698
FC3AC01F6904C2FEB89EF7E31F239C8A162BC6585DF1228D7EFDB3DAAC8705CC
1610E0A7BA48B2EA3D064653C1F9778BBBFDFF890CA70715407E97D14CA2C5FF
AAB07BD3251D89B107C1FDFED285B281896EC4C591A4294D9568ACBCD27B8DBE
24375C65EA658F64D7EB14FCD06EEA58220D275483D9E2BAB087F30A1AC055F1
259D1678945435D05432407CEA4F479EBA502E6A7355> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
138.15 42.39 mo
(\010M)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
4091 <001C60D8A8C9B5EE310337A65A5C610450C7A7B9E7423A4A6766841406
7CD2833C419647E421CDC34BEFA9A1C2F875A5110B2364A1B1ED357A5433A3B3
05BA4FED9D983DAC601578222D72DBE665036F7979135BA988A3D385909A51F4
697CA0D4789ED324F3BF681CC0FD2AB8B46EE22B1D65811AF14D8C95D6A9A90B
E30C8950631E9E0E3C6A6BBC61BF78A59264F111AA92BC981F57E4B6E6AD92EB
4B8C53A7AB360ED98C20AAF0414397C6311FDF80EC3C9DCFF42BA74911459DC5
64A756A7A71386F9C4E39566AA7A50E31B614CAB80743CB76C929F9B48FAE7A1
15B529BC48B6B76318DEFEB8B97C93F672AFCD383BBE34F7FA21D2DA44BF24C4
C371B4759E4A3C631858E2920C25156C2C8EE3CAF0D1B9A89B1A7A7D8DFC1298
DC73F608EDD0CB2625BE7F71CF85ACFD609E65B916B3DBE5437E3C6F32A1FEF5
297582875B48C9A6ED> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
147.15 42.39 mo
(\017\373)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
2374 <001C60D8A8C9B5EE310DA694D3C11189146C2177303D62F4B6B10D2EAC
9F2A780662F647CAE34FE7D36BC11417FEC5660A5D869AB9A11F20ABF3846399
722BA9465C45046AF72E007A9E0289673F15C09606E5271191B6C3D21F1C1495
7902F32884498A0C1C45097680C1A99FEC2F8294855520ABEC608BEE593B79B0
429B0D672510ADA2DAB74DBA259973B1A826B4AA31FA9B8E16DD64B48BB59B46
32A054DD981456B4098B657D154124E7BD5F9F420689CCF809FA2838EE0707B0
A6BEE413957AB889D7B2726BE0EA68F5> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
156.15 42.39 mo
(\011F)sh
153 161.25 mo
117.75 140.25 li
153 118.5 li
188.25 140.25 li
153 161.25 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
153 118.5 mo
117.75 140.25 li
153 161.25 li
188.25 140.25 li
153 118.5 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
153.064 161.357 mo
152.936 161.357 li
117.686 140.357 li
117.677 140.324 li
117.644 140.316 li
117.659 140.251 li
117.643 140.186 li
117.676 140.178 li
117.684 140.144 li
152.934 118.394 li
153.066 118.394 li
188.316 140.144 li
188.375 140.251 li
188.314 140.357 li
153.064 161.357 li
117.75 140.25 mo
117.75 140.25 li
153 161.25 li
188.25 140.25 li
153 118.5 li
117.75 140.25 li
f
grestore
gsave
116.25 138.75 mo
151.5 117 li
186.75 138.75 li
151.5 159.75 li
116.25 138.75 li
eclp
115.47 160.62 mo
187.836 160.62 li
187.836 116.6 li
115.47 116.6 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [151.65 340.38 151.65 384.4 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
151.65 340.38 151.65 384.4 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
116.25 138.75 mo
151.5 117 li
186.75 138.75 li
151.5 159.75 li
116.25 138.75 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
9961 <001C60D8A8C9B5EE31039870B7A02538711CB3206578209DD97BEBE624
9DB648C8B25BA8873270831CC3BABF3A0CE9F45E42B4CAF33383A3DE76993493
500D5803B39A31EA9017C20E72EC018525D47E015711D082B2964D9B191A6630
45BDFBE7D99E026B81DE6A21C73614C1C24F6610CB2E021E1F0A6CB7C80EA38A
91336ECDCD6B57E545DB2F7A34FF057B4DFB1D062CF0B4A95C3269B7F92ABA77
1FED76AEA455438773949515571D0BE3824CEE685E7CC55F4A5114E6ED12F94C
591304CBCE1B61111BF717F81554AE4C0A9DB2F1912C482B5E03CA40466E32F2
2A1DA0FC1D69190F34D92FDFFDA684341E1731D2AC7BAC376E99CFD1AC78D4D7
580E0087C57D53DB> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
127.07 141.6 mo
(&\351)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
3892 <001C60D8A8C9B5EE3102603E2E58CA84251A9593169BED5D4BF3DB54BE
3D43A79B11F54EB16315E7B49B8241064FA5EE5FF77503D2BC0D604E707579BB
52706A1736343C2D8F3BF7EB8A202BE8A463FB7D58A7C957B5CF85B1FDB7541C
C2B9B69B604A1CA1BE97F6A555135B5D22995BC18D24C3E85A33DCD06CA93A8E
EC56249454C3E74C2BD12E59D0871686248EE3F9EB9D0F2D619CD683A9F01848
6940FCD222A3DB9D6E191F22E1E75B8AF056EB974C99F477F7B3FFD621D26DF9
25EFCCE77CB491E37628A50E24DBD10D744D2A16883A831CD77F7B3F1BDBDB7F
F0D1D9F91108EE7EE0D73B8DDC243A840B7AA03AA5C5CF90B89C8BC780AFB6DC
AEF10BA838D79623745F> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
136.07 141.6 mo
(\0174)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
10806 <001C60D8A8C9B5EE3117BF1EBEBB6E3E493A793D66AA7DAA743C82C33
55C5D1F6B001A92061E582E44D7620DF16AA56F4543D22FDABFA64E2D4386561
3DCA8323A76FB4CA959A7A012F8524B914769BD5D382FBCFB5AE5996191155CB
0EC1E04CF57402F96836768F0170490F31AF54EC6CA4E91E81F6897610001BE4
3269228E4E9DB9D6532266E2B082D6F25FBC399D2DF80DB3E0A6FBBF43B11EE7
45F2DA5B13C7B5D51867B87CB6EC76F9187BE7080587580C3F4A04D39CB136D8
B069D0EA9B6EB0298EFC0730EA67AC64E453E32C631F08C7B6BC99235AE2F42F
D7F0CC4FAE01115BF29207B663ADFA3F08DAB12AA4B5C7B728301A4E84266250
7F2FA4C7708C9F5610FDBA23F3EFF4028255E11B5938D2F82> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
145.07 141.6 mo
(*6)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
4540 <001C60D8A8C9B5EE310D75AF9C8C7B1AD76B7BAB8D2A35A0BD33385E3F
8F55F4D645D4018E599D7E0B1190FFE08FFE6034518E8EA5015D8633BB11754C
0A88AD61A9B03F5A967318E231968BDB532940FB12D6ED6CB16437DA783323BF
7E2DD7262C73F95C50A5B7B3E5C55FEFBD9E179FA18E595F505AC42CF481D0EE
E1213CB0E9CB797EA8796DD4A78CAA8C44108E454EEB864FCF7B14C1377E5C3D
3269A3AF44013E18580CA02870B12A8DB57F49D3577C91F92874CE947BD6F94B
C147F03E30936E488C1B7748389D33C8040CF77E23CC13D56E10AEBD3D22DFDE
CB01782487760BF1CF11353FB53CD50D9380B7C73143490210CF8B95C207D495
2F656DE9914F1294A0762ABC540547> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
154.07 141.6 mo
(\021\274)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
8709 <001C60D8A8C9B5EE310D71E60CA36F5B4D15C2954313C8F9BEBBC28B14
2FF63E583CE996958AA560E02B7CEEF44CB4EBC7C63E5A2B2E0F84CC4F2194DD
64378C9717D9804202FA92039322B63E36EBE9F4A9905E41001F10F0EDB00EC0
476209860B9AD4ABB6415323B6E8F28BFE9148DD070B95030B772A931A504FCD
F0EBFA5C069C28C50628B36A16A773578E278F2C964451937410782C526B6E7E
B2FF0F6BACBA8A0090437494E30F5277F811ACF6190D2A6BADBF1710D2ABF1E7
3E55B9D2DE8181092DDD78479396274EBECE506F21FD2EED56C950ACBBE68E13
79B856E0A1A2899A229070DDA33FC424F96BFEEBD593D620AF07BBCB616D8F7D
BA> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
163.07 141.6 mo
("\005)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+CALIBRI
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e4b94a000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79669bebef3e000085c800000c4268656164e625fe3d00000f640000
0036686865610dad06da00000f9c00000024686d747832d606d000000fc0
000025766c6f6361987b96240000353800001e466d617870212d24900000
5380000000206e616d65267651f4000053a000000e16707265706baf02fe
000061b800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
00720600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb8e4578fce5f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000399040e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000044400610000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000050c005b0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000052200aa000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000003b50085000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000026d0085026d007a00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a1011e011e011e011e011e011e011e011e011e
011e011e011e011e011e011e011e011e011e011e011e011e01c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c50272027202720272
027202720272027202720272027202720272027202720272027202720272
02eb02eb02eb02eb02eb02eb02eb02eb02eb02eb02eb02eb02eb02eb02eb
02eb02eb0376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
037603760376037603760376037603760376037603760376037603760376
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d040d040d040d040d040d040d
040d040d040d040d040d040d040d040d040d048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
048604860486048604860486048604860486048604860486048604860486
0486048604860486048604cb04cb04cb0542054205420542054205420542
054205420542054205420542054205420542054205420542054205420542
054205420542054205420542054205420542054205420542054205420542
054205420542054205420542054205420542054205420542058b05db05db
05db05db05db05db05db05db05db05db05db05db05db05db05db05db05db
05db05db05db05db05db05db05db06210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
062106210621062106210621062106210621062106210621062106210621
06210621062106210621062106210000000100000f22004f000500000000
00020010002f0065000011902410000000000000002d0222000000030000
0000006400000000000300000001000e00640000000300000002000e0304
0000000300000003003003120000000300000004000e0064000000030000
0005001803420000000300000006000e0064000000030000000700fa035a
0000000300000008002a03d0000000030000000900200454000000030000
000a02a00064000000030000000b00560474000000030000000c002a04ca
000000030000000d029804f4000000030000000e006c078c000100000000
0000003207f800010000000000010007082a00010000000000020007097a
00010000000000030018098100010000000000040007082a000100000000
0005000c099900010000000000060007082a0001000000000007007d09a5
0001000000000008001509e0000100000000000900100a22000100000000
000a0150082a000100000000000b002b0a32000100000000000c00150a5d
000100000000000d014c0a72000100000000000e00360bbe000300010409
0000006400000003000104090001000e00640003000104090002000e0304
0003000104090003003003120003000104090004000e0064000300010409
0005001803420003000104090006000e0064000300010409000700fa035a
0003000104090008002a03d0000300010409000900200454000300010409
000a02a00064000300010409000b00560474000300010409000c002a04ca
000300010409000d029804f4000300010409000e006c078c00a900200032
0030003000380020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000610020
006d006f006400650072006e002000730061006e00730020007300650072
00690066002000660061006d0069006c0079002000770069007400680020
0073007500620074006c006500200072006f0075006e00640069006e0067
00730020006f006e0020007300740065006d007300200061006e00640020
0063006f0072006e006500720073002e0020004900740020006600650061
007400750072006500730020007200650061006c0020006900740061006c
006900630073002c00200073006d0061006c006c00200063006100700073
002c00200061006e00640020006d0075006c007400690070006c00650020
006e0075006d006500720061006c00200073006500740073002e00200049
00740073002000700072006f0070006f007200740069006f006e00730020
0061006c006c006f00770020006800690067006800200069006d00700061
0063007400200069006e002000740069006700680074006c007900200073
006500740020006c0069006e006500730020006f00660020006200690067
00200061006e006400200073006d0061006c006c00200074006500780074
00200061006c0069006b0065002e002000430061006c0069006200720069
002700730020006d0061006e007900200063007500720076006500730020
0061006e006400200074006800650020006e006500770020007200610073
00740065007200690073006500720020007400650061006d002000750070
00200069006e0020006200690067006700650072002000730069007a0065
007300200074006f002000720065007600650061006c0020006100200077
00610072006d00200061006e006400200073006f00660074002000630068
0061007200610063007400650072002e0052006500670075006c00610072
004d006900630072006f0073006f00660074003a002000430061006c0069
006200720069003a0020003200300030003500560065007200730069006f
006e00200035002e0036003200430061006c006900620072006900200069
007300200065006900740068006500720020006100200072006500670069
007300740065007200650064002000740072006100640065006d00610072
006b0020006f007200200061002000740072006100640065006d00610072
006b0020006f00660020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e00200069006e0020
00740068006500200055006e006900740065006400200053007400610074
0065007300200061006e0064002f006f00720020006f0074006800650072
00200063006f0075006e00740072006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303038
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c696272693a203230303556657273696f6e2035
2e363243616c696272692069732065697468657220612072656769737465
7265642074726164656d61726b206f7220612074726164656d61726b206f
66204d6963726f736f667420436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e4c7563286173292064652047726f6f74687474703a2f
2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068792f
6374666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f
75206d617920757365207468697320666f6e74206173207065726d697474
6564206279207468652045554c4120666f72207468652070726f64756374
20696e207768696368207468697320666f6e7420697320696e636c756465
6420746f20646973706c617920616e64207072696e7420636f6e74656e74
2e20596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f666f6e74732f64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[3139 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 2454 845 <00020085fff60357055e003400480026400e24241f0914b305053009443a
4d1fb80101b13046003fed3fddce11392fed1112392f313001140e020707
140623222e023503263e023333323e0235342e0223220e0223222e023534
3e0433321e0201140e0223222e0235343e0233321e020357325a7e4d0723
27151e1208060109121c1216415c391a204061423a5740290a070b080406
14395161346b9a6430fec40918291e20281909091928201e29180903df58
88603605f10f0f03070c080115171d130729445c32395f4526191e180611
1d161819131f1a123d688cfc3b212b1b0b0b1b2b21212d190b0b192d>HIBBAA+CALIBRI AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/question 845 def
end
HIBBAA+CALIBRI /Encoding get
dup 63 /question put
pop
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI /HIBBAA+CALIBRI findfont ct_VMDictPut
/BSVNYA+CALIBRI*1 
[63{/.notdef}rp /question 192{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
172.07 141.6 mo
(?)sh
188.25 216.75 mo
117.75 216.75 li
117.75 181.5 li
188.25 181.5 li
188.25 216.75 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
117.75 181.5 mo
117.75 216.75 li
188.25 216.75 li
188.25 181.5 li
117.75 181.5 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
188.25 216.875 mo
117.75 216.875 li
117.625 216.75 li
117.625 181.5 li
117.662 181.412 li
117.75 181.375 li
188.25 181.375 li
188.338 181.412 li
188.375 181.5 li
188.375 216.75 li
188.338 216.838 li
188.25 216.875 li
117.75 216.75 mo
117.75 216.75 li
188.25 216.75 li
188.25 181.5 li
117.75 181.5 li
117.75 216.75 li
f
grestore
gsave
116.25 215.25 mo
186.75 215.25 li
186.75 180 li
116.25 180 li
116.25 215.25 li
eclp
115.47 215.89 mo
187.836 215.89 li
187.836 178.957 li
115.47 178.957 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [151.65 285.11 151.65 322.04 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /3 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
151.65 285.11 151.65 322.04 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/3 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
116.25 215.25 mo
186.75 215.25 li
186.75 180 li
116.25 180 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
16403 <001C60D8A8C9B5EE3100BADA4056436DC84FE7040671946BDF35CFB7B
34CEC14BDC19EC2D89CB5F5F8A0037D72B247B333094D7CD36915AE2EF0963C0
152E94148FB7798322982EC851850E0CAB7142808DD357BB7C506D56037E8723
1EF171305E56549221E3CEF33017C75D5528A686B82A44AD947EEEEB0D6B7892
14A2BC73001A118E7D937DF83D9AA4E51E9B162D7060F6944577E27ADD9DD720
7EB9A4390EEF124FE2A781F946F48131A91A12504A671B1D44430CE368574AA7
65F2AD2CFC314946CCD860EEB5E07CD253740F685B58B9D6A924249D01B6FDCE
C2840C378559E03B7A58C54F461E6CDDDBD4794EF666943258CE3F0BA7C3B235
C0A7FF5A11DA6FBDE760978325EA99A6EB059DB39A818C9DBD69BD2C9644E40A
B058283684958CB9AE20C1EB20C1B47676F61CF61E44AECF959AEE45E6443987
B49ED1981C4B986843634D4567BEDCB860B217868B2304DA0BC8E9AE1FD837BC
870E7224C71C0D6C52CD1425CBF3AB83CED30D32DDA7EED860B88914C026FA40
F7C485525692A1413610DB471D38B7353EC87DC6A6E1F04057AEFB96E2DDA9EF
4E70A489A76F9A27D89F31C0A7301994C8AB537E2A89FD6AB50BC569C5B187AC
F23FFCD061D410FE3F64036BB207DEE591D27009A1D32F25F2C6332BAFAA3D58
DA571A26C> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
133.65 200.42 mo
(@\023)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
7616 <001C60D8A8C9B5EE31035E94EF5B26C5A31CD4C56DD5BD83D21747A4EE
DCF4FFFB6011522F163C7FD71539F079D2690AFCC676156517C3A10D88FBED8D
4D8C153B734049C45C60E432FAB3490CE60AD0F2FB14194DC6C1122FD086FD03
4AB03B0639554B259AF5D6D8F4D6A4FFD22F10FDFCD4AF49C80D372DC8103B79
B5206236E40ECEAD5F6E67FB58DBFDDA3D506043D08369F963B218156D40AC86
9EF851D11D99280E9D1DC5EF228945CCD4A32C408C7BA7E69C50D1401883C66B
6A5F1B0E922DEB3AA9D412BAE7082BE65E6B0EC54EE9550459BE6BCA24FB5953
5DFDF1281CB2DB1DE7159423A64F76BF2B3A63> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
142.65 200.42 mo
(\035\300)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
13571 <001C60D8A8C9B5EE31021BDB61D6B8606F0DE405C36E945A5FA8D7978
668D879BA866DC1F7FCB0767EE69E087E6E4862743FEA9EF12D26B66175BF4A6
8460F65913558FB6D3F1C9FB3E202BB3CE31A07E25DEDF1C77732C78BB5EE630
B0E2304DB92856369D6BF2B71EA4794EAEC4D1A07A2F4012588D5F64C86D1C32
C33B0D15AD73BF5105485F79FE36ADBA294656CE4C91CA42B02CFD83395EB45E
90AF230F12F102408118F027FB9FE9521BF219DC15EE814663110851B467DC97
82673D7AEE1CF23C374F22715ECA6D8245D56A1CB5CA0A9E343F00C6D48E7804
6A929AF8C9691FDE3AC421F14F5CB204AAABD3FA6DE32D53888A8031CD7858C7
8E18D4B7E26499041A9DEB138AF875BBAB1565FD8B13BFC956CB58A4631BBC1A
3C62EA362294A940E8FA450DD180852> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
151.65 200.42 mo
(5\003)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
7628 <001C60D8A8C9B5EE31025C75FF1B56FF214E2004CBED43F811B3779DB6
AC7B60BEB860127315990BED33B797B3094ED0AF3CD5D4A09F99768690DA482C
8430BF6957132D2960B45928C55214F346E9D45A8592122523848E93E7CEBE6F
78BD749F6E690810D310B3D43892C6A14207127F11B0753D51DE6CD3A778EB48
85B7EF2EF889649408ADBAB1AF44BCE1D24B4DDAFF5AAEA4DD69FA937B35B00F
5ED07DB2E8326F9BF90717A56F0A5AA26C62B0D4D5D4EDA7AFFB0A90F80956FF
A323F43CA02559CC5C5AAB18084E3BD1E42E1A355639D06AC503292F054D48EB
C8797E86DA346B88BC> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
160.65 200.42 mo
(\035\314)sh
303 90.75 mo
232.5 90.75 li
232.5 48 li
303 48 li
303 90.75 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
232.5 48 mo
232.5 90.75 li
303 90.75 li
303 48 li
232.5 48 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
303 90.8749 mo
232.5 90.8749 li
232.375 90.75 li
232.375 48 li
232.412 47.9116 li
232.5 47.875 li
303 47.875 li
303.088 47.9116 li
303.125 48 li
303.125 90.75 li
303.088 90.8384 li
303 90.8749 li
232.5 90.75 mo
232.5 90.75 li
303 90.75 li
303 48 li
232.5 48 li
232.5 90.75 li
f
grestore
gsave
231 89.25 mo
302.25 89.25 li
302.25 46.4999 li
231 46.4999 li
231 89.25 li
eclp
230.27 89.75 mo
302.636 89.75 li
302.636 45.73 li
230.27 45.73 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [266.46 411.25 266.46 455.27 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /4 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
266.46 411.25 266.46 455.27 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
231 89.25 mo
302.25 89.25 li
302.25 46.5 li
231 46.5 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
1236 <001C60D8A8C9B5EE310247646EF2B7E16E58934940CF93D5CFE510F782
69D1D48793820FFD379805D781163816A8DBF99712CDE291A49121AB48C613D0
F0CD81A0A92D8B8BDD957E6D8D80C8E4F7809CF52F52009C44F75D473DC59C5B
51EB95B4152C65D2971F316C9905FB95C054943B49C8FAA59510ECF626904564
322E47000C3669F07044360015A435D1BF57021FB668EA5617E28DF7D78D8FA2
60BD2759CAA2CFFC676C0CE7A5FF7349CD9EF9750CFCFF69302A19BB49B07FBC
F620E26CE8DAC1BF6865CF3658DE3FE1961EAB78529B2D82B9AAB32C55D56AD7
2EB51E530BFA45910367493FC4E2FBF4555F298AA080A0> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
235.84 70.74 mo
(\004\324)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
6546 <001C60D8A8C9B5EE31035E3C7C16180AED4E3F651F3CC465B89183FA1A
66084B6DC3D71E95614151ED2D002B92D71BB39C62A7EFEDDA9856A3CA9F56A9
EFB17127B12F26D5AD6CB84B74E826D6B7CB36A92117AF2AEEE2A3F5A36DA033
9E618378D51A2C4CFBDA8BF6BBB92EDC132FE14E5407D26AF81F05B9632B62A4
4B1D782F69D278919C8AC2088732802819AB742E8208B20A4BCEB08052772440
721D520952A698660A46B5B54051FD01047F162F8AB51D7D3A576A7805F90F13
F33089D446E7CD49B1FA522329B838BBE8F9CD9957852EDE45F967196EF5E624
D4F89BAF3EE787B48AAB615A5F3C0B88BF6DC8199C7AECB080EB5366CF7E7C1A
3CB1B4DC5ACBDCA9DA3CCAD193EFD0DE2CD77306AF1358903C8746F87C3B93B2
7BD0562684FF9006FAA45993FF45D2DE913796E9D1EAE279D883DF8BBD5EB677
5FD6298CF752D28CC0E5D68873> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
244.84 70.74 mo
(\031\222)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI gcheck setglobal} if
2 2692 894 <00010085fea701f3058b00230022401503100b014d03100f014d03100c0d
014c03151f0b85003f2f012f332b2b2b3130010602151412171616060623
222e02272e0335343e02373e0333321e0201ef5f5d5f5b05010e1d19121a
130c033652381c1f3952330109101c16171c10020562c9fe59d6d7fe5acb
0c110b050206080566d1d8dd7171dcd9d26704060603060a1000>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/parenleft 894 def
end
HIBBAA+CALIBRI /Encoding get
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI*1 
[40{/.notdef}rp /parenleft 22{/.notdef}rp /question 192{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
253.84 70.74 mo
(\()sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.012
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+CALIBRI,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e7b91d000000cc000000606376
7420ba7ecec70000012c000005146670676da1ea42ac0000064000000913
676c796635ea5b27000073ec00000cd668656164e489fed900000f540000
0036686865610da90e4400000f8c00000024686d74782bbb040600000fb0
000026026c6f6361e652e46d000035b400001ed26d61787019cb118a0000
5488000000206e616d65c2443dcf000054a800000e40707265705fc3ffe0
000062e800001102676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e10002ff4000acff00000009000000004d53202000010000
00770600fe0001c4079e02262000019f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e40465f5e5d5c5b5a59585554535251504f4e4d4c
4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625
2423221f181411100f0d0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045b0
0325456164b050515845441b2121592d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c
4565b02c234445b02b23442d2c4b525845441b2121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2c4523456023456023456023766818b08062202d2cb00426b00426
b00425b0042545234520b003266062636820b0032661658a2344442d2c20
45b0005458b040442045b04061441b2121592d2c45b1302f4523456160b0
016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325
45695358441b2121591b2121592d2c45b01443b0006063b0016069442d2c
b02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033ff
e0b134201bb3330034005944442d2cb0164358b00326458a586466b01f60
1b64b020606620581b21b04059b001615923586559b02923442310b029e0
1b2121212121592d2cb0164358b004254564b020606620581b21b04059b0
016123586559b0292344b00425b00725082058021b0359b0052510b00425
2046b0042523423cb0072510b006252046b00425b0016023423c2058011b
0059b0052510b00425b029e0b0072510b00625b029e0b00425b007250820
58021b0359b00425b003254348b00625b00325b0016043481b2159212121
212121212d2cb0164358b004254564b020606620581b21b04059b0016123
581b6559b0292344b00525b00825082058021b0359b0042510b005252046
b0042523423cb00425b0072508b0072510b006252046b00425b001602342
3c2058011b0059b0042510b00525b029e0b02920456544b0072510b00625
b029e0b00525b00825082058021b0359b00525b003254348b00425b00725
08b00625b00325b0016043481b2159212121212121212d2c02b004252020
46b004252342b0052508b003254548212121212d2c02b0032520b0042508
b0022543482121212d2c452320451820b00050205823652359236820b040
505821b04059235865598a60442d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d2c
b002435458b0472b1b212121592d2cb002435458b0482b1b21212121592d
2cb002435458b0492b1b212121592d2c208a08234b538a4b515a5823381b
2121592d2c0020b200400325b0062649618b3812342d2c01462346602346
6123201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a
2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2c451868234b51582320452064b04050587c5968
8a6059442d2cb00016b00225b0022501b001233e00b002233eb10102060c
b00a236542b00b234201b001233f00b002233fb10102060cb006236542b0
072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b004
2510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58b0
092b5920b005254ab0042547b004254760b0062547b0806361b00225b000
5558b00325b00725496359b0082558001b0159b00425b0062549b009255c
b009255a58b0092b59b0072546b0806361b0032520b0005558631b215961
2320b0005558b080631b21b08059b0592bb006255c586959b00425202010
b00048233ab0062658001b0159b0052658b003252f598a12233221212d2c
b00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b007
2559b00225b00225070cb005256323b00625636020b94000040063535821
b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1bb0
0426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b
2eb00525b0052507595920b0005558b00525b0052587b00725b007250bb0
092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b00825
b00b254923b00625b0062587b00a2510b00b25c15920b00051b800522378
b00161b00225b00725b0072507b00a25b00d254961b08062b00525b00525
0bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b006
25b0062507b00925b00c2549b0032554b8ffa72379212121212121212121
2121212d2c23b0005458b9400000001bb900004000598ab0005458b94000
00001bb90000400059b05b2b2d2c08b0005458b9400000001bb900004000
590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b
2b2d2cb00426b00426080db00426b00426080db05b2b2d00000100000005
9eb8a76cc5015f0f3cf50019080000000000bbeb7ccc00000000c5229870
fa34fdcb0a14081c000200090002000000000000000100000600fe0001c4
0aa0fa34fa0b0a140800019a0000000000000000000000000399040e0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000006d7
005200000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041d0051000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000041d0051000000000000000000000000
03d2004d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001d6003f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002be003f000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002ae007100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000005b8008f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000029b00bb00000000000000000000000000000000000000000000
00000000000000000000000000000000000001ffff950000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000033500f70000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a801590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
0159015901590159015901590159015901f401f401f401f401f401f401f4
01f401f401f401f401f401f401f401f401f401f401f401f401f401f401f4
01f401f40291029102910291032803280328032803280328032803280328
032803280328032803280328032803280328032803280328032803280328
032803280328032803280328032803280328032803280328032803280328
032803280328032803280328032803280328032803280328032803280328
032803280328032803280328032803280328039d039d039d039d039d039d
039d039d039d039d039d039d039d039d039d039d039d039d039d039d039d
039d039d039d039d039d039d039d039d039d039d039d039d039d039d039d
039d039d039d039d039d039d039d039d039d039d039d041e041e041e041e
041e041e041e041e041e041e041e041e041e041e04c204c204c204c204c2
04c204c204c204c204c204c204c204c204c204c204c204c204c204c204c2
04c204c204c204c204c204c204c204c204c204c204c204c204c204c204c2
04c204c204c204c205710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105710571057105710571057105710571
057105710571057105710571057105d605d605d605d605d605d605d605d6
05d605d605d6060f060f060f060f060f060f060f060f060f060f060f060f
060f060f060f060f060f060f060f060f060f060f060f060f060f060f060f
060f060f060f060f060f060f060f060f060f060f060f060f060f060f060f
060f060f060f060f060f060f060f060f060f060f060f060f060f060f060f
060f060f060f060f060f060f060f060f060f066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b066b066b066b066b066b066b066b066b066b066b066b
066b066b066b066b0000000100000f68005700050000000000020010002f
0060000009ed1102000000000000002d0222000000030000000000640000
0000000300000001000e00640000000300000002000c032a000000030000
0003003e03040000000300000004001c031a000000030000000500180342
0000000300000006001c035a000000030000000700fa0376000000030000
0008002a03ec000000030000000900200470000000030000000a02a00064
000000030000000b00560490000000030000000c002a04e6000000030000
000d02980510000000030000000e006c07a8000100000000000000320814
0001000000000001000708460001000000000002000609a9000100000000
0003001f09960001000000000004000e09a10001000000000005000c09b5
0001000000000006000e09c10001000000000007007d09cf000100000000
000800150a0a000100000000000900100a4c000100000000000a01500846
000100000000000b002b0a5c000100000000000c00150a87000100000000
000d014c0a9c000100000000000e00360be8000300010409000000640000
0003000104090001000e00640003000104090002000c032a000300010409
0003003e03040003000104090004001c031a000300010409000500180342
0003000104090006001c035a000300010409000700fa0376000300010409
0008002a03ec000300010409000900200470000300010409000a02a00064
000300010409000b00560490000300010409000c002a04e6000300010409
000d02980510000300010409000e006c07a800a900200032003000300038
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0043
0061006c0069006200720069002000690073002000610020006d006f0064
00650072006e002000730061006e00730020007300650072006900660020
00660061006d0069006c0079002000770069007400680020007300750062
0074006c006500200072006f0075006e00640069006e006700730020006f
006e0020007300740065006d007300200061006e006400200063006f0072
006e006500720073002e0020004900740020006600650061007400750072
006500730020007200650061006c0020006900740061006c006900630073
002c00200073006d0061006c006c00200063006100700073002c00200061
006e00640020006d0075006c007400690070006c00650020006e0075006d
006500720061006c00200073006500740073002e00200049007400730020
00700072006f0070006f007200740069006f006e007300200061006c006c
006f00770020006800690067006800200069006d00700061006300740020
0069006e002000740069006700680074006c007900200073006500740020
006c0069006e006500730020006f0066002000620069006700200061006e
006400200073006d0061006c006c0020007400650078007400200061006c
0069006b0065002e002000430061006c0069006200720069002700730020
006d0061006e0079002000630075007200760065007300200061006e0064
00200074006800650020006e006500770020007200610073007400650072
00690073006500720020007400650061006d00200075007000200069006e
0020006200690067006700650072002000730069007a0065007300200074
006f002000720065007600650061006c002000610020007700610072006d
00200061006e006400200073006f00660074002000630068006100720061
0063007400650072002e004d006900630072006f0073006f00660074003a
002000430061006c00690062007200690020004900740061006c00690063
003a0020003200300030003500560065007200730069006f006e00200035
002e0036003200430061006c0069006200720069002d004900740061006c
0069006300430061006c0069006200720069002000690073002000650069
007400680065007200200061002000720065006700690073007400650072
00650064002000740072006100640065006d00610072006b0020006f0072
00200061002000740072006100640065006d00610072006b0020006f0066
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002e004c0075006300280061007300290020
00640065002000470072006f006f00740068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0063
00740066006f006e007400730068007400740070003a002f002f0066006f
006e007400660061006200720069006b002e0063006f006d0059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e00740020006100730020007000650072006d0069007400740065
00640020006200790020007400680065002000450055004c004100200066
006f00720020007400680065002000700072006f00640075006300740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e007400200069007300200069006e0063006c0075006400650064
00200074006f00200064006900730070006c0061007900200061006e0064
0020007000720069006e007400200063006f006e00740065006e0074002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e0061007300700078a92032303038204d6963726f736f
667420436f72706f726174696f6e2e20416c6c2052696768747320526573
65727665642e43616c696272692069732061206d6f6465726e2073616e73
2073657269662066616d696c79207769746820737562746c6520726f756e
64696e6773206f6e207374656d7320616e6420636f726e6572732e204974
206665617475726573207265616c206974616c6963732c20736d616c6c20
636170732c20616e64206d756c7469706c65206e756d6572616c20736574
732e204974732070726f706f7274696f6e7320616c6c6f77206869676820
696d7061637420696e2074696768746c7920736574206c696e6573206f66
2062696720616e6420736d616c6c207465787420616c696b652e2043616c
696272692773206d616e792063757276657320616e6420746865206e6577
2072617374657269736572207465616d20757020696e2062696767657220
73697a657320746f2072657665616c2061207761726d20616e6420736f66
74206368617261637465722e4d6963726f736f66743a2043616c69627269
204974616c69633a203230303556657273696f6e20352e363243616c6962
72692d4974616c696343616c696272692069732065697468657220612072
6567697374657265642074726164656d61726b206f722061207472616465
6d61726b206f66204d6963726f736f667420436f72706f726174696f6e20
696e2074686520556e697465642053746174657320616e642f6f72206f74
68657220636f756e74726965732e4c7563286173292064652047726f6f74
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f6374666f6e7473687474703a2f2f666f6e7466616272696b
2e636f6d596f75206d617920757365207468697320666f6e742061732070
65726d6974746564206279207468652045554c4120666f72207468652070
726f6475637420696e207768696368207468697320666f6e742069732069
6e636c7564656420746f20646973706c617920616e64207072696e742063
6f6e74656e742e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f666f6e74732f64656661756c742e61737078
b10903b8027ab21e3e1fb80279b21e3e1fb80278b21e0b1fb80277b21e0b
1fb80276b21e3a1fb80275b21e3a1fb80274b21e3e1fb80273b21e3b1fb8
0272b21e3c1fb80271b21e3c1fb80270b21e3c1fb8026fb21e3d1fb8026e
b21e3d1fb8026db21e3e1fb8026cb21e3e1fb8026bb21d411fb8026ab21d
411fb80269b21d421fb80268b21d431fb80267b21d431fb80266b21d431f
b80265b21d431fb80264b21d431fb80263b21d411fb80262b21d421fb802
61b21d421fb80260b21d431fb8025fb21d431fb8025eb21c451fb8025db2
1c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c45
1fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb8
0254b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024f
b21c451fb8024eb21c441fb8024db21c451fb8024cb21c451fb8024bb21c
451fb8024ab21c451fb80249b21c451fb80248b21c451fb80247b21c451f
b80246b21c451fb80245b21c451fb80244b21b491fb80243b21b4a1fb802
42b21b4a1fb80241b21b4a1fb80240b21b4b1fb8023fb21b4b1fb8023eb2
1b4c1fb8023db21b4c1fb8023cb21b4c1fb8023bb21b4c1fb8023ab21b4c
1fb80253b21b4c1fb80239b21b491fb80238b21b491fb80237b21b4a1fb8
0236b21b4a1fb80235b21b4a1fb80234b21b4b1fb80233b21b4b1fb80232
b21b4c1fb80231b21b4c1fb80230b21b4c1fb8022fb21b4c1fb8022eb21b
4c1fb8022db21b491fb8022cb21b4a1fb8022bb21b4b1fb8022ab21b4c1f
b80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb802
25b21b4a1fb80224b21b4a1fb80223b21b4b1fb80222b21b4c1fb80221b2
1b4c1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21a4e
1fb8021cb21a4e1fb8021bb21a4f1fb8021ab21a4f1fb80219b21a4f1fb8
0218b21a4e1fb80217b21a4e1fb80216b21a4f1fb80215b21a4f1fb80214
b21a4f1fb80213b21a4e1fb80212b21a4e1fb80211b21a4f1fb80210b21a
4e1fb8020fb21a4e1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4f1f
b8020bb21a4f1fb8020ab21a4f1fb80209b219501fb80208b219511fb802
07b219511fb80206b219511fb80205b219511fb80204b219501fb80203b2
19511fb80202b219511fb80201b219511fb80200b219511fb801ffb21951
1fb801feb219511fb801fdb219501fb801fcb219511fb801fbb219511fb8
01fab219511fb801f9b219511fb801f8b219511fb801f7b219511fb801f6
b218531fb801f5b218531fb801f4b218541fb801f3b218541fb801f2b218
541fb801f1b218541fb801f0b218531fb801efb218531fb801eeb218541f
b801edb218541fb801ecb218541fb801ebb218541fb801eab218531fb801
e9b218531fb801e8b218531fb801e7b218541fb801e6b218541fb801e5b2
18541fb801e4b218541fb801e3b218531fb801e2b218531fb801e1b21854
1fb801e0b218541fb801dfb218541fb801deb218541fb801ddb217561fb8
01dcb217561fb801dbb217571fb801dab217571fb801d9b217561fb801d8
b217561fb801d7b217571fb801d6b217571fb801d5b217571fb801d4b217
571fb801d3b217561fb801d2b217571fb801d1b217561fb801d0b217561f
b801cfb217571fb801ceb217571fb801cdb217571fb801ccb217571fb801
cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b2
17571fb801c6b217571fb801c5b217571fb801c4b2163e1fb801c3b2163f
1fb801c2b2163f1fb801c1b2165b1fb801c0b2165b1fb801bfb2165b1fb8
01beb2165b1fb801bdb2165b1fb801bcb2165b1fb801bbb2165b1fb801ba
b2163f1fb801b9b2163f1fb801b8b2165b1fb801b7b2165b1fb801b6b216
5b1fb801b5b2165b1fb801b4b2165b1fb801b3b2165b1fb801b2b2165b1f
b801b1b2163f1fb801b0b2163e1fb801afb2163f1fb801aeb2163f1fb801
adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2165b1fb801a9b2
165b1fb801a8b2163e1fb801a7b2163f1fb801a6b2165b1fb801a5b2165b
1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb8
01a0b2165b1fb8019fb2165b1fb8019eb215621fb8019db215621fb8019c
b215631fb8019bb215641fb8019ab215651fb80199b215661fb80198b215
661fb80197b215661fb80196b215661fb80195b215661fb80194b215661f
b80193b215661fb80192b215611fb80191b215621fb80190b215631fb801
8fb215641fb8018eb215641fb8018db215651fb8018cb215661fb8018bb2
15661fb8018ab215631fb80189b215641fb80188b215551fb80187b21561
1fb80186b215621fb80185b215621fb80184b215631fb80183b215651fb8
0182b215661fb80181b215661fb80180b215661fb8017fb215661fb8017e
b215661fb8017db215661fb8017cb215661fb8017bb215661fb8017ab215
451fb80179b215611fb80178b215621fb80177b215621fb80176b215631f
b80175b215641fb80174b215641fb80173b215651fb80172b215661fb801
71b215661fb80170b215661fb8016fb215661fb8016eb215661fb8016db2
15661fb8016cb215661fb8016bb215551fb8016ab215451fb80169b21545
1fb80168b215361fb80167b215361fb80166b214821fb80165b214561fb8
0164b2147f1fb80163b214551fb80162b214561fb80161b214401fb80160
b214551fb8015fb214561fb8015eb2147e1fb8015db214831fb8015cb214
851fb8015bb2133d1fb8015ab2131e1fb80159b2131e1fb80158b2130a1f
b80157b2130a1fb80156b2130b1fb80155b2133a1fb80154b2133a1fb801
53b2133a1fb80152b2133b1fb80151b2133c1fb80150b2133c1fb8014fb2
12451fb8014eb212461fb8014db212461fb8014cb212451fb8014bb21245
1fb8014ab212461fb80149b212461fb80148b212461fb80147b212441fb8
0146b212451fb80145b212461fb80144b212461fb80143b211471fb80142
b211571fb80141b211581fb80140b211591fb8013fb2115a1fb8013eb211
5a1fb8013db2115b1fb8013cb2115b1fb8013bb2115b1fb8013ab2115b1f
b80139b2112b1fb80138b2112c1fb80137b211391fb80136b211391fb801
35b211461fb80134b211471fb80133b211471fb80132b211551fb80131b2
11551fb80130b211561fb8012fb211561fb8012eb211571fb8012db21157
1fb8012cb211581fb8012bb211591fb8012ab211591fb80129b2115a1fb8
0128b2115a1fb80127b2115b1fb80126b2115b1fb80125b2115b1fb80124
b2115b1fb80123b211591fb80122b2115a1fb80121b211391fb80120b211
471fb8011fb211561fb8011eb211561fb8011db211591fb8011cb211591f
b8011bb2115b1fb8011ab2115b1fb80119b2115b1fb80118b211561fb801
17b211561fb80116b211571fb80115b211571fb80114b211581fb80113b2
115a1fb80112b2115a1fb80111b2115b1fb80110b2115b1fb8010fb2115b
1fb8010eb2115b1fb8010db2115a1fb8010cb2115b1fb8010bb2105d1fb8
010ab2105e1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106
b2105f1fb80105b2105d1fb80104b2105e1fb80103b2105f1fb80102b210
5f1fb80101b2105f1fb8010040ff105f1fff105d1ffe105f1ffd105f1ffc
105f1ffb105f1ffa105d1ff9105e1ff8105f1ff7105f1ff6105f1ff5105f
1ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed
0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60f62
1fe50f621fe40f641fe30f621fe20f621fe10f631fe00f641fdf0f641fde
0f641fdd0f641fdc0f641fdb0f641fda0e671fd90e681fd80e681fd70e68
1fd60e681fd50e671fd40e681fd30e681fd20e681fd10e671fd00e681fcf
0e681fce0e681fcd0e681fcc0e681fcb0e681fca0e681fc90e681fc80d6b
1fc70d6c1fc60d2a1fc50d6c1fc40d2c1fc30d6b1fc20d6c1fc10d6d1f40
ffc00d6a1fbf0d691fbe0d681fbd0d6b1fbc0d311fbb0d311fba0d311fb9
0c711fb80c721fb70c731fb60c741fb50c741fb40c741fb30c731fb20c74
1fb10d311fb00d311faf0d311fae0d311fad0d311fac0d311fab0d311faa
0d311fa90b7e1fa80b7a1fa70b791fa60b7a1fa50b7c1fa40b7d1fa30b7e
1fa20b7e1fa10b7e1fa00b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b
0b7e1f9a0b2d1f990b2d1f980aa71f970aa51f960aa71f950aa71f940aa7
1f930aa71f920a681f910a821f900a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c
0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab7d
550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955
775578ab7755ba028900660288403c5576ab755504751475747503f47501
ab750144750130750102007510752075030c7455725573ab725500725072
8072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d
104671556f5570ab6f556e666d556a03251f6938675568ab675566386455
65ab645563386255613860555f385d555eab5d555c385a555bab5a555938
58555703251f5638545555ab54555338515552ab51554f384e554e03251f
4d384b554cab4b554a38485549ab4855473846554503381f001c101c201c
0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b
03120f1a1f1a02290f1901434f19016f197f198f19030f18cf1802401829
2c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b316
4d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15
010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f
02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d
1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b
02400b3f4346400b2d30460003012001010001100120010308b8ffc0b301
151f46b80100b316010501b80190b154532b2b4bb807ff524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb080
5358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b
2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374
755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b
2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b185f5e000000>
[3287 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2436 449 <0001008ffffa05c203bc004b0084ba027f028000582bb10102435558b900
2d01aab41e22131230bb01fc003a003b0185b4123a122242bb020f000000
2c01fd40124022474935492e3c1303192749194c0d4c282b183f3f3f1217
393f3f012f1a4dedd4ed12393910ed10ed113910dded31301b4010474935
492e3c1303192749194c0d4c282b183f3f3f1217393f3f31305901140607
0e03070e0323222e023503010e0323222e023503262635343e0233321e02
17131537013e0333321e02171315373e03373e0333321e0205c20503265b
6d7e4807151b22151a23150943fed105101a271c1c28190c5f0101081321
1a1a1f11060146040155040a121e17171f1208014a052e5c564d20020c15
221a181f100503a50b17086ddfddd5630b0c070204080e0a0294fd6f0b0f
090404080e0a03570911060c0f090303070d09fd18090902e8080d080303
070c08fd1b080848afc1ca61090d070303050900>QJJAAA+CALIBRI,Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/w 449 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 119 /w put
pop
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic /QJJAAA+CALIBRI,Italic findfont ct_VMDictPut
/BSVNYB+CALIBRI,Italic*1 
[119{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
256.57 70.74 mo
(w)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 1850 396 <0001003ffffa02f203ca0033006cba027f028000582bb10102435558400a
2811111d121c001d1c0cb801184010402d4a121c11281d2706172249174c
282b183f3f1217393f1a4ded012f2fc411331133113331301bb9000c0118
4010402d4a121c11281d2706172249174c282b183f3f1217393f1a4ded31
305901140e0423222e0223220e0207030e0323222e0237133e0333321e02
07073e0333321e02171602f20304080c0d080813171e1422595647114f02
0a142118191f110502b3010a141d14151b0f040121173f4a512711231e17
0606039c04171e201b12070a073b688e53fe6f080b080404080b08038507
0c080303080c07a4294c3922050709060600>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/r 396 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[114{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
263.004 70.74 mo
(r)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 1616 349 <0002003ffffa01ef052f00130029006aba027f028000582bb10102435558
b4291f141e00b80262400b0a1f1e1e141f290424190fb80147b605402449
194c282b183f3f1ade4ded11121739012fd6d4ed1133113331301bb71e14
1f290424190fb80147b605402449194c282b183f3f1ade4ded1112173931
3059010e0323222e02373e0333321e02010e0323222e0237133e0333321e
020701e905111c2a1e1d2612020506121b2a1e1d251302fef7020a142118
191f110502b3010a142119181f11050104cc1c26170a0a17261c1c251909
091925fb31080b080404080b080384070c080404080c0700>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/i 349 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 105 /i put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[105{/.notdef}rp /i 8{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
266.089 70.74 mo
(i)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 2108 410 <00010071ffef02c504ad0045008aba027f028000582bb101024355584029
362c2b372b42080941094137092b2b30371737170030424837413c082ce3
092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f012fcd
39392f2f123911331133107d87c4c41087c4c431301b4013424837413c08
2ce3092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f31
305901140e04232303060615141633323e0233321615140e02070e032322
2e0235343e02371323222635343e023333373e0333321e02070733321602
c502060a0b0e09e66504062b301b281d1608080905080c0708202a2f1738
52381b02050503657d0b0c060c130d7e2b010b142118181f1105012be60f
0a039309151616110afe0a153411332f090a090b0f0d1f1e1807070e0b06
18334d360c1d20200e01fa0d130e252016d6070c090404090c07d616>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/t 410 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[105{/.notdef}rp /i 8{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 
136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
268.154 70.74 mo
(t)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 1314 286 <0002004dffed039d03ca002e003c0087ba027f028000582bb10102435558
b62a323706040009b8020e400923110c1e031414232fb8020d4015002306
be37372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f11
12392fed012fd4ed12392f173910ed11173931301b401306be37372a1e11
110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f1112392fed3130
5901140e022323060615141633323e0233321615140e02070e0323222e02
35343e0433321e0207342623220e020733323e02039d4088d4946a070563
6f40664b3009090904080d080c3d5464325986592c193656779c6254754b
22a9504a41644d371166698d552302e5456e4e2a213e1b646a1316130d0c
0a1c1d1a090c17130c28537c5441959286663e2a425137333f2d4c65381a
2d3c>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/e 286 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[101{/.notdef}rp /e 3{/.notdef}rp /i 8{/.notdef}rp /r /.notdef /t 
2{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
271.169 70.74 mo
(e)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 2988 853 <0001ff95fede013600e000170022b10c00b8024eb20e0713bd0151001800
28027f028000582b2b10f4cd012fedc63130251406070706062322262636
3713373e0333321e020136332fb30d2a251216080307bc17051019251c19
211308ac397338ce0f0d0508100b0113761b201006050d13>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/comma 853 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[44{/.notdef}rp /comma 56{/.notdef}rp /e 3{/.notdef}rp /i 8{/.notdef}rp /r 
/.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
275.46 70.74 mo
(,)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
277.71 70.74 mo
(r)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
280.795 70.74 mo
(e)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 690 258 <00020051ffed03e103ca0026003b008dba027f028000582bb10102435558
b3091d081eb801afb42627263b08b801aeb7000f260113032631b8021e40
171300093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4d
ed3fed3f121739012fedd45f5e5ddded33113310ed11393931301b401600
093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4ded3fed
3f12173931305925060623222e0237370e0323222e0235343e0433321617
37363633321e020707262623220e0415141e0233323e0237032c04242a14
1a100603210d445d723b50693e17152f4b6a8c59597f3213042628141b10
0401d32f6d44365743311f0f0b1f362b376f604a1219110e04070b09aa20
4c402a385c743d388e948c6f43483f5b100e03080c07ec454533546b726e
2c234539233d6c925800>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/a 258 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[44{/.notdef}rp /comma 52{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 
8{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
285.093 70.74 mo
(a)sh
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+CALIBRI,Italic gcheck setglobal} if
1 1000 282 <00020051ffed0439056d002c003f0087ba027f028000582bb10102435558
400a212d3f222c003f092237b8021e401a15222c032746212d3f09080006
0e30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f12393901
2fedc4392f33327d870ec4c431301b4019222c032746212d3f090800060e
30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f1239393130
5925060623222e0237370e0323222e0435343e0433321e0217133e033332
1e020701262623220e0415141633323e0237032d03242a151a100502200d
445d723b3b573b25150716304b6a8b582b4c3e341566010a142019181f12
0502fed62f6d443555443120104249376f604a1219110e04070b09a8214b
3f291f3445494a1f3a90918b6b4213212e1901fe070d070505070d07fd62
454831526a716e2e61673c6a9257>QJJAAA+CALIBRI,Italic AddT42Char 
QJJAAA+CALIBRI,Italic /CharStrings get begin
/d 282 def
end
QJJAAA+CALIBRI,Italic /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYB+CALIBRI,Italic*1 
[44{/.notdef}rp /comma 52{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp 
/i 8{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]
BSVNYB+CALIBRI,Italic nf
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
289.72 70.74 mo
(d)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI gcheck setglobal} if
2 2838 895 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/parenright 895 def
end
HIBBAA+CALIBRI /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI*1 
[40{/.notdef}rp /parenleft /parenright 21{/.notdef}rp /question 192{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
294.35 70.74 mo
(\))sh
gsave
303 161.25 mo
232.5 161.25 li
232.5 118.5 li
303 118.5 li
303 161.25 li
clp
232.5 118.5 mo
303 118.5 li
303 161.25 li
232.5 161.25 li
cp
1 /0 /CSD get_res sepcs
.0976547 sep
f
grestore
gsave
232.5 118.5 mo
232.5 161.25 li
303 161.25 li
303 118.5 li
232.5 118.5 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
303 161.375 mo
232.5 161.375 li
232.375 161.25 li
232.375 118.5 li
232.412 118.412 li
232.5 118.375 li
303 118.375 li
303.088 118.412 li
303.125 118.5 li
303.125 161.25 li
303.088 161.338 li
303 161.375 li
232.5 161.25 mo
232.5 161.25 li
303 161.25 li
303 118.5 li
232.5 118.5 li
232.5 161.25 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
grestore
gsave
231 159.75 mo
302.25 159.75 li
302.25 117 li
231 117 li
231 159.75 li
eclp
230.27 160.62 mo
302.636 160.62 li
302.636 116.6 li
230.27 116.6 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [266.46 340.38 266.46 384.4 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
266.46 340.38 266.46 384.4 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
231 159.75 mo
302.25 159.75 li
302.25 117 li
231 117 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
13569 <001C60D8A8C9B5EE3103E695EECA324AD798014B17A4AA7121D1144B2
7709949660CFCBD138AC8A33D3A21256788EC893E057BCEE9B0FDA55394112A8
90DB54C738199BD85040CCCE80CA02692C23A92B87587AC8867D8E82B585BB2F
5BC28361774D00C166F48FA5DCAFD582F07C127BFA8FF76BDCC5EB257C7B27D6
1FBEECA993496AAB149C1C104423C9FB0841425E369F841ACE969D95C84456FF
0764FE0C73CD0B501C797FF66C5E77C555A82696AE6206EECAD843BC9023807D
A56BEAA171321E1567BA3A0683446C645B8572F04E0E672B37ADFEE13F9B25C4
056E19182AF130C4FA987A673F8263E3C34C7AAF59589391B0F6EEC7FF37A573
5FB699ABDDC02FED3CCB917F3C769B0A2E15A181B90993517EE32A854E165AAB
863F1C53BAA9291805F5C0DE3A4D35A58E2AA590AC5165C8E8A4E33BFBCB5B15
1AEC441D53353D33722FF406D3CACBB99292B2D6A7E4DB8CDE749E251705D58C
C9629EB96B9AE4A8791BFE713460E5BAFC0068F99342A4300B4CECA906A720D1
4157EC884B41D93E8A9458E73CF> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
236.28 135.61 mo
(5\001)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
4554 <001C60D8A8C9B5EE310DE7B33CB67ACEA3ED59516A576BFAFAECE86FFE
BC6FCB8A5E38FE8DBCFF4EBBA5CA2DB165C63EFB99DFD80D73861D19A3E42F3E
F7F5D7598D234204EC344BB0DF80FCC9DD3CCDDB17539CAE0935F416201270E3
3DE4BE51821F9E0C5DDBB2AB73ADB1BF7FE2A16D747FAAB6F99E783312DDB99C
8615247A023BDD9FF6BE9AC2B7CAF5F1DCA8D7A1EC55C89BC649F0202521D51C
083B711526D99F5263ADE05AFCDCAE9608EC98D1D3B1BC2AE9390A2391B1F8D9
DF69B05FC59CF203E8FB65B077457B00364473EDAF9C4B99DAA0BB39292D597F
252605BDEFE92E98A160742142E94E5190B00FED8FE32B245AD4D363C65F3BDC
6C17CFC7DA21B4F3B81AFA46A9> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
245.28 135.61 mo
(\021\312)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
17859 <001C60D8A8C9B5EE3102E759D3B32B4BDF2C7965685AE2C0E6248FBFA
18CB58F268F849D3074D99D9E10DA0D7993411DCA519BD3ACCCD1B2D1E82DD74
EC25AC1F817DA71A17C2EA5E58A3F6AC12C77717C7D2156B023953EF51B5F853
5C3F18B8C802A62763F36A3E0523FB92C926FF66987ADC98D4C2D704E74F4F52
7764A169AF26E1D1F9E10979F232999D5E605A80373B8D00176BB986DECD1BED
9A6571ECFD3A1751DEBD8DE744036DF30924A94CF7B3704D8CF3BCF4F6626A35
DE148F6502C584E9185B9341CFEF185D504BF44715BDA2F0A0EBAD5289E5A998
579DF617ABD61F86B58C94C01CB77DBD5701ADC207745651F229E92B6040A068
2239DB0A120F72BCF6AA4B38F9DAECDBE20D86FF03830056C79616EF085334D5
84A3F58BE46AF74F2D329687BB87F62273E6E7FEDBACE00485D25D8F4DB9D31D
0C21D7D2C488CEE9AF277D92A98725E5D21A149174F8F0968479043296E4D07D
1DB9D4B4645C362C655BD05797078CE15FAA07B37E3E56783BAB71BC06595309
E15C69CDB22C2E3363905CA90E2FE608B0AFFE060FEA89FEBDD1CEDCBDDDDBF8
2A93966F9E7A99136B2EA58355A1E99EEEB0F3CD03BBD0F301CF488> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
254.28 135.61 mo
(E\303)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
2090 <001C60D8A8C9B5EE310323C93C63B77732D47D7A0AFFED7518DE8C6CDC
5BB699916E7D6E539BF02C9948D0E2C7DDF7D51D9C68D839AC7B9BA37446714D
59EFCF767047885DA94098E8F6681AB4A89ABBFC83BCC23D439B6AD3371339E9
EC6C66F2612563061DC58E6EB4546052ABFCC849940C8CC719E6842EFB31EA61
36881257D0A01A62A127E7379173F0DC7B8E1BDDBCC657BBF41343D9ADC724B6
216377764179B1D08FC50F4617AD5F76A86AA432> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
263.28 135.61 mo
(\010*)sh
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
272.28 135.61 mo
(\()sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
275.01 135.61 mo
(w)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
281.444 135.61 mo
(r)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
284.529 135.61 mo
(i)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
286.594 135.61 mo
(t)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
289.609 135.61 mo
(e)sh
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
293.9 135.61 mo
(\))sh
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
237.41 147.59 mo
(5\001)sh
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
246.41 147.59 mo
(\021\312)sh
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
255.41 147.59 mo
(E\303)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
1941 <001C60D8A8C9B5EE31020D2018DC31C512D3BFBAF4728BB47A66604CD7
57F1B7B4BF0BF35ECF1D22D86EECE2D2BF43768ED9DF0AA51AF1E2347B56E88D
1A839D0C95D90C94FC1098CDB8754B6EC182BAC9B4FA1FE547374EAB163F5882
EC5992DE0C0595AB9F4F57520F98A31E49D41D43B103F6164B4E9E6C73C5C670
C6F3> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
264.41 147.59 mo
(\007\225)sh
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
273.41 147.59 mo
(\()sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
276.14 147.59 mo
(r)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
279.225 147.59 mo
(e)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
283.523 147.59 mo
(a)sh
BSVNYB+CALIBRI,Italic*1 [9 0 0 -9 0 0 ]msf
288.15 147.59 mo
(d)sh
1 /1 /CSD get_res sepcs
1 sep
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
292.78 147.59 mo
(\))sh
431.25 240 mo
372.75 240 li
372.75 204 li
431.25 204 li
431.25 240 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
372.75 204 mo
372.75 240 li
431.25 240 li
431.25 204 li
372.75 204 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
431.25 240.125 mo
372.75 240.125 li
372.625 240 li
372.625 204 li
372.661 203.912 li
372.75 203.875 li
431.25 203.875 li
431.338 203.912 li
431.375 204 li
431.375 240 li
431.338 240.088 li
431.25 240.125 li
372.75 240 mo
372.75 240 li
431.25 240 li
431.25 204 li
372.75 204 li
372.75 240 li
f
grestore
gsave
371.25 238.5 mo
429.75 238.5 li
429.75 202.5 li
371.25 202.5 li
371.25 238.5 li
eclp
370.59 239.14 mo
430.2 239.14 li
430.2 201.64 li
370.59 201.64 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [400.39 261.86 400.39 299.36 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /6 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
400.39 261.86 400.39 299.36 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/6 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
371.25 238.5 mo
429.75 238.5 li
429.75 202.5 li
371.25 202.5 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
5207 <001C60D8A8C9B5EE310D127BACBCEF340BFD72B77A4CF692CD753A7E31
65D06FE4FF749FEC42746DDD830EDDCA2DFB444D68D1B84DF9C9469C61309BDD
810388A6DCCCAB84CD990E43CAC4FBF9C30FF3C7D2089CC80E296BD7EEC43E88
FB337344D71229B59634AD0A90AE009E3B49AEB177F26B27CA1C68698550186A
46EC1D7D3D1991A5BF5D49138F0FCC35B55025A84D0331E9FE4943022B94CB69
53BD1265B032403B3A484056AACF064466FB948033F1A84FFBA8F87F3A647069
219D9746DBC3CCB2E8D7B9A77F28453C9E64ACD7C1A604F2C21818B3696FF45B
36D7175AFBD2F563A1A5CA1264A1BA4F47B71030AE1B6B2EE40A72E2FDD2B249
0728346E4337456C03D588A88E4DD31A3AB55CB7FDB8135EF9F723CF65093606
FF75A9D806FF588C27FB5683BD3D598A765F466AA49FA34EAF684FAF94BDC38C
2174> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
386.89 223.38 mo
(\024W)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
13635 <001C60D8A8C9B5EE310232574423BB85125502E0C579158F2959D4E67
D3160B9CFBFB3D9C7AAE45C9E67510AE58837551A204EBBE54A1318D195C490E
84913327E34E2E8A82A0173E749FDFA3410111B859C26AAA688675159D57C414
B8505B0C2F5553092470B00BE35DF7F1C26CBE07CDF666DF09956F2E56D4D640
55123099A235B61DEF30D50E7F9E7AC6B3FDEAF017BF8DE9DE1F758637E15E53
7389CE5B6F5E7D5A99F4BA9B34D9E335603EFF4F5FD7A480052A198CBBB0135E
08C5A6E0510930F9D85291382FFC394B79AA0F6E698901D7BFB06C60B6415AE1
CE1E23E36B292386D3B442241C7B2B25A158132CCC316205453659F6FA654041
38EE1671CB26DE8CA28D9FF16595426FD1F23FF6A2C3375159BB37FC54DFB8B4
A8FCCE01EF4FC6CDC8A29A67876C7F50DC21918C92D06DB6927E11AED8DCDA06
C8A09EF4302EECD173C85A75180381BB55C8F2421E0B51293286ECD98C671730
E97C0A787F78B9321BA7F6A33C46F613F64C087AB0C33505382AAE5E4BDF90AC
95956D76725EF25179DEF566C0DDB5024052C28ED598B564464107F567E5356B
94E541AD8F6FDF44DA2F9ACBC5008B1A0148CFFF2007A9075DE0F5B0D00DBEB0
AECFC94795592FD7297CD2ADD1E5698E02BFAD32D72E7A8C7F6FC> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
395.89 223.38 mo
(5C)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
2018 <001C60D8A8C9B5EE310277A5F98727AE06DA1268B68A65113F907BD555
07947156B228C9DF91825B28F6E98CAC74676C7A155B4F09C47E7B94E6CB71B3
C63A02E00CE3F75637B72C4F6A111C8B9963FFED1A67121367B368280E502057
D0216190AEEE89AC877337DE1B0E9FF15AAADA243DEFB065258DFBDB51C27459
A157A3428B15B44ABDE42B982CC1D56546C78F4E6731BB99676E168978D4B171
B542BA75D3ACD15A0E2CE2602422E32866B498F755556116CF111B865CF96E87
BD21ECDCDE9767AC223115C862DD8C1A0D3D7F8C475E3435028A02DF1A83C76A
BAD6BA6361142FFC03E71303672BF90F9DE6B9E6D5D71A1179481ABC5F3F65> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
404.89 223.38 mo
(\007\342)sh
436.5 161.25 mo
366 161.25 li
366 121.5 li
436.5 121.5 li
436.5 161.25 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 115.095 272.985 ]ct
[71.28 0 0 40.32 250.425 111.465 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 297 
/H 168 
/M[297 0 0 -168 0 168 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 297 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 297 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 297 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 297 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_
Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&
ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&
JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&
JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>Fi
JcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8Y
Jf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&
ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&
JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&
JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+
JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\
dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbM
g)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&
JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&
JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.
c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&
h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJ
L`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&
VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&
JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(
JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,
fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6
Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&
q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&
JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&
JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)
L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0
W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfN
KGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&
JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&
JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.i
JcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.X
q\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$Ni
Jf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&
JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&
JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQ
JcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iO
JcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_
Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&
ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&
JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&
JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>Fi
JcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8Y
Jf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&
ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&
JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&
JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+
JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\
dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbM
g)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&
JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&
JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.
c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&
h>i--JcLB&JcO'rJcLB&ec;fiJf1U,fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJ
L`(d^cl'.iJcLB&JcLB&JcLB&c2`G6Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&
VZ>KiJf0.Xq\b1iJcLB&JcLB&JcLB&q#H9iJf2iOJcLB&JcLB&JcLB&JcPfNKGf@Ze/>FiJcLB&JcLB&
JcLB&dK$NiJf1I(g]2p+JcLB&JcLB&JcMVIhALn_Jf4A%M?&5.c2`FrJcLB&JcMhOfGT8YJf4S+KE-T(
JcLB&JcLB&JcP`LL)GR\dM]:iJcLB&JcLB&JcLB&ciCBiJf1C&h>i--JcLB&JcO'rJcLB&ec;fiJf1U,
fDpL'JcLB&JcLB&JcMbMg)5J[Jf4M)L&cf*JcLB&JcLB&JcPZJL`(d^cl'.iJcLB&JcLB&JcLB&c2`G6
Jf3,WXT3qQJcLB&JcLB&JcO:#Y8Mp0W>XCiJcLB&JcLB&JcLB&VZ>KiJf0.Xq\an~>

%%EndBinary
grestore
np
gsave
366 121.5 mo
366 161.25 li
436.5 161.25 li
436.5 121.5 li
366 121.5 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
436.5 161.375 mo
366 161.375 li
365.875 161.25 li
365.875 121.5 li
365.911 121.412 li
366 121.375 li
436.5 121.375 li
436.588 121.412 li
436.625 121.5 li
436.625 161.25 li
436.588 161.338 li
436.5 161.375 li
366 161.25 mo
366 161.25 li
436.5 161.25 li
436.5 121.5 li
366 121.5 li
366 161.25 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 115.095 272.985 ]ct
[71.52 0 0 40.8 250.425 111.225 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 298 
/H 170 
/M[298 0 0 -170 0 170 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 298 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 298 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 298 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 298 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'j
Jf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&
`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&
JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&
JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.i
JcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[
Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&
eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&
JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&
JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3
JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3b
b8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSH
h\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&
JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&
JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:
_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!p
kl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?A
OVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&
T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&
JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+
JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*
g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')
Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&
m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&
JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&
JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#
Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4
U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]K
LDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&
JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&
JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGi
JcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.X
nemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$i
Jf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&
JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&
JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%R
JcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BB
JcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'j
Jf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&
`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&
JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&
JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.i
JcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[
Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&
eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&
JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&
JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3
JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3b
b8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSH
h\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&
JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&
JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:
_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!p
kl?;8JcLB&JcNUeJcLB&eGu`iJf1O*g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?A
OVr`g`YlGiJcLB&JcLB&JcLB&_#T')Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&
T)dpiJf0.XnemPiJcLB&JcLB&JcLB&m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl'.iJcLB&JcLB&
JcLB&b5f$iJf10uj8ac3JcLB&JcLB&JcM5>ko#'jJf3qnQ2lL:_#T&eJcLB&JcMbMg)5J[Jf4J(LB)o+
JcLB&JcLB&JcPNFN#@3bb8IeiJcLB&JcLB&JcLB&`W3[iJf1!pkl?;8JcLB&JcNUeJcLB&eGu`iJf1O*
g&Q^)JcLB&JcLB&JcMSHh\h"`Jf4;#Mu\G0JcLB&JcLB&JcP?AOVr`g`YlGiJcLB&JcLB&JcLB&_#T')
Jf3)VXoO%RJcLB&JcLB&JcO-tZPe?4U`&%iJcLB&JcLB&JcLB&T)dpiJf0.XnemPiJcLB&JcLB&JcLB&
m/WFiJf2BBJcLB&JcLB&JcLB&JcP]KLDb[]cl%?~>

%%EndBinary
grestore
np
grestore
gsave
364.5 159.75 mo
435 159.75 li
435 120 li
364.5 120 li
364.5 159.75 li
eclp
363.5 160.62 mo
435.866 160.62 li
435.866 119.435 li
363.5 119.435 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [399.69 340.38 399.69 381.57 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /7 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
399.69 340.38 399.69 381.57 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/7 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
364.5 159.75 mo
435 159.75 li
435 120 li
364.5 120 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
16849 <001C60D8A8C9B5EE310D8BEC5980B8763F790DC84E44A1E80722DB0C0
01E05D49522971D5328DFCA3D61C527B4F92BB816D96D6A4E6ECCAA385F5C11E
AFA839CF4307FBFDA013252E25BAE9E470737AC23B04134405E71425613C7C57
A768B10497B52C921058F27ABC2A97A2FD2C78448A13E71AACFD93C32B58021D
0E0136F9BDD67FD10360CAD44DC0BBBDE425D9C135A52F01FFA568C071D33DCC
47903180277DA3AF2E28CED7763805C4F2BE0DD2051ABC24FBAA0> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
368.19 137.62 mo
(A\321)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
12743 <001C60D8A8C9B5EE3102DB03B5ABD3CD1923494E26F25E4F4828574D7
3043CE8B267A42B3336FA109B38A1D22B2DA5E6B9E51DC16DA59A10A6851A79F
6FC1CE0EF04AAAE8E703EA081B2774487CA310AC7194B0B2AD5F8802F08423F7
E7A34571664458C0CE9D97F6F5083A1C3DCA87A205A632B1EB8207D96A54996D
CA2DC7C265498ADC2676CADA922ACC8F97BB3722DD0B7D55DD7FAB7908D39471
A149BFE5532FBA65C77AA9B0CEE80058CAC81340A05818AF00A1870857328846
D4595EE3A14622890DB8B564EF0BE22A2941EBE3961AB0B865D116A4001C8C04
739772D4F1BE52CDFAFDEE248DD7795CC98C380EA9851F40BA856BA8093735A4
B51BDB0455EDE26D2945F18F3A8C8E734C5A0765EE13A73BC50288F5B9ECF030
093310C65BC52AB0AAD4D890E55EC1E1057139EEBBEFC342193405E946EC8863
B93B3BE27090D9BA65C2870C990358B621AE2EB71A865666027E22BD67D354E6
DDEC046CD7F754CAC35600253F7E8F302058B55B370CD36C90A595139038DD15
F2B5045D5F816A43CC6AE67CE891D7B5359936E705B94581ECDC4E02147195E9
C4628> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
377.19 137.62 mo
(1\307)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
4720 <001C60D8A8C9B5EE3102C855498966897C023347EB706273F0BAA6D515
A3AE523CB6556D5098FC2074854EA326F85D1282A93C04DEA0BB9B7DA8A06F11
FA31D2C808D42C0D745F0E67422CE01BCA13DD4C3253E8B7FB706E0470AD53B6
8FFC8C657CDC6E51843983F96C7C49F0A298070CF6C39F78A6A27F628B0DA79A
D146EDE6FF67F69BD5D3A096E4FE849C28DE7F46AD06D2E6CC68ED5130ADA92F
64226D65CFECCCEDCC69C944DFAD3A21048C382D198F5E1F3357D95B4A575119
CB2324FB1701629C22F0BDA7A4F2D146E819DEA55326473270FA1EF0C8D80204
9A844211E85C89BBFDF60AFA11EDBD39D16C34531155083D60E25685> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
386.19 137.62 mo
(\022p)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
18200 <001C60D8A8C9B5EE3103C3740DC42DCB15BF3D4807241719FD0E1E40F
12B89CAD3B291BBF741A4CBCDF05266A70EC6537C150FE358A65F180173C51C3
08B6AA50E77838BBC35FE6F0793D8BE7667831F8D203B36FEFAC2A017F0ADAC5
43D26BB23BA4475CF5DF526A1EDEBBD7B9D454BBBCAA28F30F355CFCE579A691
F8C381581C9C8FA862745BF65DE2207EC8FF8F48A5AA0AD4CC3D7A73124DD1F4
5EEF44D9C718E4D8B593992A7B42FCC1A6307768FC454BCEDC90DB199DA4ED9D
87FD9844C7DBD3AEB1CC11731FF0D821C5C48583B7C15EA8252CE2A9F66E63BA
C7B9189C99AD178C849EBF4F034AE91E404AAFFC3248CECAF9DA196275A0C6A2
1D87518FEFE917C934E35149E87EF69E5397420DF491C0519690219296397135
81712D46CEC05539E12BC7C2ABB249111956BDD4A97A8446B3B1E3B757426586
DE21B83BA7B05285997A101D775F620235C75CD86751641> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
395.19 137.62 mo
(G\030)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
7472 <001C60D8A8C9B5EE31020F8D4CFAC6F4D576E51617CEB919FCE61EF073
E00F00AA373779486FF5A3742856B344C47A353869141DABC9D857A3A98466E7
F6BF07FA65BA910B87A03F518C856322EC7070B4F66679537BA46FBD7C300696
66C8A775BFBA42FF3D8F7967AFFE9C4CA59E000F65FAF231A5B1A50F41D41389
547AA9E993334578993E90E7F2BFAAE9F70C62CDAE0E2DA8D46CFE568CF43E32
71D60F80DE2DF705692EEE4E9CF905D9E8C26A4DF20AFAC06C8739EADEB7197F
59856A6F87F39AE3FDB72652BA05569678071010F026E097467ED3B020C2C708
A3DE94E7526B5D3ECDF5FF1EF5C766E419CBF8E956C54933A1B72E5D1B1EC57E
01A8DE90F942437927CFC336B01980B72EC34818EFF175C85BED15386A08C83C
7DFA758D120F84461ED086C1E855220C412DA1B93EA2342802E8D435B69DEB8E
B7CAC6253338D69118FEE382AEA9371A> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
404.19 137.62 mo
(\0350)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
3927 <001C60D8A8C9B5EE3130B0B4FCC9A59B3E113D3CB3C000CCED658B2EF7
5E34F52613B00AA16BD90B70B9EA9C8EE40F439D99585E90B4FDE2403D86BC24
281D91AC6BE015ECE41D8422B1F488905F9D06127FA14418F4FE243FE136E7AC
0F767EDE5A48EEB0A882C2A630B7323C1232C75DBC6FFE6D3090227C9846972A
ACFB7D25E15C90EB76> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
413.19 137.62 mo
(\017W)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
1644 <001C60D8A8C9B5EE310D8D4A87651AD62D2268977655B9FAC0AB2CDF41
0742BC98C1A12B89A82D720EC74A5AA35482F353335EE6CD1C0074BB0E116E00
3ABFEF8322708729F9E7948A1562344AF0832A757CFBD1C6E1518517C992B112
6832B4DDAE152ABA604D111B8C45D353DB448FEEBD907E50820C00445AF75E08
94AE3781E35691E9BEF50B6CD179427A6CA839FFDEE178E3F18CD7609E6954CF
8708B4112BC7BFB121577C500F88EE823B69861B619D356A4BCD2FFD32563A4F
4512752702B3362F3D37D2AABBBB8977814A39E689FA18DD9A13FA3BCA8E936C
135E1C3EA292ECA6A9D609EE56AE12A2345074E932D54F8E755960> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
422.19 137.62 mo
(\006l)sh
1 lw
151.5 53.25 mo
151.5 111.75 li
1 /1 /CSD get_res sepcs
.749 sep
@
151.5 117 mo
148.5 110.25 li
148.13 110.31 li
150.35 111.42 152.96 111.42 155.17 110.31 cv
155.25 110.25 li
151.5 117 li
cp
ef
151.5 159.75 mo
151.5 174.75 li
@
151.5 180 mo
148.5 172.5 li
148.13 172.67 li
150.35 173.78 152.96 173.78 155.17 172.67 cv
155.25 172.5 li
151.5 180 li
cp
ef
154.5 175.5 mo
162.75 175.5 li
162.75 165 li
154.5 165 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
7263 <001C60D8A8C9B5EE3103CB5015CA3BF4587A833BB698EB61EE38502675
3465FFB0E6DE0B4DC2E17F17BFE346D9434469F26076A734824CB0D744FF1BDF
1ADAC9B5C5F61CA69FAA3F7238309DFA5E5046EAD1B949617DE71961EA551612
E8870FBAFAAEABF8E007E7D6525216FAF3900270462AECBB9EC4F0B5F32A5085
3399EA83D2BDB5BB714DBD25491641259A137522E90A995DE51F102B0EB6EBD6
8DD78048140F5D2643AF7E61647018C148E5F4E73223CEC7E0A30E77FEBF5CF5
DC3B8B5623799D9ECFDA4717928AEFA091C1882B822C1E2085FEE55C76989902
4DD7DE57527A95C12F5ECF6E3D> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
154.74 173.11 mo
(\034_)sh
186.75 138.75 mo
225.75 138.75 li
1 /1 /CSD get_res sepcs
.749 sep
@
231 138.75 mo
224.25 142.5 li
223.98 142.13 li
225.09 139.91 225.09 137.3 223.98 135.09 cv
224.25 135 li
231 138.75 li
cp
ef
205.5 136.5 mo
213.75 136.5 li
213.75 126 li
205.5 126 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
2646 <001C60D8A8C9B5EE3102F2793977850BF340D4432B7B08E7E51BF94C77
6EAFC195064369B734FB96DD8BE7968E5A0F8D3FB78E2C93E5D8481CEA808E80
6CB78252A5134A3C442426836513718F8DAAD792CEC8E1B48B659756553449FB
EE819AD94685A8C36BC35A645C29B10E59E466AC328433E58B68E20E78482019
F1E9C5A7860C58FF9899C48304B2845359800CBF559BDEE028A62C3780DDC742
F7C9464DB5A6559F509FC244F2C3D38980314F5027DCFBD82E7A29B6A3F7AA57
3FECA2AAE9003F42279AEFE8BCC049832804624C51F6E215FC46> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
205.45 134.18 mo
(\012V)sh
266.25 117 mo
266.25 94.5 li
1 /1 /CSD get_res sepcs
.749 sep
@
266.25 89.25 mo
270 96 li
269.98 96.04 li
267.76 94.93 265.15 94.93 262.94 96.04 cv
263.25 96 li
266.25 89.25 li
cp
ef
231 69 mo
156.75 69 li
@
151.5 69 mo
159 66 li
158.69 65.64 li
157.59 67.86 157.59 70.46 158.69 72.68 cv
159 72.75 li
151.5 69 li
cp
ef
[3 3 ] 0 dsh
302.25 138.75 mo
333 138.75 li
333 140.25 li
359.25 140.25 li
@
364.5 140.25 mo
357 143.25 li
357.21 143.55 li
358.32 141.33 358.32 138.72 357.21 136.51 cv
357 136.5 li
364.5 140.25 li
cp
ef
317.25 149.25 mo
348.75 149.25 li
348.75 128.25 li
317.25 128.25 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
11115 <001C60D8A8C9B5EE310D4F11BE4C2DF3DDF9F06A630A23F8FDD8D757E
5991A5AABCD0D5503866AC9B3E54CB686379CCC73D357D034F47D9ED4A5270E6
96EF053C6DCF23AEF9AFAFEC725FE407434780C803EC7207FE5242354DA6EEAE
C05F2EDFBFBFBF9AF52C1AC8CDCDD33760AD4129FA5892243FA8A917338B5586
673594ACF9B617578E24F9D8BFD462383301F12587A4765C6B0533FE13677E49
017E4701D1FD11E3FCDD1C118123E986D41BDE6C546253514113DCA15AC1724B
4BCED3BF8F933E1E4FC34E012F964FD32ACC486> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
317.07 135.95 mo
(+k)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
3339 <001C60D8A8C9B5EE31030C5C0358A99E2D58EB7DA87D33FCC3CCC88444
C654DC2155AA69F8AAB35C662FA5A04F20AEE7CDFF20DEE6D3B4AC0372264447
E1817B6BAA05237AF978D85F131A7A2EF5D0684348D8708D0BB027E7FAE50CEA
8CFD474EAC755CA65D8AAC99CB82A77B24D99251AC0566878DA520124B339D5F
89A17A7B9C850C86EE21DF799DB595C581095472F3C2BDF40DCC8F6C7CBD964B
329D73A33D633375D3455FD5D437> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
325.07 135.95 mo
(\015\013)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
17897 <001C60D8A8C9B5EE3103DB768FE35C4E24D6557ADB0140C1C9D290B8C
F0D56CCA0892F42C7673F26FE588FC810017A426641372D88299FDEE66B4B3A4
4C2DE76FF0B5621A322C3615423DF0B5FD046FC701C1E1C7D8FBE2225C460BE4
732AC559E8D394A6FF428D305EE5D5C544B570C42493542CA0DD61B721A5227A
BD3A31EECC080D6A368F70F294AAA934882EF49B8A3B2C449BB392ABF95C91DE
4D1F5D506DEB4F699C1D10A46714DE2250E024C673F923177CE2A16FDD095F16
F533209B94E9126D91F85C97E2F2E24DCA303F7E62AA81F8867B0DD5C8543EC9
69E061CDF25FCA6FCD83B44C45C50E88C4AEED455C84BF592A016B1D759B28B6
A0F750F68321F6AB7D2FC44CE22C50F2FA0FD923BC034A3DA1F21ED3FBB7378A
B5C3640F2C47DA841535896A48044E9EF9B3FC51F329A7B> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
333.07 135.95 mo
(E\351)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
5522 <001C60D8A8C9B5EE3103A8963ECFDCBD017CF8AE3B8B5BEACFA7B1079E
2B3860B6A63363B1306AB756FB33D8A942270E2C5139CF03C2E98A3B23434873
278ACF005A3F48C6AFE22D7D1C9E776B043C365606FAD32805B72EA903E9E6E0
44500EE1844A54892436A9A5013EA35DA776F22D32D3EF0BF274453A84E6F44F
9C7B7315ED0F167C5DC1780755D38410438B69024E19293871E1E5A7EFFEDE11
C4E95F22156AB210AE38B2D52585F4E5BE5D98D467BBD9CE223E28B79A6F02BC
DBA53A803DFB636AD29A989F612039ED73118F2D691728D7628CEC6C7057B719
5B4CF663BF430DDFF2E844EE81A50591C5D0075008EA0487705169439C5FAB05
C8785F0A> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
341.07 135.95 mo
(\025\222)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
5426 <001C60D8A8C9B5EE311BAEECF479C3071299F4C7DBE7FD1330C6D3FD08
47ACF9C799C337E61029E34B8F3EF9CFF65D9571D33993CF52E7D31E5094193F
9FC27593F83A92EFB00FA9629333D32313CF40E896799220F44E8ED055DDAABC
0CECD1AE6793C8CAFF12768A78775B968E3CDA0381480252201803583F7014B1
A63C2A5F5E25B63CCDB752182C0FF4CCFAF5D9789FA579227AADB8B102555D9E
8E1879C52A638886F497B0DB86715C1239883E37362422285D68ED0F523BA036
38B82763E0B7C77E826DCE6161DD42B185F5C2AEC7F095D583FF10C470DC6F6D
26E34451A856CC2E54AB77B79A> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
325.07 146.6 mo
(\0252)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
8597 <001C60D8A8C9B5EE310DBA038EF804538310E46F39F2721161CD28A5CC
11170A06139AAEE2B07195146249DC5BD158761174F6BFDAA96758C050553553
0345457F44A31A9A6A2BDD547F058DF3B80FDA36BF94A092B9ABBB5739F518FA
52399D0A04C7B49712DA116A3A5DDBDA5A356F6F09CD09E316AB543B4F5CFAA9
A1A85881C2D50F83D74FD356418443C05D7229B5891C5758A73FE7C28F69364B
0B0D1735286162D5D354363B6FA1B670E3BCD17F92B24421B71859348DC50C1B
CACA6A0878F7ED88422F4CED748A03CF6A27982AD62A62A59630> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
333.07 146.6 mo
(!\225)sh
[] 0 dsh
401.25 159.75 mo
401.25 197.25 li
1 /1 /CSD get_res sepcs
.749 sep
@
401.25 202.5 mo
397.5 195 li
397.58 195.35 li
399.8 196.46 402.41 196.46 404.62 195.35 cv
404.25 195 li
401.25 202.5 li
cp
ef
[3 3 ] 0 dsh
371.25 220.5 mo
350.25 220.5 li
350.25 197.25 li
335.25 197.25 li
335.35 197.43 li
335.35 195.77 334.01 194.43 332.35 194.43 cv
330.7 194.43 329.35 195.77 329.35 197.43 cv
329.25 197.25 li
192.75 197.25 li
@
186.75 197.25 mo
194.25 194.25 li
194.13 193.91 li
193.02 196.12 193.02 198.73 194.13 200.95 cv
194.25 201 li
186.75 197.25 li
cp
ef
233.25 193.5 mo
273 193.5 li
273 183 li
233.25 183 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
16939 <001C60D8A8C9B5EE310D783B7AF8C67A29BD7646C7C422A40D2FE13B5
A3D573F0ECE38EB5B48C88E6DB2C79AEE7BFCB09646EEF56AD3B7F3875924742
8E8737C0858DCE0C2102A9F2995748CFBA651818D07EEAD4D0B3B73C2D32B61B
C1FE18D08C2868FA8B4B53A951F1EB953BCAA388FD54C301333B0BD19C49C8FF
ABF727B9A09B277882B57BA7F699F6498CE3C0BC55F1C5677BFC0C2A7E285AD4
1B7D23A14B9A84AF0DCA736CACA457FC59C4B69F2FBDFF00BB402C97FABE66C7
9AD90D1EC33D75ADEE9A5F636159A3BE503FB5901FC4D6404155A3E1373B89EA
4367E5637173BB48034BDFA0FAC21CCCE3FE647FDBF1BDCB46B15159966F2FB0
2907B8E17DF921F1AAAB59E46D08959938E35BAE5F8464F93C1460763BAA5FFB
0D2339F49CF415335F10CBB4F4E6C8E86B26605C5199DA86DAB4F22365D2B1D3
EC9B349E0026815678FF70EA6C48DE51B8976A171CABA90ACAB57994255F4171
A95E7F7C1F00FD21423D56AA8E3C4BB907F4A312D286F9D873B7F77A91B85395
ABE16> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
232.94 190.88 mo
(B+)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
2566 <001C60D8A8C9B5EE31023EAC3A51772F16EC49C5B0AE161A8317B2C8AE
28E7115B2D09A7021EF68112A081E276A063553B316D1D21197083357CA70D57
69B0C97F1CFE68A64CE7A2A2126D315232ED16C465979C89B1D1653000290DAD
09DA739754AB159DA564D4D9D01BD6136AC10EE9486FFE0D2617161DAA81A8D2
506061125508252E50FBA5EE841298A3E3439177F940E4D8C1F613F58B468CF5
FB4FE401BAC83E333CEDC2A6D93A73B9F0469FB821CE1AA7429E4A4C13801D47
4554E4B16F410F7D955E930D051496418BCD4CEAA8E186FCE61B6B9A030DE3CD
0545E66D088FEFBD9D7E1CACFBCB> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
240.94 190.88 mo
(\012\006)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
1791 <001C60D8A8C9B5EE310DAAEC954437FC123207681FC54D2E6D4FA56C28
AD6BC8B401BC1E2E2A75204311179470683C747C4EFF0190511FB8274F3E253F
FE6C32A9BF4AC070504D21BBAEB2E5F1F1B4E26906113BAB8474E2B3A421CDB1
BDEF298D1780E9D31A21169FD11800A1344EEC3C01C8A64211E77AA63B681951
67A5E5F2EE54BE7CBDB29EB1578E1FA371549C52F183E2185ADC54B55893AED7
B2DA81552213F903E1D80840C92EB2D21E2480735CB0C4610656D5B68B0D6635
7B268AAE757228137457D8D5B4032465B8FF04FAD0759D8760FBFCC51FD66769
BCFD14A61785D5ED35B9521094B7CF612447D88C06F82BD3525C3F7C38422614
A039AB22BE230082CF471EF3249FCE4FDC823993C88DA323B6F7B1CC5977BEAF
C5A3D621DC6CF638A68C79B5B7A7917F08E48B2D46C72DC34E3B736017523D74
01E3B842039218A0AF5BF1410972EA248F2C48D51CD20D7FBB2671AAEF5BBC1A
0BC91CA628847E543AA12B96764C132843432F3C1FBAC9F46AB32F9465CE32F7
F475486FAA06B86F60C02142BCDC0BB361A5C113E865007C80F18D1D4D8847C0
A0D4E9DD1C12E451C830C509497283C8912FA9B225249E085883CDE80F2E2F3B
B363E523> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
248.94 190.88 mo
(\006\377)sh
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
13136 <001C60D8A8C9B5EE3102E13C29BD78A86309A50D0D2406799FA7B3EE5
04C385A3E17423493941A1FCF85C3A7783E3B3B01C0FD4AAC68FD5182E5CE86F
A2C9B0030215D02BA6E2A2844510028A3EC1A16A06F561203A1F8B8A54BC3150
FA12E28A5C2444CDA6AA9EDB3B040F757A39EDA22A6338C6FC9E230B04FD09B6
3E208710DEF93B41A43802245BC989CC9B6781BBD64478B7418AEB2CC2E8F94C
77E7038E3503973A32A0298FF5B096E0E2CA9DEA3732BA75A28D2B9285350B9C
32CE9383B20D8E8020DE24014245390A67A6624511A2BB208B7374F242F7197A
9B754E474C8D76EEBEB4978DB7A9364CBE3723444E2423C879C05EBA1E2AAD76
B3934584947FDA060E2D1ECD574B88E89CA7C6BB976BFC338414AB194A3C0DAE
0723A650E2CDF57F70B4D23BF48CCA75E87D036B7EABB706A16DB5AFAD50E916
71C0C3151D8C2DB493F430DA5F3C9BD08B5517032A4DFC0F9B9F5D5982EC7FBF
6FFC69C30B8531D35F4EE34D62ACEF570BFA87DB40B4551F4A6C8E6A8401A8A6
7415C6C5B3C6906C9C7498811E280EFB806> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
256.94 190.88 mo
(3P)sh
1 /1 /CSD get_res sepcs
1 sep
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [7.99992 0 0 -7.99992 0 0 ]msf
264.94 190.88 mo
(\006l)sh
174.35 271.86 mo
174 271.5 li
132 271.5 li
131.83 271.86 li
124.01 271.86 117.66 265.51 117.66 257.69 cv
117.66 249.86 124.01 243.51 131.83 243.51 cv
132 243.75 li
174 243.75 li
174.35 243.51 li
182.18 243.51 188.53 249.86 188.53 257.69 cv
188.53 265.51 182.18 271.86 174.35 271.86 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
131.83 243.51 mo
124.01 243.51 117.66 249.86 117.66 257.69 cv
117.66 265.51 124.01 271.86 131.83 271.86 cv
132 271.5 li
174 271.5 li
174.35 271.86 li
182.18 271.86 188.53 265.51 188.53 257.69 cv
188.53 249.86 182.18 243.51 174.35 243.51 cv
174 243.75 li
132 243.75 li
131.83 243.51 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
174.35 271.985 mo
174.26 271.947 li
173.947 271.625 li
132 271.625 li
131.96 271.585 li
132 271.5 li
174 271.5 li
174.35 271.86 li
182.18 271.86 188.53 265.51 188.53 257.69 cv
188.53 257.69 li
188.53 257.69 li
188.53 249.86 182.18 243.51 174.35 243.51 cv
174 243.75 li
132 243.75 li
131.83 243.51 li
124.01 243.51 117.66 249.86 117.66 257.69 cv
117.66 257.69 li
117.66 257.69 li
117.66 265.51 124.01 271.86 131.83 271.86 cv
131.87 271.775 li
131.955 271.86 li
131.83 271.985 li
123.941 271.985 117.535 265.579 117.535 257.69 cv
117.535 249.791 123.941 243.385 131.83 243.385 cv
131.932 243.438 li
132.065 243.625 li
173.961 243.625 li
174.279 243.407 li
174.35 243.385 li
182.249 243.385 188.655 249.791 188.655 257.69 cv
188.655 265.579 182.249 271.985 174.35 271.985 cv
f
grestore
gsave
130.5 270.75 mo
173.25 270.75 li
172.91 270.42 li
180.74 270.42 187.09 264.07 187.09 256.25 cv
187.09 248.42 180.74 242.07 172.91 242.07 cv
173.25 242.25 li
130.5 242.25 li
130.39 242.07 li
122.57 242.07 116.22 248.42 116.22 256.25 cv
116.22 264.07 122.57 270.42 130.39 270.42 cv
130.5 270.75 li
eclp
115.47 271.17 mo
187.836 271.17 li
187.836 241.324 li
115.47 241.324 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [151.65 229.83 151.65 259.68 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /8 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
151.65 229.83 151.65 259.68 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.25 lw
[] 0 dsh
130.5 270.75 mo
173.25 270.75 li
172.91 270.42 li
180.74 270.42 187.09 264.07 187.09 256.25 cv
187.09 248.42 180.74 242.07 172.91 242.07 cv
173.25 242.25 li
130.5 242.25 li
130.39 242.07 li
122.57 242.07 116.22 248.42 116.22 256.25 cv
116.22 264.07 122.57 270.42 130.39 270.42 cv
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
142.65 259.24 mo
(5\003)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H 1 GetGlyphDirectory
7567 <001C60D8A8C9B5EE310385CED50297909DDD5AD528889064CB98CF7D61
817B4679657B7BC59D887B5CDEA690765349491C8D1A2989383B98B83D04D5F5
3CB1F1B24ED9F3A88B3CAE7C0CAF6988BC2AC976EBC6C9C64B270FF86790D052
802C668745FBB898AEF703D377160E835D7D5083D6AF28C9E8FD8FFEF45DD5C1
EC19B240B95AE774B6E8F9F614420A97CF1C04D8BD9296C23572A257EBF971CE
51982FE1565C59F8E6A1507FECE873009091B217AB2236D818EC750AD8D3E742
5F440B560440DDA18FCD35AB14F3DF50E63CF808AF46253E64AFA78D1B10FAC5
CF7B17DF> |
!
end
end end
%ADOEndSubsetFont
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
151.65 259.24 mo
(\035\217)sh
1 lw
151.5 215.25 mo
151.5 237 li
1 /1 /CSD get_res sepcs
.749 sep
@
151.5 242.25 mo
148.5 234.75 li
148.13 235.03 li
150.35 236.14 152.96 236.14 155.17 235.03 cv
155.25 234.75 li
151.5 242.25 li
cp
ef
313.5 27.75 mo
270.75 27.75 li
270.75 27.6251 li
270.75 27.1249 li
270.75 26.875 li
270.75 26.3749 li
270.75 26.125 li
270.75 25.6249 li
270.75 25.375 li
270.75 24.8751 li
270.75 24.625 li
270.75 24.125 li
270.75 23.875 li
270.75 23.375 li
270.75 23.1249 li
270.75 22.625 li
270.75 22.3749 li
270.75 21.875 li
270.75 21.6249 li
270.75 21.1249 li
270.75 20.8751 li
270.75 20.3749 li
270.75 20.125 li
270.75 19.6249 li
270.75 19.375 li
270.75 18.8749 li
270.75 18.625 li
270.75 18.1251 li
270.75 17.875 li
270.75 17.375 li
270.75 17.125 li
270.75 16.625 li
270.75 16.3749 li
270.75 15.875 li
270.75 15.6249 li
270.75 15.125 li
270.75 14.8749 li
270.75 14.3749 li
270.75 14.1249 li
270.75 13.6249 li
270.75 13.3751 li
270.75 12.8749 li
270.75 12.625 li
270.75 12.1249 li
270.75 11.875 li
270.75 11.3751 li
270.75 11.125 li
270.75 10.625 li
270.75 10.375 li
270.75 9.87502 li
270.75 9.62494 li
270.75 9.125 li
270.75 8.87492 li
270.75 8.37497 li
270.75 8.1249 li
270.75 7.62495 li
270.75 7.37487 li
270.75 6.87493 li
270.75 6.62506 li
270.75 6.1249 li
270.75 5.87504 li
270.75 5.37488 li
270.75 5.12502 li
270.75 4.62507 li
270.75 4.37499 li
270.75 3.87505 li
270.75 3.7499 li
270.875 3.7499 li
271.375 3.7499 li
271.625 3.7499 li
272.125 3.7499 li
272.375 3.7499 li
272.875 3.7499 li
273.125 3.7499 li
273.625 3.7499 li
273.875 3.7499 li
274.375 3.7499 li
274.625 3.7499 li
275.125 3.7499 li
275.375 3.7499 li
275.875 3.7499 li
276.125 3.7499 li
276.625 3.7499 li
276.875 3.7499 li
277.375 3.7499 li
277.625 3.7499 li
278.125 3.7499 li
278.375 3.7499 li
278.875 3.7499 li
279.125 3.7499 li
279.625 3.7499 li
279.875 3.7499 li
280.375 3.7499 li
280.625 3.7499 li
281.125 3.7499 li
281.375 3.7499 li
281.875 3.7499 li
282.125 3.7499 li
282.625 3.7499 li
282.875 3.7499 li
283.375 3.7499 li
283.625 3.7499 li
284.125 3.7499 li
284.375 3.7499 li
284.875 3.7499 li
285.125 3.7499 li
285.625 3.7499 li
285.875 3.7499 li
286.375 3.7499 li
286.625 3.7499 li
287.125 3.7499 li
287.375 3.7499 li
287.875 3.7499 li
288.125 3.7499 li
288.625 3.7499 li
288.875 3.7499 li
289.375 3.7499 li
289.625 3.7499 li
290.125 3.7499 li
290.375 3.7499 li
290.875 3.7499 li
291.125 3.7499 li
291.625 3.7499 li
291.875 3.7499 li
292.375 3.7499 li
292.625 3.7499 li
293.125 3.7499 li
293.375 3.7499 li
293.875 3.7499 li
294.125 3.7499 li
294.625 3.7499 li
294.875 3.7499 li
295.375 3.7499 li
295.625 3.7499 li
296.125 3.7499 li
296.375 3.7499 li
296.875 3.7499 li
297.125 3.7499 li
297.625 3.7499 li
297.875 3.7499 li
298.375 3.7499 li
298.625 3.7499 li
299.125 3.7499 li
299.375 3.7499 li
299.875 3.7499 li
300.125 3.7499 li
300.625 3.7499 li
300.875 3.7499 li
301.375 3.7499 li
301.625 3.7499 li
302.125 3.7499 li
302.375 3.7499 li
302.875 3.7499 li
303.125 3.7499 li
303.625 3.7499 li
303.875 3.7499 li
304.375 3.7499 li
304.625 3.7499 li
305.125 3.7499 li
305.375 3.7499 li
305.875 3.7499 li
306.125 3.7499 li
306.625 3.7499 li
306.875 3.7499 li
307.375 3.7499 li
307.625 3.7499 li
308.125 3.7499 li
308.375 3.7499 li
308.875 3.7499 li
309.125 3.7499 li
309.625 3.7499 li
309.875 3.7499 li
310.375 3.7499 li
310.625 3.7499 li
311.125 3.7499 li
311.375 3.7499 li
311.875 3.7499 li
312.125 3.7499 li
312.625 3.7499 li
312.875 3.7499 li
313.375 3.7499 li
313.5 3.7499 li
313.5 27.75 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
270.75 3.7499 mo
270.75 27.75 li
313.5 27.75 li
313.5 3.7499 li
270.75 3.7499 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
313.5 27.8749 mo
313.375 27.75 li
313.5 27.75 li
313.5 27.6251 li
313.625 27.75 li
313.5 27.8749 li
312.75 27.8749 mo
312.625 27.75 li
312.875 27.75 li
312.75 27.8749 li
312 27.8749 mo
311.875 27.75 li
312.125 27.75 li
312 27.8749 li
311.25 27.8749 mo
311.125 27.75 li
311.375 27.75 li
311.25 27.8749 li
310.5 27.8749 mo
310.375 27.75 li
310.625 27.75 li
310.5 27.8749 li
309.75 27.8749 mo
309.625 27.75 li
309.875 27.75 li
309.75 27.8749 li
309 27.8749 mo
308.875 27.75 li
309.125 27.75 li
309 27.8749 li
308.25 27.8749 mo
308.125 27.75 li
308.375 27.75 li
308.25 27.8749 li
307.5 27.8749 mo
307.375 27.75 li
307.625 27.75 li
307.5 27.8749 li
306.75 27.8749 mo
306.625 27.75 li
306.875 27.75 li
306.75 27.8749 li
306 27.8749 mo
305.875 27.75 li
306.125 27.75 li
306 27.8749 li
305.25 27.8749 mo
305.125 27.75 li
305.375 27.75 li
305.25 27.8749 li
304.5 27.8749 mo
304.375 27.75 li
304.625 27.75 li
304.5 27.8749 li
303.75 27.8749 mo
303.625 27.75 li
303.875 27.75 li
303.75 27.8749 li
303 27.8749 mo
302.875 27.75 li
303.125 27.75 li
303 27.8749 li
302.25 27.8749 mo
302.125 27.75 li
302.375 27.75 li
302.25 27.8749 li
301.5 27.8749 mo
301.375 27.75 li
301.625 27.75 li
301.5 27.8749 li
300.75 27.8749 mo
300.625 27.75 li
300.875 27.75 li
300.75 27.8749 li
300 27.8749 mo
299.875 27.75 li
300.125 27.75 li
300 27.8749 li
299.25 27.8749 mo
299.125 27.75 li
299.375 27.75 li
299.25 27.8749 li
298.5 27.8749 mo
298.375 27.75 li
298.625 27.75 li
298.5 27.8749 li
297.75 27.8749 mo
297.625 27.75 li
297.875 27.75 li
297.75 27.8749 li
297 27.8749 mo
296.875 27.75 li
297.125 27.75 li
297 27.8749 li
296.25 27.8749 mo
296.125 27.75 li
296.375 27.75 li
296.25 27.8749 li
295.5 27.8749 mo
295.375 27.75 li
295.625 27.75 li
295.5 27.8749 li
294.75 27.8749 mo
294.625 27.75 li
294.875 27.75 li
294.75 27.8749 li
294 27.8749 mo
293.875 27.75 li
294.125 27.75 li
294 27.8749 li
293.25 27.8749 mo
293.125 27.75 li
293.375 27.75 li
293.25 27.8749 li
292.5 27.8749 mo
292.375 27.75 li
292.625 27.75 li
292.5 27.8749 li
291.75 27.8749 mo
291.625 27.75 li
291.875 27.75 li
291.75 27.8749 li
291 27.8749 mo
290.875 27.75 li
291.125 27.75 li
291 27.8749 li
290.25 27.8749 mo
290.125 27.75 li
290.375 27.75 li
290.25 27.8749 li
289.5 27.8749 mo
289.375 27.75 li
289.625 27.75 li
289.5 27.8749 li
288.75 27.8749 mo
288.625 27.75 li
288.875 27.75 li
288.75 27.8749 li
288 27.8749 mo
287.875 27.75 li
288.125 27.75 li
288 27.8749 li
287.25 27.8749 mo
287.125 27.75 li
287.375 27.75 li
287.25 27.8749 li
286.5 27.8749 mo
286.375 27.75 li
286.625 27.75 li
286.5 27.8749 li
285.75 27.8749 mo
285.625 27.75 li
285.875 27.75 li
285.75 27.8749 li
285 27.8749 mo
284.875 27.75 li
285.125 27.75 li
285 27.8749 li
284.25 27.8749 mo
284.125 27.75 li
284.375 27.75 li
284.25 27.8749 li
283.5 27.8749 mo
283.375 27.75 li
283.625 27.75 li
283.5 27.8749 li
282.75 27.8749 mo
282.625 27.75 li
282.875 27.75 li
282.75 27.8749 li
282 27.8749 mo
281.875 27.75 li
282.125 27.75 li
282 27.8749 li
281.25 27.8749 mo
281.125 27.75 li
281.375 27.75 li
281.25 27.8749 li
280.5 27.8749 mo
280.375 27.75 li
280.625 27.75 li
280.5 27.8749 li
279.75 27.8749 mo
279.625 27.75 li
279.875 27.75 li
279.75 27.8749 li
279 27.8749 mo
278.875 27.75 li
279.125 27.75 li
279 27.8749 li
278.25 27.8749 mo
278.125 27.75 li
278.375 27.75 li
278.25 27.8749 li
277.5 27.8749 mo
277.375 27.75 li
277.625 27.75 li
277.5 27.8749 li
276.75 27.8749 mo
276.625 27.75 li
276.875 27.75 li
276.75 27.8749 li
276 27.8749 mo
275.875 27.75 li
276.125 27.75 li
276 27.8749 li
275.25 27.8749 mo
275.125 27.75 li
275.375 27.75 li
275.25 27.8749 li
274.5 27.8749 mo
274.375 27.75 li
274.625 27.75 li
274.5 27.8749 li
273.75 27.8749 mo
273.625 27.75 li
273.875 27.75 li
273.75 27.8749 li
273 27.8749 mo
272.875 27.75 li
273.125 27.75 li
273 27.8749 li
272.25 27.8749 mo
272.125 27.75 li
272.375 27.75 li
272.25 27.8749 li
271.5 27.8749 mo
271.375 27.75 li
271.625 27.75 li
271.5 27.8749 li
270.75 27.8749 mo
270.625 27.75 li
270.75 27.6251 li
270.75 27.75 li
270.875 27.75 li
270.75 27.8749 li
f
313.5 27.1251 mo
313.5 27.1251 li
313.5 26.875 li
313.625 27 li
313.5 27.1251 li
270.75 27.1249 mo
270.625 27 li
270.75 26.875 li
270.75 27.1249 li
f
313.5 26.3751 mo
313.5 26.3751 li
313.5 26.125 li
313.625 26.25 li
313.5 26.3751 li
270.75 26.3749 mo
270.625 26.25 li
270.75 26.125 li
270.75 26.3749 li
f
313.5 25.6251 mo
313.5 25.6251 li
313.5 25.375 li
313.625 25.4999 li
313.5 25.6251 li
270.75 25.6249 mo
270.625 25.4999 li
270.75 25.375 li
270.75 25.6249 li
f
313.5 24.8751 mo
313.5 24.8751 li
313.5 24.625 li
313.625 24.7501 li
313.5 24.8751 li
270.75 24.8751 mo
270.625 24.7499 li
270.75 24.625 li
270.75 24.8751 li
f
313.5 24.125 mo
313.5 24.125 li
313.5 23.875 li
313.625 24.0001 li
313.5 24.125 li
270.75 24.125 mo
270.625 23.9999 li
270.75 23.875 li
270.75 24.125 li
f
313.5 23.375 mo
313.5 23.375 li
313.5 23.1249 li
313.625 23.2501 li
313.5 23.375 li
270.75 23.375 mo
270.625 23.2501 li
270.75 23.1249 li
270.75 23.375 li
f
313.5 22.625 mo
313.5 22.625 li
313.5 22.3751 li
313.625 22.5001 li
313.5 22.625 li
270.75 22.625 mo
270.625 22.5001 li
270.75 22.3749 li
270.75 22.625 li
f
313.5 21.875 mo
313.5 21.875 li
313.5 21.6251 li
313.625 21.75 li
313.5 21.875 li
270.75 21.875 mo
270.625 21.75 li
270.75 21.6249 li
270.75 21.875 li
f
313.5 21.1249 mo
313.5 21.1249 li
313.5 20.8751 li
313.625 21 li
313.5 21.1249 li
270.75 21.1249 mo
270.625 21 li
270.75 20.8751 li
270.75 21.1249 li
f
313.5 20.3751 mo
313.5 20.3751 li
313.5 20.125 li
313.625 20.25 li
313.5 20.3751 li
270.75 20.3749 mo
270.625 20.25 li
270.75 20.125 li
270.75 20.3749 li
f
313.5 19.6251 mo
313.5 19.6251 li
313.5 19.375 li
313.625 19.5 li
313.5 19.6251 li
270.75 19.6249 mo
270.625 19.5 li
270.75 19.375 li
270.75 19.6249 li
f
313.5 18.8751 mo
313.5 18.8751 li
313.5 18.625 li
313.625 18.7499 li
313.5 18.8751 li
270.75 18.8749 mo
270.625 18.7499 li
270.75 18.625 li
270.75 18.8749 li
f
313.5 18.1251 mo
313.5 18.1251 li
313.5 17.875 li
313.625 18.0001 li
313.5 18.1251 li
270.75 18.1251 mo
270.625 17.9999 li
270.75 17.875 li
270.75 18.1251 li
f
313.5 17.375 mo
313.5 17.375 li
313.5 17.125 li
313.625 17.2501 li
313.5 17.375 li
270.75 17.375 mo
270.625 17.2499 li
270.75 17.125 li
270.75 17.375 li
f
313.5 16.625 mo
313.5 16.625 li
313.5 16.3749 li
313.625 16.5001 li
313.5 16.625 li
270.75 16.625 mo
270.625 16.4999 li
270.75 16.3749 li
270.75 16.625 li
f
313.5 15.875 mo
313.5 15.875 li
313.5 15.6251 li
313.625 15.7501 li
313.5 15.875 li
270.75 15.875 mo
270.625 15.7501 li
270.75 15.6249 li
270.75 15.875 li
f
313.5 15.125 mo
313.5 15.125 li
313.5 14.8751 li
313.625 15 li
313.5 15.125 li
270.75 15.125 mo
270.625 15 li
270.75 14.8749 li
270.75 15.125 li
f
313.5 14.3749 mo
313.5 14.3749 li
313.5 14.1251 li
313.625 14.25 li
313.5 14.3749 li
270.75 14.3749 mo
270.625 14.25 li
270.75 14.1249 li
270.75 14.3749 li
f
313.5 13.6251 mo
313.5 13.6251 li
313.5 13.3751 li
313.625 13.5 li
313.5 13.6251 li
270.75 13.6249 mo
270.625 13.5 li
270.75 13.3751 li
270.75 13.6249 li
f
313.5 12.8751 mo
313.5 12.8751 li
313.5 12.625 li
313.625 12.75 li
313.5 12.8751 li
270.75 12.8749 mo
270.625 12.75 li
270.75 12.625 li
270.75 12.8749 li
f
313.5 12.1251 mo
313.5 12.1251 li
313.5 11.875 li
313.625 11.9999 li
313.5 12.1251 li
270.75 12.1249 mo
270.625 11.9999 li
270.75 11.875 li
270.75 12.1249 li
f
313.5 11.3751 mo
313.5 11.3751 li
313.5 11.125 li
313.625 11.2501 li
313.5 11.3751 li
270.75 11.3751 mo
270.625 11.2499 li
270.75 11.125 li
270.75 11.3751 li
f
313.5 10.625 mo
313.5 10.625 li
313.5 10.375 li
313.625 10.5001 li
313.5 10.625 li
270.75 10.625 mo
270.625 10.4999 li
270.75 10.375 li
270.75 10.625 li
f
313.5 9.87502 mo
313.5 9.87502 li
313.5 9.62494 li
313.625 9.75008 li
313.5 9.87502 li
270.75 9.87502 mo
270.625 9.74987 li
270.75 9.62494 li
270.75 9.87502 li
f
313.5 9.125 mo
313.5 9.125 li
313.5 8.87513 li
313.625 9.00006 li
313.5 9.125 li
270.75 9.125 mo
270.625 9.00006 li
270.75 8.87492 li
270.75 9.125 li
f
313.5 8.37497 mo
313.5 8.37497 li
313.5 8.12511 li
313.625 8.25004 li
313.5 8.37497 li
270.75 8.37497 mo
270.625 8.25004 li
270.75 8.1249 li
270.75 8.37497 li
f
313.5 7.62495 mo
313.5 7.62495 li
313.5 7.37508 li
313.625 7.50002 li
313.5 7.62495 li
270.75 7.62495 mo
270.625 7.50002 li
270.75 7.37487 li
270.75 7.62495 li
f
313.5 6.87493 mo
313.5 6.87493 li
313.5 6.62506 li
313.625 6.74999 li
313.5 6.87493 li
270.75 6.87493 mo
270.625 6.74999 li
270.75 6.62506 li
270.75 6.87493 li
f
313.5 6.12512 mo
313.5 6.12512 li
313.5 5.87504 li
313.625 5.99997 li
313.5 6.12512 li
270.75 6.1249 mo
270.625 5.99997 li
270.75 5.87504 li
270.75 6.1249 li
f
313.5 5.37509 mo
313.5 5.37509 li
313.5 5.12502 li
313.625 5.24995 li
313.5 5.37509 li
270.75 5.37488 mo
270.625 5.24995 li
270.75 5.12502 li
270.75 5.37488 li
f
313.5 4.62507 mo
313.5 4.62507 li
313.5 4.37499 li
313.625 4.49993 li
313.5 4.62507 li
270.75 4.62507 mo
270.625 4.49993 li
270.75 4.37499 li
270.75 4.62507 li
f
313.5 3.87505 mo
313.5 3.87505 li
313.5 3.7499 li
313.375 3.7499 li
313.5 3.62497 li
313.625 3.75011 li
313.5 3.87505 li
f
270.75 3.87505 mo
270.625 3.7499 li
270.75 3.62497 li
270.875 3.7499 li
270.75 3.7499 li
270.75 3.87505 li
f
312.875 3.7499 mo
312.625 3.7499 li
312.75 3.62497 li
312.875 3.7499 li
f
312.125 3.7499 mo
311.875 3.7499 li
312 3.62497 li
312.125 3.7499 li
f
311.375 3.7499 mo
311.125 3.7499 li
311.25 3.62497 li
311.375 3.7499 li
f
310.625 3.7499 mo
310.375 3.7499 li
310.5 3.62497 li
310.625 3.7499 li
f
309.875 3.7499 mo
309.625 3.7499 li
309.75 3.62497 li
309.875 3.7499 li
f
309.125 3.7499 mo
308.875 3.7499 li
309 3.62497 li
309.125 3.7499 li
f
308.375 3.7499 mo
308.125 3.7499 li
308.25 3.62497 li
308.375 3.7499 li
f
307.625 3.7499 mo
307.375 3.7499 li
307.5 3.62497 li
307.625 3.7499 li
f
306.875 3.7499 mo
306.625 3.7499 li
306.75 3.62497 li
306.875 3.7499 li
f
306.125 3.7499 mo
305.875 3.7499 li
306 3.62497 li
306.125 3.7499 li
f
305.375 3.7499 mo
305.125 3.7499 li
305.25 3.62497 li
305.375 3.7499 li
f
304.625 3.7499 mo
304.375 3.7499 li
304.5 3.62497 li
304.625 3.7499 li
f
303.875 3.7499 mo
303.625 3.7499 li
303.75 3.62497 li
303.875 3.7499 li
f
303.125 3.7499 mo
302.875 3.7499 li
303 3.62497 li
303.125 3.7499 li
f
302.375 3.7499 mo
302.125 3.7499 li
302.25 3.62497 li
302.375 3.7499 li
f
301.625 3.7499 mo
301.375 3.7499 li
301.5 3.62497 li
301.625 3.7499 li
f
300.875 3.7499 mo
300.625 3.7499 li
300.75 3.62497 li
300.875 3.7499 li
f
300.125 3.7499 mo
299.875 3.7499 li
300 3.62497 li
300.125 3.7499 li
f
299.375 3.7499 mo
299.125 3.7499 li
299.25 3.62497 li
299.375 3.7499 li
f
298.625 3.7499 mo
298.375 3.7499 li
298.5 3.62497 li
298.625 3.7499 li
f
297.875 3.7499 mo
297.625 3.7499 li
297.75 3.62497 li
297.875 3.7499 li
f
297.125 3.7499 mo
296.875 3.7499 li
297 3.62497 li
297.125 3.7499 li
f
296.375 3.7499 mo
296.125 3.7499 li
296.25 3.62497 li
296.375 3.7499 li
f
295.625 3.7499 mo
295.375 3.7499 li
295.5 3.62497 li
295.625 3.7499 li
f
294.875 3.7499 mo
294.625 3.7499 li
294.75 3.62497 li
294.875 3.7499 li
f
294.125 3.7499 mo
293.875 3.7499 li
294 3.62497 li
294.125 3.7499 li
f
293.375 3.7499 mo
293.125 3.7499 li
293.25 3.62497 li
293.375 3.7499 li
f
292.625 3.7499 mo
292.375 3.7499 li
292.5 3.62497 li
292.625 3.7499 li
f
291.875 3.7499 mo
291.625 3.7499 li
291.75 3.62497 li
291.875 3.7499 li
f
291.125 3.7499 mo
290.875 3.7499 li
291 3.62497 li
291.125 3.7499 li
f
290.375 3.7499 mo
290.125 3.7499 li
290.25 3.62497 li
290.375 3.7499 li
f
289.625 3.7499 mo
289.375 3.7499 li
289.5 3.62497 li
289.625 3.7499 li
f
288.875 3.7499 mo
288.625 3.7499 li
288.75 3.62497 li
288.875 3.7499 li
f
288.125 3.7499 mo
287.875 3.7499 li
288 3.62497 li
288.125 3.7499 li
f
287.375 3.7499 mo
287.125 3.7499 li
287.25 3.62497 li
287.375 3.7499 li
f
286.625 3.7499 mo
286.375 3.7499 li
286.5 3.62497 li
286.625 3.7499 li
f
285.875 3.7499 mo
285.625 3.7499 li
285.75 3.62497 li
285.875 3.7499 li
f
285.125 3.7499 mo
284.875 3.7499 li
285 3.62497 li
285.125 3.7499 li
f
284.375 3.7499 mo
284.125 3.7499 li
284.25 3.62497 li
284.375 3.7499 li
f
283.625 3.7499 mo
283.375 3.7499 li
283.5 3.62497 li
283.625 3.7499 li
f
282.875 3.7499 mo
282.625 3.7499 li
282.75 3.62497 li
282.875 3.7499 li
f
282.125 3.7499 mo
281.875 3.7499 li
282 3.62497 li
282.125 3.7499 li
f
281.375 3.7499 mo
281.125 3.7499 li
281.25 3.62497 li
281.375 3.7499 li
f
280.625 3.7499 mo
280.375 3.7499 li
280.5 3.62497 li
280.625 3.7499 li
f
279.875 3.7499 mo
279.625 3.7499 li
279.75 3.62497 li
279.875 3.7499 li
f
279.125 3.7499 mo
278.875 3.7499 li
279 3.62497 li
279.125 3.7499 li
f
278.375 3.7499 mo
278.125 3.7499 li
278.25 3.62497 li
278.375 3.7499 li
f
277.625 3.7499 mo
277.375 3.7499 li
277.5 3.62497 li
277.625 3.7499 li
f
276.875 3.7499 mo
276.625 3.7499 li
276.75 3.62497 li
276.875 3.7499 li
f
276.125 3.7499 mo
275.875 3.7499 li
276 3.62497 li
276.125 3.7499 li
f
275.375 3.7499 mo
275.125 3.7499 li
275.25 3.62497 li
275.375 3.7499 li
f
274.625 3.7499 mo
274.375 3.7499 li
274.5 3.62497 li
274.625 3.7499 li
f
273.875 3.7499 mo
273.625 3.7499 li
273.75 3.62497 li
273.875 3.7499 li
f
273.125 3.7499 mo
272.875 3.7499 li
273 3.62497 li
273.125 3.7499 li
f
272.375 3.7499 mo
272.125 3.7499 li
272.25 3.62497 li
272.375 3.7499 li
f
271.625 3.7499 mo
271.375 3.7499 li
271.5 3.62497 li
271.625 3.7499 li
f
grestore
gsave
269.25 27 mo
312 27 li
312 2.25007 li
269.25 2.25007 li
269.25 27 li
eclp
268.54 27.39 mo
312.56 27.39 li
312.56 1.79602 li
268.54 1.79602 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [290.55 473.61 290.55 499.2 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /9 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
290.55 473.61 290.55 499.2 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/9 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.25 lw
[0 .75 ] 0 dsh
269.25 27 mo
312 27 li
312 2.25 li
269.25 2.25 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI gcheck setglobal} if
2 322 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/C 18 def
end
HIBBAA+CALIBRI /Encoding get
dup 67 /C put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI*1 
[40{/.notdef}rp /parenleft /parenright 21{/.notdef}rp /question 3{/.notdef}rp /C 188{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
282.94 17.29 mo
(C)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI gcheck setglobal} if
2 1252 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/P 87 def
end
HIBBAA+CALIBRI /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI*1 
[40{/.notdef}rp /parenleft /parenright 21{/.notdef}rp /question 3{/.notdef}rp /C 12{/.notdef}rp 
/P 175{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
287.739 17.29 mo
(P)sh
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI gcheck setglobal} if
2 1494 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/U 104 def
end
HIBBAA+CALIBRI /Encoding get
dup 85 /U put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI*1 
[40{/.notdef}rp /parenleft /parenright 21{/.notdef}rp /question 3{/.notdef}rp /C 12{/.notdef}rp 
/P 4{/.notdef}rp /U 170{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
292.388 17.29 mo
(U)sh
411 28.5 mo
368.25 28.5 li
368.25 28.3749 li
368.25 27.8749 li
368.25 27.6251 li
368.25 27.1249 li
368.25 26.875 li
368.25 26.3749 li
368.25 26.125 li
368.25 25.6249 li
368.25 25.375 li
368.25 24.8751 li
368.25 24.625 li
368.25 24.125 li
368.25 23.875 li
368.25 23.375 li
368.25 23.1249 li
368.25 22.625 li
368.25 22.3749 li
368.25 21.875 li
368.25 21.6249 li
368.25 21.1249 li
368.25 20.8751 li
368.25 20.3749 li
368.25 20.125 li
368.25 19.6249 li
368.25 19.375 li
368.25 18.8749 li
368.25 18.625 li
368.25 18.1251 li
368.25 17.875 li
368.25 17.375 li
368.25 17.125 li
368.25 16.625 li
368.25 16.3749 li
368.25 15.875 li
368.25 15.6249 li
368.25 15.125 li
368.25 14.8749 li
368.25 14.3749 li
368.25 14.1249 li
368.25 13.6249 li
368.25 13.3751 li
368.25 12.8749 li
368.25 12.625 li
368.25 12.1249 li
368.25 11.875 li
368.25 11.3751 li
368.25 11.125 li
368.25 10.625 li
368.25 10.375 li
368.25 9.87502 li
368.25 9.62494 li
368.25 9.125 li
368.25 8.87492 li
368.25 8.37497 li
368.25 8.1249 li
368.25 7.62495 li
368.25 7.37487 li
368.25 6.87493 li
368.25 6.62506 li
368.25 6.1249 li
368.25 5.87504 li
368.25 5.37488 li
368.25 5.12502 li
368.25 4.62507 li
368.25 4.49993 li
368.375 4.49993 li
368.875 4.49993 li
369.125 4.49993 li
369.625 4.49993 li
369.875 4.49993 li
370.375 4.49993 li
370.625 4.49993 li
371.125 4.49993 li
371.375 4.49993 li
371.875 4.49993 li
372.125 4.49993 li
372.625 4.49993 li
372.875 4.49993 li
373.375 4.49993 li
373.625 4.49993 li
374.125 4.49993 li
374.375 4.49993 li
374.875 4.49993 li
375.125 4.49993 li
375.625 4.49993 li
375.875 4.49993 li
376.375 4.49993 li
376.625 4.49993 li
377.125 4.49993 li
377.375 4.49993 li
377.875 4.49993 li
378.125 4.49993 li
378.625 4.49993 li
378.875 4.49993 li
379.375 4.49993 li
379.625 4.49993 li
380.125 4.49993 li
380.375 4.49993 li
380.875 4.49993 li
381.125 4.49993 li
381.625 4.49993 li
381.875 4.49993 li
382.375 4.49993 li
382.625 4.49993 li
383.125 4.49993 li
383.375 4.49993 li
383.875 4.49993 li
384.125 4.49993 li
384.625 4.49993 li
384.875 4.49993 li
385.375 4.49993 li
385.625 4.49993 li
386.125 4.49993 li
386.375 4.49993 li
386.875 4.49993 li
387.125 4.49993 li
387.625 4.49993 li
387.875 4.49993 li
388.375 4.49993 li
388.625 4.49993 li
389.125 4.49993 li
389.375 4.49993 li
389.875 4.49993 li
390.125 4.49993 li
390.625 4.49993 li
390.875 4.49993 li
391.375 4.49993 li
391.625 4.49993 li
392.125 4.49993 li
392.375 4.49993 li
392.875 4.49993 li
393.125 4.49993 li
393.625 4.49993 li
393.875 4.49993 li
394.375 4.49993 li
394.625 4.49993 li
395.125 4.49993 li
395.375 4.49993 li
395.875 4.49993 li
396.125 4.49993 li
396.625 4.49993 li
396.875 4.49993 li
397.375 4.49993 li
397.625 4.49993 li
398.125 4.49993 li
398.375 4.49993 li
398.875 4.49993 li
399.125 4.49993 li
399.625 4.49993 li
399.875 4.49993 li
400.375 4.49993 li
400.625 4.49993 li
401.125 4.49993 li
401.375 4.49993 li
401.875 4.49993 li
402.125 4.49993 li
402.625 4.49993 li
402.875 4.49993 li
403.375 4.49993 li
403.625 4.49993 li
404.125 4.49993 li
404.375 4.49993 li
404.875 4.49993 li
405.125 4.49993 li
405.625 4.49993 li
405.875 4.49993 li
406.375 4.49993 li
406.625 4.49993 li
407.125 4.49993 li
407.375 4.49993 li
407.875 4.49993 li
408.125 4.49993 li
408.625 4.49993 li
408.875 4.49993 li
409.375 4.49993 li
409.625 4.49993 li
410.125 4.49993 li
410.375 4.49993 li
410.875 4.49993 li
411 4.49993 li
411 28.5 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
368.25 4.49993 mo
368.25 28.5 li
411 28.5 li
411 4.49993 li
368.25 4.49993 li
0 -95.2499 mo
843 -95.2499 li
843 501 li
0 501 li
0 -95.2499 li
eclp
411 28.625 mo
410.875 28.5 li
411 28.5 li
411 28.3751 li
411.125 28.5 li
411 28.625 li
410.25 28.625 mo
410.125 28.5 li
410.375 28.5 li
410.25 28.625 li
409.5 28.625 mo
409.375 28.5 li
409.625 28.5 li
409.5 28.625 li
408.75 28.625 mo
408.625 28.5 li
408.875 28.5 li
408.75 28.625 li
408 28.625 mo
407.875 28.5 li
408.125 28.5 li
408 28.625 li
407.25 28.625 mo
407.125 28.5 li
407.375 28.5 li
407.25 28.625 li
406.5 28.625 mo
406.375 28.5 li
406.625 28.5 li
406.5 28.625 li
405.75 28.625 mo
405.625 28.5 li
405.875 28.5 li
405.75 28.625 li
405 28.625 mo
404.875 28.5 li
405.125 28.5 li
405 28.625 li
404.25 28.625 mo
404.125 28.5 li
404.375 28.5 li
404.25 28.625 li
403.5 28.625 mo
403.375 28.5 li
403.625 28.5 li
403.5 28.625 li
402.75 28.625 mo
402.625 28.5 li
402.875 28.5 li
402.75 28.625 li
402 28.625 mo
401.875 28.5 li
402.125 28.5 li
402 28.625 li
401.25 28.625 mo
401.125 28.5 li
401.375 28.5 li
401.25 28.625 li
400.5 28.625 mo
400.375 28.5 li
400.625 28.5 li
400.5 28.625 li
399.75 28.625 mo
399.625 28.5 li
399.875 28.5 li
399.75 28.625 li
399 28.625 mo
398.875 28.5 li
399.125 28.5 li
399 28.625 li
398.25 28.625 mo
398.125 28.5 li
398.375 28.5 li
398.25 28.625 li
397.5 28.625 mo
397.375 28.5 li
397.625 28.5 li
397.5 28.625 li
396.75 28.625 mo
396.625 28.5 li
396.875 28.5 li
396.75 28.625 li
396 28.625 mo
395.875 28.5 li
396.125 28.5 li
396 28.625 li
395.25 28.625 mo
395.125 28.5 li
395.375 28.5 li
395.25 28.625 li
394.5 28.625 mo
394.375 28.5 li
394.625 28.5 li
394.5 28.625 li
393.75 28.625 mo
393.625 28.5 li
393.875 28.5 li
393.75 28.625 li
393 28.625 mo
392.875 28.5 li
393.125 28.5 li
393 28.625 li
392.25 28.625 mo
392.125 28.5 li
392.375 28.5 li
392.25 28.625 li
391.5 28.625 mo
391.375 28.5 li
391.625 28.5 li
391.5 28.625 li
390.75 28.625 mo
390.625 28.5 li
390.875 28.5 li
390.75 28.625 li
390 28.625 mo
389.875 28.5 li
390.125 28.5 li
390 28.625 li
389.25 28.625 mo
389.125 28.5 li
389.375 28.5 li
389.25 28.625 li
388.5 28.625 mo
388.375 28.5 li
388.625 28.5 li
388.5 28.625 li
387.75 28.625 mo
387.625 28.5 li
387.875 28.5 li
387.75 28.625 li
387 28.625 mo
386.875 28.5 li
387.125 28.5 li
387 28.625 li
386.25 28.625 mo
386.125 28.5 li
386.375 28.5 li
386.25 28.625 li
385.5 28.625 mo
385.375 28.5 li
385.625 28.5 li
385.5 28.625 li
384.75 28.625 mo
384.625 28.5 li
384.875 28.5 li
384.75 28.625 li
384 28.625 mo
383.875 28.5 li
384.125 28.5 li
384 28.625 li
383.25 28.625 mo
383.125 28.5 li
383.375 28.5 li
383.25 28.625 li
382.5 28.625 mo
382.375 28.5 li
382.625 28.5 li
382.5 28.625 li
381.75 28.625 mo
381.625 28.5 li
381.875 28.5 li
381.75 28.625 li
381 28.625 mo
380.875 28.5 li
381.125 28.5 li
381 28.625 li
380.25 28.625 mo
380.125 28.5 li
380.375 28.5 li
380.25 28.625 li
379.5 28.625 mo
379.375 28.5 li
379.625 28.5 li
379.5 28.625 li
378.75 28.625 mo
378.625 28.5 li
378.875 28.5 li
378.75 28.625 li
378 28.625 mo
377.875 28.5 li
378.125 28.5 li
378 28.625 li
377.25 28.625 mo
377.125 28.5 li
377.375 28.5 li
377.25 28.625 li
376.5 28.625 mo
376.375 28.5 li
376.625 28.5 li
376.5 28.625 li
375.75 28.625 mo
375.625 28.5 li
375.875 28.5 li
375.75 28.625 li
375 28.625 mo
374.875 28.5 li
375.125 28.5 li
375 28.625 li
374.25 28.625 mo
374.125 28.5 li
374.375 28.5 li
374.25 28.625 li
373.5 28.625 mo
373.375 28.5 li
373.625 28.5 li
373.5 28.625 li
372.75 28.625 mo
372.625 28.5 li
372.875 28.5 li
372.75 28.625 li
372 28.625 mo
371.875 28.5 li
372.125 28.5 li
372 28.625 li
371.25 28.625 mo
371.125 28.5 li
371.375 28.5 li
371.25 28.625 li
370.5 28.625 mo
370.375 28.5 li
370.625 28.5 li
370.5 28.625 li
369.75 28.625 mo
369.625 28.5 li
369.875 28.5 li
369.75 28.625 li
369 28.625 mo
368.875 28.5 li
369.125 28.5 li
369 28.625 li
368.25 28.625 mo
368.125 28.5 li
368.25 28.3749 li
368.25 28.5 li
368.375 28.5 li
368.25 28.625 li
f
411 27.8749 mo
411 27.8749 li
411 27.6251 li
411.125 27.75 li
411 27.8749 li
368.25 27.8749 mo
368.125 27.75 li
368.25 27.6251 li
368.25 27.8749 li
f
411 27.1251 mo
411 27.1251 li
411 26.875 li
411.125 27 li
411 27.1251 li
368.25 27.1249 mo
368.125 27 li
368.25 26.875 li
368.25 27.1249 li
f
411 26.3751 mo
411 26.3751 li
411 26.125 li
411.125 26.25 li
411 26.3751 li
368.25 26.3749 mo
368.125 26.25 li
368.25 26.125 li
368.25 26.3749 li
f
411 25.6251 mo
411 25.6251 li
411 25.375 li
411.125 25.4999 li
411 25.6251 li
368.25 25.6249 mo
368.125 25.4999 li
368.25 25.375 li
368.25 25.6249 li
f
411 24.8751 mo
411 24.8751 li
411 24.625 li
411.125 24.7501 li
411 24.8751 li
368.25 24.8751 mo
368.125 24.7499 li
368.25 24.625 li
368.25 24.8751 li
f
411 24.125 mo
411 24.125 li
411 23.875 li
411.125 24.0001 li
411 24.125 li
368.25 24.125 mo
368.125 23.9999 li
368.25 23.875 li
368.25 24.125 li
f
411 23.375 mo
411 23.375 li
411 23.1249 li
411.125 23.2501 li
411 23.375 li
368.25 23.375 mo
368.125 23.2501 li
368.25 23.1249 li
368.25 23.375 li
f
411 22.625 mo
411 22.625 li
411 22.3751 li
411.125 22.5001 li
411 22.625 li
368.25 22.625 mo
368.125 22.5001 li
368.25 22.3749 li
368.25 22.625 li
f
411 21.875 mo
411 21.875 li
411 21.6251 li
411.125 21.75 li
411 21.875 li
368.25 21.875 mo
368.125 21.75 li
368.25 21.6249 li
368.25 21.875 li
f
411 21.1249 mo
411 21.1249 li
411 20.8751 li
411.125 21 li
411 21.1249 li
368.25 21.1249 mo
368.125 21 li
368.25 20.8751 li
368.25 21.1249 li
f
411 20.3751 mo
411 20.3751 li
411 20.125 li
411.125 20.25 li
411 20.3751 li
368.25 20.3749 mo
368.125 20.25 li
368.25 20.125 li
368.25 20.3749 li
f
411 19.6251 mo
411 19.6251 li
411 19.375 li
411.125 19.5 li
411 19.6251 li
368.25 19.6249 mo
368.125 19.5 li
368.25 19.375 li
368.25 19.6249 li
f
411 18.8751 mo
411 18.8751 li
411 18.625 li
411.125 18.7499 li
411 18.8751 li
368.25 18.8749 mo
368.125 18.7499 li
368.25 18.625 li
368.25 18.8749 li
f
411 18.1251 mo
411 18.1251 li
411 17.875 li
411.125 18.0001 li
411 18.1251 li
368.25 18.1251 mo
368.125 17.9999 li
368.25 17.875 li
368.25 18.1251 li
f
411 17.375 mo
411 17.375 li
411 17.125 li
411.125 17.2501 li
411 17.375 li
368.25 17.375 mo
368.125 17.2499 li
368.25 17.125 li
368.25 17.375 li
f
411 16.625 mo
411 16.625 li
411 16.3749 li
411.125 16.5001 li
411 16.625 li
368.25 16.625 mo
368.125 16.4999 li
368.25 16.3749 li
368.25 16.625 li
f
411 15.875 mo
411 15.875 li
411 15.6251 li
411.125 15.7501 li
411 15.875 li
368.25 15.875 mo
368.125 15.7501 li
368.25 15.6249 li
368.25 15.875 li
f
411 15.125 mo
411 15.125 li
411 14.8751 li
411.125 15 li
411 15.125 li
368.25 15.125 mo
368.125 15 li
368.25 14.8749 li
368.25 15.125 li
f
411 14.3749 mo
411 14.3749 li
411 14.1251 li
411.125 14.25 li
411 14.3749 li
368.25 14.3749 mo
368.125 14.25 li
368.25 14.1249 li
368.25 14.3749 li
f
411 13.6251 mo
411 13.6251 li
411 13.3751 li
411.125 13.5 li
411 13.6251 li
368.25 13.6249 mo
368.125 13.5 li
368.25 13.3751 li
368.25 13.6249 li
f
411 12.8751 mo
411 12.8751 li
411 12.625 li
411.125 12.75 li
411 12.8751 li
368.25 12.8749 mo
368.125 12.75 li
368.25 12.625 li
368.25 12.8749 li
f
411 12.1251 mo
411 12.1251 li
411 11.875 li
411.125 11.9999 li
411 12.1251 li
368.25 12.1249 mo
368.125 11.9999 li
368.25 11.875 li
368.25 12.1249 li
f
411 11.3751 mo
411 11.3751 li
411 11.125 li
411.125 11.2501 li
411 11.3751 li
368.25 11.3751 mo
368.125 11.2499 li
368.25 11.125 li
368.25 11.3751 li
f
411 10.625 mo
411 10.625 li
411 10.375 li
411.125 10.5001 li
411 10.625 li
368.25 10.625 mo
368.125 10.4999 li
368.25 10.375 li
368.25 10.625 li
f
411 9.87502 mo
411 9.87502 li
411 9.62494 li
411.125 9.75008 li
411 9.87502 li
368.25 9.87502 mo
368.125 9.74987 li
368.25 9.62494 li
368.25 9.87502 li
f
411 9.125 mo
411 9.125 li
411 8.87513 li
411.125 9.00006 li
411 9.125 li
368.25 9.125 mo
368.125 9.00006 li
368.25 8.87492 li
368.25 9.125 li
f
411 8.37497 mo
411 8.37497 li
411 8.12511 li
411.125 8.25004 li
411 8.37497 li
368.25 8.37497 mo
368.125 8.25004 li
368.25 8.1249 li
368.25 8.37497 li
f
411 7.62495 mo
411 7.62495 li
411 7.37508 li
411.125 7.50002 li
411 7.62495 li
368.25 7.62495 mo
368.125 7.50002 li
368.25 7.37487 li
368.25 7.62495 li
f
411 6.87493 mo
411 6.87493 li
411 6.62506 li
411.125 6.74999 li
411 6.87493 li
368.25 6.87493 mo
368.125 6.74999 li
368.25 6.62506 li
368.25 6.87493 li
f
411 6.12512 mo
411 6.12512 li
411 5.87504 li
411.125 5.99997 li
411 6.12512 li
368.25 6.1249 mo
368.125 5.99997 li
368.25 5.87504 li
368.25 6.1249 li
f
411 5.37509 mo
411 5.37509 li
411 5.12502 li
411.125 5.24995 li
411 5.37509 li
368.25 5.37488 mo
368.125 5.24995 li
368.25 5.12502 li
368.25 5.37488 li
f
411 4.62507 mo
411 4.62507 li
411 4.49993 li
410.875 4.49993 li
411 4.37499 li
411.125 4.49993 li
411 4.62507 li
f
368.25 4.62507 mo
368.125 4.49993 li
368.25 4.37499 li
368.375 4.49993 li
368.25 4.49993 li
368.25 4.62507 li
f
410.375 4.49993 mo
410.125 4.49993 li
410.25 4.37499 li
410.375 4.49993 li
f
409.625 4.49993 mo
409.375 4.49993 li
409.5 4.37499 li
409.625 4.49993 li
f
408.875 4.49993 mo
408.625 4.49993 li
408.75 4.37499 li
408.875 4.49993 li
f
408.125 4.49993 mo
407.875 4.49993 li
408 4.37499 li
408.125 4.49993 li
f
407.375 4.49993 mo
407.125 4.49993 li
407.25 4.37499 li
407.375 4.49993 li
f
406.625 4.49993 mo
406.375 4.49993 li
406.5 4.37499 li
406.625 4.49993 li
f
405.875 4.49993 mo
405.625 4.49993 li
405.75 4.37499 li
405.875 4.49993 li
f
405.125 4.49993 mo
404.875 4.49993 li
405 4.37499 li
405.125 4.49993 li
f
404.375 4.49993 mo
404.125 4.49993 li
404.25 4.37499 li
404.375 4.49993 li
f
403.625 4.49993 mo
403.375 4.49993 li
403.5 4.37499 li
403.625 4.49993 li
f
402.875 4.49993 mo
402.625 4.49993 li
402.75 4.37499 li
402.875 4.49993 li
f
402.125 4.49993 mo
401.875 4.49993 li
402 4.37499 li
402.125 4.49993 li
f
401.375 4.49993 mo
401.125 4.49993 li
401.25 4.37499 li
401.375 4.49993 li
f
400.625 4.49993 mo
400.375 4.49993 li
400.5 4.37499 li
400.625 4.49993 li
f
399.875 4.49993 mo
399.625 4.49993 li
399.75 4.37499 li
399.875 4.49993 li
f
399.125 4.49993 mo
398.875 4.49993 li
399 4.37499 li
399.125 4.49993 li
f
398.375 4.49993 mo
398.125 4.49993 li
398.25 4.37499 li
398.375 4.49993 li
f
397.625 4.49993 mo
397.375 4.49993 li
397.5 4.37499 li
397.625 4.49993 li
f
396.875 4.49993 mo
396.625 4.49993 li
396.75 4.37499 li
396.875 4.49993 li
f
396.125 4.49993 mo
395.875 4.49993 li
396 4.37499 li
396.125 4.49993 li
f
395.375 4.49993 mo
395.125 4.49993 li
395.25 4.37499 li
395.375 4.49993 li
f
394.625 4.49993 mo
394.375 4.49993 li
394.5 4.37499 li
394.625 4.49993 li
f
393.875 4.49993 mo
393.625 4.49993 li
393.75 4.37499 li
393.875 4.49993 li
f
393.125 4.49993 mo
392.875 4.49993 li
393 4.37499 li
393.125 4.49993 li
f
392.375 4.49993 mo
392.125 4.49993 li
392.25 4.37499 li
392.375 4.49993 li
f
391.625 4.49993 mo
391.375 4.49993 li
391.5 4.37499 li
391.625 4.49993 li
f
390.875 4.49993 mo
390.625 4.49993 li
390.75 4.37499 li
390.875 4.49993 li
f
390.125 4.49993 mo
389.875 4.49993 li
390 4.37499 li
390.125 4.49993 li
f
389.375 4.49993 mo
389.125 4.49993 li
389.25 4.37499 li
389.375 4.49993 li
f
388.625 4.49993 mo
388.375 4.49993 li
388.5 4.37499 li
388.625 4.49993 li
f
387.875 4.49993 mo
387.625 4.49993 li
387.75 4.37499 li
387.875 4.49993 li
f
387.125 4.49993 mo
386.875 4.49993 li
387 4.37499 li
387.125 4.49993 li
f
386.375 4.49993 mo
386.125 4.49993 li
386.25 4.37499 li
386.375 4.49993 li
f
385.625 4.49993 mo
385.375 4.49993 li
385.5 4.37499 li
385.625 4.49993 li
f
384.875 4.49993 mo
384.625 4.49993 li
384.75 4.37499 li
384.875 4.49993 li
f
384.125 4.49993 mo
383.875 4.49993 li
384 4.37499 li
384.125 4.49993 li
f
383.375 4.49993 mo
383.125 4.49993 li
383.25 4.37499 li
383.375 4.49993 li
f
382.625 4.49993 mo
382.375 4.49993 li
382.5 4.37499 li
382.625 4.49993 li
f
381.875 4.49993 mo
381.625 4.49993 li
381.75 4.37499 li
381.875 4.49993 li
f
381.125 4.49993 mo
380.875 4.49993 li
381 4.37499 li
381.125 4.49993 li
f
380.375 4.49993 mo
380.125 4.49993 li
380.25 4.37499 li
380.375 4.49993 li
f
379.625 4.49993 mo
379.375 4.49993 li
379.5 4.37499 li
379.625 4.49993 li
f
378.875 4.49993 mo
378.625 4.49993 li
378.75 4.37499 li
378.875 4.49993 li
f
378.125 4.49993 mo
377.875 4.49993 li
378 4.37499 li
378.125 4.49993 li
f
377.375 4.49993 mo
377.125 4.49993 li
377.25 4.37499 li
377.375 4.49993 li
f
376.625 4.49993 mo
376.375 4.49993 li
376.5 4.37499 li
376.625 4.49993 li
f
375.875 4.49993 mo
375.625 4.49993 li
375.75 4.37499 li
375.875 4.49993 li
f
375.125 4.49993 mo
374.875 4.49993 li
375 4.37499 li
375.125 4.49993 li
f
374.375 4.49993 mo
374.125 4.49993 li
374.25 4.37499 li
374.375 4.49993 li
f
373.625 4.49993 mo
373.375 4.49993 li
373.5 4.37499 li
373.625 4.49993 li
f
372.875 4.49993 mo
372.625 4.49993 li
372.75 4.37499 li
372.875 4.49993 li
f
372.125 4.49993 mo
371.875 4.49993 li
372 4.37499 li
372.125 4.49993 li
f
371.375 4.49993 mo
371.125 4.49993 li
371.25 4.37499 li
371.375 4.49993 li
f
370.625 4.49993 mo
370.375 4.49993 li
370.5 4.37499 li
370.625 4.49993 li
f
369.875 4.49993 mo
369.625 4.49993 li
369.75 4.37499 li
369.875 4.49993 li
f
369.125 4.49993 mo
368.875 4.49993 li
369 4.37499 li
369.125 4.49993 li
f
grestore
gsave
366.75 27 mo
409.5 27 li
409.5 3.00009 li
366.75 3.00009 li
366.75 27 li
eclp
366.34 28.1 mo
410.36 28.1 li
410.36 2.50601 li
366.34 2.50601 li
cp
level3{
gsave
[1 0 0 -1 0 501 ]ct
<<
/PatternType 2
/Shading
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [388.35 472.9 388.35 498.5 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /10 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 501 ]ct
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
388.35 472.9 388.35 498.5 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/10 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
366.75 27 mo
409.5 27 li
409.5 3 li
366.75 3 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI gcheck setglobal} if
2 572 39 <0001005bffee04780520003f00a2401d1c1c0f181810014d18100f014d18
100d014d180a0c014d18100b014d18b80211400d00bf2701202740276027
03270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d0fb8ffee
b30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab42222392f
3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4ed111239
2fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f313001140e02
23222e0223220e0215141e02333236371121222635343e023321321e0215
11140e0423222e0235343e0233321e04047804080c070c385e835a6baa76
3f457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196ec
a3565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d
1d01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a
23291a22>HIBBAA+CALIBRI AddT42Char 
HIBBAA+CALIBRI /CharStrings get begin
/G 39 def
end
HIBBAA+CALIBRI /Encoding get
dup 71 /G put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BSVNYA+CALIBRI*1 
[40{/.notdef}rp /parenleft /parenright 21{/.notdef}rp /question 3{/.notdef}rp /C 3{/.notdef}rp 
/G 8{/.notdef}rp /P 4{/.notdef}rp /U 170{/.notdef}rp]
BSVNYA+CALIBRI nf
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
380.3 18 mo
(G)sh
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
385.978 18 mo
(P)sh
1 /1 /CSD get_res sepcs
1 sep
BSVNYA+CALIBRI*1 [9 0 0 -9 0 0 ]msf
390.627 18 mo
(U)sh
1 lw
[0 3 ] 0 dsh
334.5 1.5 mo
331.5 261.75 li
1 /1 /CSD get_res sepcs
.749 sep
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 ]]
] del_res
/BSVNYB+CALIBRI,Italic*1 uf
/BSVNYB+CALIBRI,Italic uf
/QJJAAA+CALIBRI,Italic uf
/BSVNYA+CALIBRI*1 uf
/BSVNYA+CALIBRI uf
/HIBBAA+CALIBRI uf
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H-Identity-H uf
/BSVNXZ+#cb#ce#cc#e5-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
